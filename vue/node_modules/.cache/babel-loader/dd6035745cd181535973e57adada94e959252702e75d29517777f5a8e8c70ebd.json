{"ast":null,"code":"//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n//例如：import 《组件名称》 from '《组件路径》';\n\nexport default {\n  //import引入的组件需要注入到对象中才能使用\n  components: {},\n  props: {\n    isCollapse: Boolean,\n    logoTextShow: Boolean\n  },\n  data() {\n    //这里存放数据\n    return {\n      menus: localStorage.getItem(\"menus\") ? JSON.parse(localStorage.getItem(\"menus\")) : [],\n      opens: localStorage.getItem(\"menus\") ? JSON.parse(localStorage.getItem(\"menus\")).map(v => v.id + '') : [],\n      myPath: this.$route.path,\n      isCollapse: false,\n      expandFalg: false,\n      menuList: [],\n      openeds: ['1']\n    };\n  },\n  //代码放在导航菜单组件所在的页面里\n  watch: {\n    $route: function (to, from) {\n      //console.log(this.$route);\n      //设置导航菜单高亮的路径为前两段路径 You，5 hours ago。子页面，\n      if (this.$route.meta && this.$route.meta.name) {\n        this.myPath = this.$route.meta.name;\n      } else {\n        this.myPath = this.$route.matched[1].path; //看你的情况而定!!\n      }\n    }\n  }\n};","map":{"version":3,"names":["components","props","isCollapse","Boolean","logoTextShow","data","menus","localStorage","getItem","JSON","parse","opens","map","v","id","myPath","$route","path","expandFalg","menuList","openeds","watch","to","from","meta","name","matched"],"sources":["src/components/Aside.vue"],"sourcesContent":["<template>\n    <!--el-menu属性（所有菜单展开）:default-openeds=\"opens\"-->\n    <el-menu\n             style=\"height: 100%;\"\n             background-color=\"rgb(48,65,86)\"\n             text-color=\"#fff\"\n             router\n             :collapse-transition=\"false\"\n             :collapse=\"isCollapse\"\n             :unique-opened=\"true\"\n             :default-active=\"myPath\"\n    >\n        <div style=\"height: 60px;line-height: 60px;text-align: center;\">\n            <img src=\"../assets/logo200.png\" style=\"width: 20px;position: relative;top: 5px\" alt=\"\">\n            <b style=\"color:white\" v-show=\"logoTextShow\">后台管理系统</b>\n        </div>\n        <div v-for=\"item in menus\" :key=\"item.id\">\n            <div v-if=\"item.path\">\n                <el-menu-item :index=\"item.path\">\n                    <i :class=\"item.icon\"></i>\n                    <span slot=\"title\">{{ item.name }}</span>\n                </el-menu-item>\n            </div>\n            <div v-else>\n                <el-submenu :index=\"item.id + ''\">\n                    <template slot=\"title\">\n                        <i :class=\"item.icon\"></i>\n                        <span slot=\"title\">{{ item.name }}</span>\n                    </template>\n                    <div  v-for=\"subItem in item.children\" :key=\"subItem.id\">\n                        <el-menu-item :index=\"subItem.path\">\n                            <i :class=\"subItem.icon\"></i>\n                            <span slot=\"title\">{{ subItem.name }}</span>\n                        </el-menu-item>\n                    </div>\n                </el-submenu>\n            </div>\n        </div>\n    </el-menu>\n\n</template>\n\n<script>\n    //这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）\n    //例如：import 《组件名称》 from '《组件路径》';\n\n    export default {\n        //import引入的组件需要注入到对象中才能使用\n        components: {},\n        props: {\n            isCollapse: Boolean,\n            logoTextShow: Boolean\n        },\n        data() {\n            //这里存放数据\n            return {\n                menus: localStorage.getItem(\"menus\") ? JSON.parse(localStorage.getItem(\"menus\")) : [],\n                opens: localStorage.getItem(\"menus\") ? JSON.parse(localStorage.getItem(\"menus\")).map(v => v.id + '') : [],\n              myPath:this.$route.path,\n              isCollapse: false,\n              expandFalg:false,\n              menuList: [],\n              openeds: ['1'],\n\n            };\n        },\n        //代码放在导航菜单组件所在的页面里\n        watch: {\n          $route: function(to, from) {\n            //console.log(this.$route);\n            //设置导航菜单高亮的路径为前两段路径 You，5 hours ago。子页面，\n            if (this.$route.meta && this.$route.meta.name) {\n              this.myPath = this.$route.meta.name\n            } else {\n              this.myPath = this.$route.matched[1].path; //看你的情况而定!!\n            }\n          }\n        },\n    };\n</script>\n<style scoped>\n    /*子菜单悬停颜色*/\n    .el-menu-item:hover {\n        background-color: #001528 !important;\n    }\n\n    /*菜单父级悬停颜色*/\n    .el-submenu /deep/ .el-submenu__title:hover {\n        background-color: rgb(45, 61, 81) !important;\n    }\n\n    /*.el-menu-item.is-active {*/\n    /*    background-color: #001528 !important;*/\n    /*}*/\n    /*子菜单的背景色*/\n    .el-menu-item {\n        background-color: #1F2D3D\n    }\n</style>\n"],"mappings":"AA2CA;AACA;;AAEA;EACA;EACAA,UAAA;EACAC,KAAA;IACAC,UAAA,EAAAC,OAAA;IACAC,YAAA,EAAAD;EACA;EACAE,KAAA;IACA;IACA;MACAC,KAAA,EAAAC,YAAA,CAAAC,OAAA,YAAAC,IAAA,CAAAC,KAAA,CAAAH,YAAA,CAAAC,OAAA;MACAG,KAAA,EAAAJ,YAAA,CAAAC,OAAA,YAAAC,IAAA,CAAAC,KAAA,CAAAH,YAAA,CAAAC,OAAA,WAAAI,GAAA,CAAAC,CAAA,IAAAA,CAAA,CAAAC,EAAA;MACAC,MAAA,OAAAC,MAAA,CAAAC,IAAA;MACAf,UAAA;MACAgB,UAAA;MACAC,QAAA;MACAC,OAAA;IAEA;EACA;EACA;EACAC,KAAA;IACAL,MAAA,WAAAA,CAAAM,EAAA,EAAAC,IAAA;MACA;MACA;MACA,SAAAP,MAAA,CAAAQ,IAAA,SAAAR,MAAA,CAAAQ,IAAA,CAAAC,IAAA;QACA,KAAAV,MAAA,QAAAC,MAAA,CAAAQ,IAAA,CAAAC,IAAA;MACA;QACA,KAAAV,MAAA,QAAAC,MAAA,CAAAU,OAAA,IAAAT,IAAA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}