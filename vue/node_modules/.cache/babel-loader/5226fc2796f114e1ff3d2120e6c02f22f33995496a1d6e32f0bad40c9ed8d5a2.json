{"ast":null,"code":"import qs from \"qs\";\nexport default {\n  components: {},\n  props: {},\n  data() {\n    return {\n      roleid: [],\n      dialogFormVisible: false,\n      //新增的对话框\n      multipleSelection: [],\n      //批量删除传递id\n      form: {},\n      //新增的表单\n      roles: [],\n      //角色\n      tableData: [],\n      //表格数据\n      total: 0,\n      pagequery: {\n        //分页查询条件\n        pageNum: 1,\n        pageSize: 5,\n        username: \"\",\n        email: \"\",\n        address: \"\"\n      },\n      courses: [],\n      vis: false,\n      stuCourses: [],\n      stuVis: false\n    };\n  },\n  computed: {},\n  watch: {},\n  methods: {\n    lookCourse(courses) {\n      this.courses = courses;\n      this.vis = true;\n    },\n    lookStuCourse(stuCourses) {\n      this.stuCourses = stuCourses;\n      this.stuVis = true;\n    },\n    //新增对话框的初始化\n    handleAdd() {\n      this.dialogFormVisible = true;\n      this.form = {};\n    },\n    //编辑对话框初始化\n    handleEdit(row) {\n      this.form = row;\n      this.roleid = row.role.map(k => k.id);\n      this.dialogFormVisible = true;\n    },\n    //新增\n    save() {\n      console.log(this.form);\n      this.form.roleid = this.roleid;\n      //this.form.role = undefined\n      this.request.post(\"/user\", this.form).then(res => {\n        if (res) {\n          this.$message.success(\"保存成功\");\n          this.dialogFormVisible = false;\n          this.load();\n        } else {\n          this.$message.error(\"保存失败\");\n        }\n      });\n    },\n    //单个删除\n    del(id) {\n      this.request.delete(\"/user/\" + id).then(res => {\n        console.log(res);\n        if (res) {\n          this.$message.success(\"删除成功\");\n          this.load();\n        } else {\n          this.$message.error(\"删除失败\");\n        }\n      });\n    },\n    //批量删除\n    delBatch() {\n      let ids = this.multipleSelection.map(v => v.id); // [{}, {}, {}] => [1,2,3]\n      if (ids.length === 0) {\n        this.$message.warning(\"请选择删除的用户\");\n        return;\n      }\n      this.request.post(\"/user/del/batch\", ids).then(res => {\n        if (res) {\n          this.$message.success(\"批量删除成功\");\n          this.load();\n        } else {\n          this.$message.error(\"批量删除失败\");\n        }\n      });\n    },\n    reset() {\n      this.pagequery = {\n        pageNum: 1,\n        pageSize: 5,\n        username: \"\",\n        email: \"\",\n        address: \"\"\n      };\n      this.load();\n    },\n    load() {\n      this.request.get(\"/user/page?\" + qs.stringify(this.pagequery)).then(res => {\n        if (res.code === 200) {\n          this.total = res.data.total;\n          this.tableData = res.data.records;\n        }\n      });\n      this.request.get(\"/role\").then(res => {\n        this.roles = res.data;\n      });\n    },\n    handleSizeChange(pageSize) {\n      console.log(pageSize);\n      this.pagequery.pageSize = pageSize;\n      this.load();\n    },\n    handleCurrentChange(pageNum) {\n      console.log(pageNum);\n      this.pagequery.pageNum = pageNum;\n      this.load();\n    },\n    handleSelectionChange(val) {\n      this.multipleSelection = val;\n    }\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {\n    this.load();\n  },\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {},\n  beforeCreate() {},\n  //生命周期 - 创建之前\n  beforeMount() {},\n  //生命周期 - 挂载之前\n  beforeUpdate() {},\n  //生命周期 - 更新之前\n  updated() {},\n  //生命周期 - 更新之后\n  beforeDestroy() {},\n  //生命周期 - 销毁之前\n  destroyed() {},\n  //生命周期 - 销毁完成\n  activated() {} //如果页面有keep-alive缓存功能，这个函数会触发\n};","map":{"version":3,"names":["qs","components","props","data","roleid","dialogFormVisible","multipleSelection","form","roles","tableData","total","pagequery","pageNum","pageSize","username","email","address","courses","vis","stuCourses","stuVis","computed","watch","methods","lookCourse","lookStuCourse","handleAdd","handleEdit","row","role","map","k","id","save","console","log","request","post","then","res","$message","success","load","error","del","delete","delBatch","ids","v","length","warning","reset","get","stringify","code","records","handleSizeChange","handleCurrentChange","handleSelectionChange","val","created","mounted","beforeCreate","beforeMount","beforeUpdate","updated","beforeDestroy","destroyed","activated"],"sources":["src/views/User.vue"],"sourcesContent":["<template>\n    <div>\n        <div style=\"margin: 10px 0\">\n            <el-input style=\"width: 200px\" placeholder=\"请输入名称\" suffix-icon=\"el-icon-search\"\n                      v-model=\"pagequery.username\"></el-input>\n            <el-input style=\"width: 200px\" placeholder=\"请输入邮箱\" suffix-icon=\"el-icon-message\"\n                      class=\"ml-5\" v-model=\"pagequery.email\"></el-input>\n            <el-input style=\"width: 200px\" placeholder=\"请输入地址\" suffix-icon=\"el-icon-position\"\n                      class=\"ml-5\" v-model=\"pagequery.address\"></el-input>\n            <el-button class=\"ml-5\" type=\"primary\" @click=\"load\">搜索</el-button>\n            <el-button class=\"ml-5\" type=\"info\" @click=\"reset\">重置</el-button>\n        </div>\n        <div style=\"margin: 10px 0\">\n            <el-button type=\"primary\" @click=\"handleAdd\">新增 <i class=\"el-icon-circle-plus-outline\"></i></el-button>\n            <el-popconfirm class=\"ml-5\"\n                           confirm-button-text='确定'\n                           cancel-button-text='我再想想'\n                           icon=\"el-icon-info\"\n                           icon-color=\"red\"\n                           title=\"您确定批量删除这些数据吗？\"\n                           @confirm=\"delBatch\"\n            >\n                <el-button type=\"danger\" slot=\"reference\">批量删除 <i class=\"el-icon-remove-outline\"></i></el-button>\n            </el-popconfirm>\n        </div>\n\n        <el-table @selection-change=\"handleSelectionChange\" :data=\"tableData\" border stripe :header-cell-style=\"{background:'#eee',color:'#000000'}\">\n            <el-table-column type=\"selection\" width=\"55\"></el-table-column>\n            <el-table-column prop=\"id\" label=\"ID\" width=\"80\"></el-table-column>\n            <el-table-column prop=\"username\" label=\"用户名\" width=\"60\"></el-table-column>\n            <el-table-column prop=\"role\"\n                    label=\"角色\"\n                    width=\"280\">\n                <template slot-scope=\"scope\">\n                        <div slot=\"reference\" class=\"name-wrapper\" >\n                            <el-tag style=\"margin-left: 5px\" v-for=\"item in scope.row.role\" size=\"medium\">{{ item.name }}</el-tag>\n                        </div>\n                </template>\n            </el-table-column>\n            <el-table-column prop=\"nickname\" label=\"昵称\" width=\"120\"></el-table-column>\n            <el-table-column prop=\"email\" width=\"160\" label=\"邮箱\"></el-table-column>\n            <el-table-column prop=\"phonenumber\" width=\"120\" label=\"电话\"></el-table-column>\n            <el-table-column prop=\"address\" label=\"地址\"></el-table-column>\n            <el-table-column label=\"操作\" width=\"280\" align=\"center\">\n                <template slot-scope=\"scope\">\n                    <el-button type=\"success\" @click=\"handleEdit(scope.row)\">编辑 <i class=\"el-icon-edit\"></i></el-button>\n                    <el-popconfirm\n                            class=\"ml-5\"\n                            confirm-button-text='确定'\n                            cancel-button-text='我再想想'\n                            icon=\"el-icon-info\"\n                            icon-color=\"red\"\n                            title=\"您确定删除吗？\"\n                            @confirm=\"del(scope.row.id)\"\n                    >\n                        <el-button type=\"danger\" slot=\"reference\">删除 <i class=\"el-icon-remove-outline\"></i></el-button>\n                    </el-popconfirm>\n                </template>\n            </el-table-column>\n        </el-table>\n        <div style=\"padding: 10px 0\">\n            <el-pagination\n                    @size-change=\"handleSizeChange\"\n                    @current-change=\"handleCurrentChange\"\n                    :current-page=\"pagequery.pageNum\"\n                    :page-sizes=\"[5, 10, 15, 20]\"\n                    :page-size=\"pagequery.pageSize\"\n                    layout=\"total, sizes, prev, pager, next, jumper\"\n                    :total=\"total\">\n            </el-pagination>\n        </div>\n        <el-dialog title=\"用户信息\" :visible.sync=\"dialogFormVisible\" width=\"30%\">\n            <el-form label-width=\"80px\" size=\"small\">\n                <el-form-item label=\"用户名\">\n                    <el-input v-model=\"form.username\" autocomplete=\"off\"></el-input>\n                </el-form-item>\n                <el-form-item label=\"角色\">\n                    <el-select v-model=\"roleid\" multiple placeholder=\"请选择角色\">\n                        <el-option\n                                v-for=\"item in roles\"\n                                :key=\"item.id\"\n                                :label=\"item.name\"\n                                :value=\"item.id\">\n                        </el-option>\n                    </el-select>\n                </el-form-item>\n                <el-form-item label=\"昵称\">\n                    <el-input v-model=\"form.nickname\" autocomplete=\"off\"></el-input>\n                </el-form-item>\n                <el-form-item label=\"邮箱\">\n                    <el-input v-model=\"form.email\" autocomplete=\"off\"></el-input>\n                </el-form-item>\n                <el-form-item label=\"电话\">\n                    <el-input v-model=\"form.phonenumber\" autocomplete=\"off\"></el-input>\n                </el-form-item>\n                <el-form-item label=\"地址\">\n                    <el-input v-model=\"form.address\" autocomplete=\"off\"></el-input>\n                </el-form-item>\n            </el-form>\n            <div slot=\"footer\" class=\"dialog-footer\">\n                <el-button @click=\"dialogFormVisible = false\">取 消</el-button>\n                <el-button type=\"primary\" @click=\"save\">确 定</el-button>\n            </div>\n        </el-dialog>\n\n\n        <el-dialog title=\"课程信息\" :visible.sync=\"vis\" width=\"30%\" >\n            <el-table :data=\"courses\" border stripe>\n                <el-table-column prop=\"name\" label=\"课程名称\"></el-table-column>\n                <el-table-column prop=\"score\" label=\"学分\"></el-table-column>\n            </el-table>\n        </el-dialog>\n\n        <el-dialog title=\"课程信息\" :visible.sync=\"stuVis\" width=\"30%\" >\n            <el-table :data=\"stuCourses\" border stripe>\n                <el-table-column prop=\"name\" label=\"课程名称\"></el-table-column>\n                <el-table-column prop=\"score\" label=\"学分\"></el-table-column>\n            </el-table>\n        </el-dialog>\n    </div>\n</template>\n\n<script>\n    import qs from \"qs\";\n\n    export default {\n        components: {},\n        props: {},\n        data() {\n            return {\n                roleid:[],\n                dialogFormVisible: false,//新增的对话框\n                multipleSelection: [],//批量删除传递id\n                form: {},//新增的表单\n                roles:[],//角色\n                tableData: [],//表格数据\n                total: 0,\n                pagequery: {  //分页查询条件\n                    pageNum: 1,\n                    pageSize: 5,\n                    username: \"\",\n                    email: \"\",\n                    address: \"\",\n                },\n                courses: [],\n                vis: false,\n                stuCourses: [],\n                stuVis: false\n            };\n        },\n        computed: {},\n        watch: {},\n        methods: {\n            lookCourse(courses) {\n                this.courses = courses\n                this.vis = true\n            },\n            lookStuCourse(stuCourses) {\n                this.stuCourses = stuCourses\n                this.stuVis = true\n            },\n            //新增对话框的初始化\n            handleAdd() {\n                this.dialogFormVisible = true\n                this.form = {}\n            },\n            //编辑对话框初始化\n            handleEdit(row) {\n                this.form = row\n                this.roleid = row.role.map(k=>k.id)\n                this.dialogFormVisible = true\n            },\n            //新增\n            save() {\n                console.log(this.form)\n                this.form.roleid = this.roleid\n                //this.form.role = undefined\n                this.request.post(\"/user\", this.form).then(res => {\n                    if (res) {\n                        this.$message.success(\"保存成功\")\n                        this.dialogFormVisible = false\n                        this.load()\n                    } else {\n                        this.$message.error(\"保存失败\")\n                    }\n                })\n            },\n            //单个删除\n            del(id) {\n                this.request.delete(\"/user/\" + id).then(res => {\n                    console.log(res)\n                    if (res) {\n                        this.$message.success(\"删除成功\")\n                        this.load()\n                    } else {\n                        this.$message.error(\"删除失败\")\n                    }\n                })\n            },\n            //批量删除\n            delBatch() {\n                let ids = this.multipleSelection.map(v => v.id)  // [{}, {}, {}] => [1,2,3]\n                if(ids.length===0){\n                    this.$message.warning(\"请选择删除的用户\")\n                    return\n                }\n                this.request.post(\"/user/del/batch\", ids).then(res => {\n                    if (res) {\n                        this.$message.success(\"批量删除成功\")\n                        this.load()\n                    } else {\n                        this.$message.error(\"批量删除失败\")\n                    }\n                })\n            },\n            reset() {\n                this.pagequery = {\n                    pageNum: 1,\n                    pageSize: 5,\n                    username: \"\",\n                    email: \"\",\n                    address: \"\",\n                }\n                this.load()\n            },\n            load() {\n                this.request.get(\"/user/page?\" + qs.stringify(this.pagequery)).then(res => {\n                    if(res.code===200){\n                        this.total = res.data.total\n                        this.tableData = res.data.records\n                    }\n                })\n                this.request.get(\"/role\").then(res=>{\n                    this.roles = res.data\n                })\n            },\n            handleSizeChange(pageSize) {\n                console.log(pageSize)\n                this.pagequery.pageSize = pageSize\n                this.load()\n            },\n            handleCurrentChange(pageNum) {\n                console.log(pageNum)\n                this.pagequery.pageNum = pageNum\n                this.load()\n            },\n            handleSelectionChange(val) {\n                this.multipleSelection = val;\n            }\n        },\n        //生命周期 - 创建完成（可以访问当前this实例）\n        created() {\n            this.load()\n        },\n        //生命周期 - 挂载完成（可以访问DOM元素）\n        mounted() {\n        },\n        beforeCreate() {\n        }, //生命周期 - 创建之前\n        beforeMount() {\n        }, //生命周期 - 挂载之前\n        beforeUpdate() {\n        }, //生命周期 - 更新之前\n        updated() {\n        }, //生命周期 - 更新之后\n        beforeDestroy() {\n        }, //生命周期 - 销毁之前\n        destroyed() {\n        }, //生命周期 - 销毁完成\n        activated() {\n        }, //如果页面有keep-alive缓存功能，这个函数会触发\n    };\n</script>\n<style scoped>\n\n</style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}