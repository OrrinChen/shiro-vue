{"ast":null,"code":"import productApi from '../api/product';\nimport wxPayApi from '../api/wxPay';\nimport orderInfoApi from '../api/orderInfo';\nexport default {\n  data() {\n    return {\n      payBtnDisabled: false,\n      //确认支付按钮是否禁用\n      codeDialogVisible: false,\n      //微信支付二维码弹窗\n      productList: [],\n      //商品列表\n      payOrder: {\n        //订单信息\n        productId: '',\n        //商品id\n        payType: 'wxpay' //支付方式\n      },\n\n      codeUrl: '',\n      // 二维码\n      orderNo: '',\n      //订单号\n      timer: null // 定时器\n    };\n  },\n\n  //页面加载时执行\n  created() {\n    //获取商品列表\n    productApi.list().then(response => {\n      this.productList = response.data.productList;\n      this.payOrder.productId = this.productList[0].id;\n    });\n  },\n  methods: {\n    //选择商品\n    selectItem(productId) {\n      console.log('商品id：' + productId);\n      this.payOrder.productId = productId;\n      console.log(this.payOrder);\n      //this.$router.push({ path: '/order' })\n    },\n\n    //选择支付方式\n    selectPayType(type) {\n      console.log('支付方式：' + type);\n      this.payOrder.payType = type;\n      //this.$router.push({ path: '/order' })\n    },\n\n    //确认支付\n    toPay() {\n      //禁用按钮，防止重复提交\n      this.payBtnDisabled = true;\n\n      //微信支付\n      if (this.payOrder.payType === 'wxpay') {\n        //调用统一下单接口\n        wxPayApi.nativePay(this.payOrder.productId).then(response => {\n          this.codeUrl = response.data.codeUrl;\n          this.orderNo = response.data.orderNo;\n\n          //打开二维码弹窗\n          this.codeDialogVisible = true;\n\n          //启动定时器\n          this.timer = setInterval(() => {\n            //查询订单是否支付成功\n            this.queryOrderStatus();\n          }, 3000);\n        });\n      }\n    },\n    //确认支付\n    toPayV2() {\n      //禁用按钮，防止重复提交\n      this.payBtnDisabled = true;\n\n      //微信支付\n      if (this.payOrder.payType === 'wxpay') {\n        //调用统一下单接口\n        wxPayApi.nativePayV2(this.payOrder.productId).then(response => {\n          this.codeUrl = response.data.codeUrl;\n          this.orderNo = response.data.orderNo;\n\n          //打开二维码弹窗\n          this.codeDialogVisible = true;\n\n          //启动定时器\n          this.timer = setInterval(() => {\n            //查询订单是否支付成功\n            this.queryOrderStatus();\n          }, 3000);\n        });\n      }\n    },\n    //关闭微信支付二维码对话框时让“确认支付”按钮可用\n    closeDialog() {\n      console.log('close.................');\n      this.payBtnDisabled = false;\n      console.log('清除定时器');\n      clearInterval(this.timer);\n    },\n    // 查询订单状态\n    queryOrderStatus() {\n      orderInfoApi.queryOrderStatus(this.orderNo).then(response => {\n        console.log('查询订单状态：' + response.code);\n\n        // 支付成功后的页面跳转\n        if (response.code === 0) {\n          console.log('清除定时器');\n          clearInterval(this.timer);\n          // 三秒后跳转到订单列表\n          setTimeout(() => {\n            this.$router.push({\n              path: '/success'\n            });\n          }, 3000);\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["productApi","wxPayApi","orderInfoApi","data","payBtnDisabled","codeDialogVisible","productList","payOrder","productId","payType","codeUrl","orderNo","timer","created","list","then","response","id","methods","selectItem","console","log","selectPayType","type","toPay","nativePay","setInterval","queryOrderStatus","toPayV2","nativePayV2","closeDialog","clearInterval","code","setTimeout","$router","push","path"],"sources":["src/views/index.vue"],"sourcesContent":["<template>\n  <div class=\"bg-fa of\">\n    <section id=\"index\" class=\"container\">\n      <header class=\"comm-title\">\n        <h2 class=\"fl tac\">\n          <span class=\"c-333\">课程列表</span>\n        </h2>\n      </header>\n      <ul>\n        <li v-for=\"product in productList\" :key=\"product.id\">\n          <a :class=\"['orderBtn', {current:payOrder.productId === product.id}]\" \n            @click=\"selectItem(product.id)\" \n            href=\"javascript:void(0);\" >\n            {{product.title}} \n            ¥{{product.price / 100}}\n          </a>\n        </li>\n      </ul>\n\n      \n      <div class=\"PaymentChannel_payment-channel-panel\">\n        <h3 class=\"PaymentChannel_title\"> \n          选择支付方式 \n        </h3>\n        <div class=\"PaymentChannel_channel-options\" >\n\n          <!-- 选择微信 -->\n          <div :class=\"['ChannelOption_payment-channel-option', {current:payOrder.payType === 'wxpay'}]\"\n          @click=\"selectPayType('wxpay')\">\n            <div class=\"ChannelOption_channel-icon\">\n              <img src=\"../assets/img/wxpay.png\" class=\"ChannelOption_icon\">\n            </div>\n            <div class=\"ChannelOption_channel-info\">\n              <div class=\"ChannelOption_channel-label\">\n                <div class=\"ChannelOption_label\">微信支付</div>\n                <div class=\"ChannelOption_sub-label\"></div>\n                <div class=\"ChannelOption_check-option\"></div>\n              </div>\n            </div>\n          </div>\n\n          <!-- 选择支付宝 -->\n          <!--<div :class=\"['ChannelOption_payment-channel-option', {current:payOrder.payType === 'alipay'}]\"\n          @click=\"selectPayType('alipay')\">\n            <div class=\"ChannelOption_channel-icon\">\n              <img src=\"../assets/img/alipay.png\" class=\"ChannelOption_icon\">\n            </div>\n            <div class=\"ChannelOption_channel-info\">\n              <div class=\"ChannelOption_channel-label\">\n                <div class=\"ChannelOption_label\">支付宝</div>\n                <div class=\"ChannelOption_sub-label\"></div>\n                <div class=\"ChannelOption_check-option\"></div>\n              </div>\n            </div>\n          </div>-->\n\n        </div>\n      </div>\n\n      <div class=\"payButtom\">\n        <el-button \n        :disabled=\"payBtnDisabled\"\n        type=\"warning\" \n        round \n        style=\"width: 180px;height: 44px;font-size: 18px;\"\n        @click=\"toPay()\">\n          确认支付V3\n        </el-button>\n        <el-button \n        :disabled=\"payBtnDisabled\"\n        type=\"warning\" \n        round \n        style=\"width: 180px;height: 44px;font-size: 18px;\"\n        @click=\"toPayV2()\">\n          确认支付V2\n        </el-button>\n      </div>\n    </section>\n\n    <!-- 微信支付二维码 -->\n    <el-dialog\n      :visible.sync=\"codeDialogVisible\"\n      :show-close=\"false\"\n      @close=\"closeDialog\"\n      width=\"350px\"\n      center>\n     <qriously :value=\"codeUrl\" :size=\"300\"/>\n        <!-- <img src=\"../assets/img/code.png\" alt=\"\" style=\"width:100%\"><br> -->\n        使用微信扫码支付\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport productApi from '../api/product'\nimport wxPayApi from '../api/wxPay'\nimport orderInfoApi from '../api/orderInfo'\n\nexport default {\n\n  data () {\n    return {\n      payBtnDisabled: false, //确认支付按钮是否禁用\n      codeDialogVisible: false, //微信支付二维码弹窗\n      productList: [], //商品列表\n      payOrder: { //订单信息\n        productId: '', //商品id\n        payType: 'wxpay' //支付方式\n      },\n      codeUrl: '', // 二维码\n      orderNo: '', //订单号\n      timer: null // 定时器\n    }\n  },\n\n  //页面加载时执行\n  created () {\n    //获取商品列表\n    productApi.list().then(response => {\n      this.productList = response.data.productList\n      this.payOrder.productId = this.productList[0].id\n    })\n  },\n  \n  methods: {\n    //选择商品\n    selectItem(productId) {\n      console.log('商品id：' + productId)\n      this.payOrder.productId = productId\n      console.log(this.payOrder)\n      //this.$router.push({ path: '/order' })\n    },\n\n    //选择支付方式\n    selectPayType(type) {\n      console.log('支付方式：' + type)\n      this.payOrder.payType = type\n      //this.$router.push({ path: '/order' })\n    },\n\n    //确认支付\n    toPay(){\n      //禁用按钮，防止重复提交\n      this.payBtnDisabled = true\n\n      //微信支付\n      if(this.payOrder.payType === 'wxpay'){\n          //调用统一下单接口\n        wxPayApi.nativePay(this.payOrder.productId).then(response => {\n          this.codeUrl = response.data.codeUrl\n          this.orderNo = response.data.orderNo\n          \n          //打开二维码弹窗\n          this.codeDialogVisible = true\n\n          //启动定时器\n          this.timer = setInterval(() => {\n            //查询订单是否支付成功\n            this.queryOrderStatus()\n          }, 3000)\n\n        })\n      }\n    },\n\n    //确认支付\n    toPayV2(){\n      //禁用按钮，防止重复提交\n      this.payBtnDisabled = true\n\n      //微信支付\n      if(this.payOrder.payType === 'wxpay'){\n          //调用统一下单接口\n        wxPayApi.nativePayV2(this.payOrder.productId).then(response => {\n          this.codeUrl = response.data.codeUrl\n          this.orderNo = response.data.orderNo\n          \n          //打开二维码弹窗\n          this.codeDialogVisible = true\n\n          //启动定时器\n          this.timer = setInterval(() => {\n            //查询订单是否支付成功\n            this.queryOrderStatus()\n          }, 3000)\n\n        })\n      }\n    },\n\n    //关闭微信支付二维码对话框时让“确认支付”按钮可用\n    closeDialog(){\n      console.log('close.................')\n      this.payBtnDisabled = false\n      console.log('清除定时器')\n      clearInterval(this.timer)\n    },\n\n\n    // 查询订单状态\n    queryOrderStatus() {\n\n      orderInfoApi.queryOrderStatus(this.orderNo).then(response => {\n        console.log('查询订单状态：' + response.code)\n\n        // 支付成功后的页面跳转\n        if (response.code === 0) {\n          console.log('清除定时器')\n          clearInterval(this.timer)\n          // 三秒后跳转到订单列表\n          setTimeout(() => {\n            this.$router.push({ path: '/success' })\n          }, 3000)\n        }\n      })\n    }\n  }\n}\n</script>"],"mappings":"AA8FA,OAAAA,UAAA;AACA,OAAAC,QAAA;AACA,OAAAC,YAAA;AAEA;EAEAC,KAAA;IACA;MACAC,cAAA;MAAA;MACAC,iBAAA;MAAA;MACAC,WAAA;MAAA;MACAC,QAAA;QAAA;QACAC,SAAA;QAAA;QACAC,OAAA;MACA;;MACAC,OAAA;MAAA;MACAC,OAAA;MAAA;MACAC,KAAA;IACA;EACA;;EAEA;EACAC,QAAA;IACA;IACAb,UAAA,CAAAc,IAAA,GAAAC,IAAA,CAAAC,QAAA;MACA,KAAAV,WAAA,GAAAU,QAAA,CAAAb,IAAA,CAAAG,WAAA;MACA,KAAAC,QAAA,CAAAC,SAAA,QAAAF,WAAA,IAAAW,EAAA;IACA;EACA;EAEAC,OAAA;IACA;IACAC,WAAAX,SAAA;MACAY,OAAA,CAAAC,GAAA,WAAAb,SAAA;MACA,KAAAD,QAAA,CAAAC,SAAA,GAAAA,SAAA;MACAY,OAAA,CAAAC,GAAA,MAAAd,QAAA;MACA;IACA;;IAEA;IACAe,cAAAC,IAAA;MACAH,OAAA,CAAAC,GAAA,WAAAE,IAAA;MACA,KAAAhB,QAAA,CAAAE,OAAA,GAAAc,IAAA;MACA;IACA;;IAEA;IACAC,MAAA;MACA;MACA,KAAApB,cAAA;;MAEA;MACA,SAAAG,QAAA,CAAAE,OAAA;QACA;QACAR,QAAA,CAAAwB,SAAA,MAAAlB,QAAA,CAAAC,SAAA,EAAAO,IAAA,CAAAC,QAAA;UACA,KAAAN,OAAA,GAAAM,QAAA,CAAAb,IAAA,CAAAO,OAAA;UACA,KAAAC,OAAA,GAAAK,QAAA,CAAAb,IAAA,CAAAQ,OAAA;;UAEA;UACA,KAAAN,iBAAA;;UAEA;UACA,KAAAO,KAAA,GAAAc,WAAA;YACA;YACA,KAAAC,gBAAA;UACA;QAEA;MACA;IACA;IAEA;IACAC,QAAA;MACA;MACA,KAAAxB,cAAA;;MAEA;MACA,SAAAG,QAAA,CAAAE,OAAA;QACA;QACAR,QAAA,CAAA4B,WAAA,MAAAtB,QAAA,CAAAC,SAAA,EAAAO,IAAA,CAAAC,QAAA;UACA,KAAAN,OAAA,GAAAM,QAAA,CAAAb,IAAA,CAAAO,OAAA;UACA,KAAAC,OAAA,GAAAK,QAAA,CAAAb,IAAA,CAAAQ,OAAA;;UAEA;UACA,KAAAN,iBAAA;;UAEA;UACA,KAAAO,KAAA,GAAAc,WAAA;YACA;YACA,KAAAC,gBAAA;UACA;QAEA;MACA;IACA;IAEA;IACAG,YAAA;MACAV,OAAA,CAAAC,GAAA;MACA,KAAAjB,cAAA;MACAgB,OAAA,CAAAC,GAAA;MACAU,aAAA,MAAAnB,KAAA;IACA;IAGA;IACAe,iBAAA;MAEAzB,YAAA,CAAAyB,gBAAA,MAAAhB,OAAA,EAAAI,IAAA,CAAAC,QAAA;QACAI,OAAA,CAAAC,GAAA,aAAAL,QAAA,CAAAgB,IAAA;;QAEA;QACA,IAAAhB,QAAA,CAAAgB,IAAA;UACAZ,OAAA,CAAAC,GAAA;UACAU,aAAA,MAAAnB,KAAA;UACA;UACAqB,UAAA;YACA,KAAAC,OAAA,CAAAC,IAAA;cAAAC,IAAA;YAAA;UACA;QACA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}