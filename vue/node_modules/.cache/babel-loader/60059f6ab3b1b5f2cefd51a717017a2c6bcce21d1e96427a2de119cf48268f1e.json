{"ast":null,"code":"(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : global['vue-qriously'] = factory();\n})(this, function () {\n  'use strict';\n\n  var commonjsGlobal = typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n  function createCommonjsModule(fn, module) {\n    return module = {\n      exports: {}\n    }, fn(module, module.exports), module.exports;\n  }\n  var qrious = createCommonjsModule(function (module, exports) {\n    /*\n     * QRious v4.0.2\n     * Copyright (C) 2017 Alasdair Mercer\n     * Copyright (C) 2010 Tom Zerucha\n     *\n     * This program is free software: you can redistribute it and/or modify\n     * it under the terms of the GNU General Public License as published by\n     * the Free Software Foundation, either version 3 of the License, or\n     * (at your option) any later version.\n     *\n     * This program is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n     * GNU General Public License for more details.\n     *\n     * You should have received a copy of the GNU General Public License\n     * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n     */\n    (function (global, factory) {\n      module.exports = factory();\n    })(commonjsGlobal, function () {\n      'use strict';\n\n      /*\n       * Copyright (C) 2017 Alasdair Mercer, !ninja\n       *\n       * Permission is hereby granted, free of charge, to any person obtaining a copy\n       * of this software and associated documentation files (the \"Software\"), to deal\n       * in the Software without restriction, including without limitation the rights\n       * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n       * copies of the Software, and to permit persons to whom the Software is\n       * furnished to do so, subject to the following conditions:\n       *\n       * The above copyright notice and this permission notice shall be included in all\n       * copies or substantial portions of the Software.\n       *\n       * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n       * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n       * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n       * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n       * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n       * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n       * SOFTWARE.\n       */\n\n      /**\n       * A bare-bones constructor for surrogate prototype swapping.\n       *\n       * @private\n       * @constructor\n       */\n      var Constructor = /* istanbul ignore next */function () {};\n      /**\n       * A reference to <code>Object.prototype.hasOwnProperty</code>.\n       *\n       * @private\n       * @type {Function}\n       */\n      var hasOwnProperty = Object.prototype.hasOwnProperty;\n      /**\n       * A reference to <code>Array.prototype.slice</code>.\n       *\n       * @private\n       * @type {Function}\n       */\n      var slice = Array.prototype.slice;\n\n      /**\n       * Creates an object which inherits the given <code>prototype</code>.\n       *\n       * Optionally, the created object can be extended further with the specified <code>properties</code>.\n       *\n       * @param {Object} prototype - the prototype to be inherited by the created object\n       * @param {Object} [properties] - the optional properties to be extended by the created object\n       * @return {Object} The newly created object.\n       * @private\n       */\n      function createObject(prototype, properties) {\n        var result;\n        /* istanbul ignore next */\n        if (typeof Object.create === 'function') {\n          result = Object.create(prototype);\n        } else {\n          Constructor.prototype = prototype;\n          result = new Constructor();\n          Constructor.prototype = null;\n        }\n        if (properties) {\n          extendObject(true, result, properties);\n        }\n        return result;\n      }\n\n      /**\n       * Extends the constructor to which this method is associated with the <code>prototype</code> and/or\n       * <code>statics</code> provided.\n       *\n       * If <code>name</code> is provided, it will be used as the class name and can be accessed via a special\n       * <code>class_</code> property on the child constructor, otherwise the class name of the super constructor will be used\n       * instead. The class name may also be used string representation for instances of the child constructor (via\n       * <code>toString</code>), but this is not applicable to the <i>lite</i> version of Nevis.\n       *\n       * If <code>constructor</code> is provided, it will be used as the constructor for the child, otherwise a simple\n       * constructor which only calls the super constructor will be used instead.\n       *\n       * The super constructor can be accessed via a special <code>super_</code> property on the child constructor.\n       *\n       * @param {string} [name=this.class_] - the class name to be used for the child constructor\n       * @param {Function} [constructor] - the constructor for the child\n       * @param {Object} [prototype] - the prototype properties to be defined for the child\n       * @param {Object} [statics] - the static properties to be defined for the child\n       * @return {Function} The child <code>constructor</code> provided or the one created if none was given.\n       * @public\n       */\n      function extend(name, constructor, prototype, statics) {\n        var superConstructor = this;\n        if (typeof name !== 'string') {\n          statics = prototype;\n          prototype = constructor;\n          constructor = name;\n          name = null;\n        }\n        if (typeof constructor !== 'function') {\n          statics = prototype;\n          prototype = constructor;\n          constructor = function () {\n            return superConstructor.apply(this, arguments);\n          };\n        }\n        extendObject(false, constructor, superConstructor, statics);\n        constructor.prototype = createObject(superConstructor.prototype, prototype);\n        constructor.prototype.constructor = constructor;\n        constructor.class_ = name || superConstructor.class_;\n        constructor.super_ = superConstructor;\n        return constructor;\n      }\n\n      /**\n       * Extends the specified <code>target</code> object with the properties in each of the <code>sources</code> provided.\n       *\n       * if any source is <code>null</code> it will be ignored.\n       *\n       * @param {boolean} own - <code>true</code> to only copy <b>own</b> properties from <code>sources</code> onto\n       * <code>target</code>; otherwise <code>false</code>\n       * @param {Object} target - the target object which should be extended\n       * @param {...Object} [sources] - the source objects whose properties are to be copied onto <code>target</code>\n       * @return {void}\n       * @private\n       */\n      function extendObject(own, target, sources) {\n        sources = slice.call(arguments, 2);\n        var property;\n        var source;\n        for (var i = 0, length = sources.length; i < length; i++) {\n          source = sources[i];\n          for (property in source) {\n            if (!own || hasOwnProperty.call(source, property)) {\n              target[property] = source[property];\n            }\n          }\n        }\n      }\n      var extend_1 = extend;\n\n      /**\n       * The base class from which all others should extend.\n       *\n       * @public\n       * @constructor\n       */\n      function Nevis() {}\n      Nevis.class_ = 'Nevis';\n      Nevis.super_ = Object;\n\n      /**\n       * Extends the constructor to which this method is associated with the <code>prototype</code> and/or\n       * <code>statics</code> provided.\n       *\n       * If <code>name</code> is provided, it will be used as the class name and can be accessed via a special\n       * <code>class_</code> property on the child constructor, otherwise the class name of the super constructor will be used\n       * instead. The class name may also be used string representation for instances of the child constructor (via\n       * <code>toString</code>), but this is not applicable to the <i>lite</i> version of Nevis.\n       *\n       * If <code>constructor</code> is provided, it will be used as the constructor for the child, otherwise a simple\n       * constructor which only calls the super constructor will be used instead.\n       *\n       * The super constructor can be accessed via a special <code>super_</code> property on the child constructor.\n       *\n       * @param {string} [name=this.class_] - the class name to be used for the child constructor\n       * @param {Function} [constructor] - the constructor for the child\n       * @param {Object} [prototype] - the prototype properties to be defined for the child\n       * @param {Object} [statics] - the static properties to be defined for the child\n       * @return {Function} The child <code>constructor</code> provided or the one created if none was given.\n       * @public\n       * @static\n       * @memberof Nevis\n       */\n      Nevis.extend = extend_1;\n      var nevis = Nevis;\n      var lite = nevis;\n\n      /**\n       * Responsible for rendering a QR code {@link Frame} on a specific type of element.\n       *\n       * A renderer may be dependant on the rendering of another element, so the ordering of their execution is important.\n       *\n       * The rendering of a element can be deferred by disabling the renderer initially, however, any attempt get the element\n       * from the renderer will result in it being immediately enabled and the element being rendered.\n       *\n       * @param {QRious} qrious - the {@link QRious} instance to be used\n       * @param {*} element - the element onto which the QR code is to be rendered\n       * @param {boolean} [enabled] - <code>true</code> this {@link Renderer} is enabled; otherwise <code>false</code>.\n       * @public\n       * @class\n       * @extends Nevis\n       */\n      var Renderer = lite.extend(function (qrious, element, enabled) {\n        /**\n         * The {@link QRious} instance.\n         *\n         * @protected\n         * @type {QRious}\n         * @memberof Renderer#\n         */\n        this.qrious = qrious;\n\n        /**\n         * The element onto which this {@link Renderer} is rendering the QR code.\n         *\n         * @protected\n         * @type {*}\n         * @memberof Renderer#\n         */\n        this.element = element;\n        this.element.qrious = qrious;\n\n        /**\n         * Whether this {@link Renderer} is enabled.\n         *\n         * @protected\n         * @type {boolean}\n         * @memberof Renderer#\n         */\n        this.enabled = Boolean(enabled);\n      }, {\n        /**\n         * Draws the specified QR code <code>frame</code> on the underlying element.\n         *\n         * Implementations of {@link Renderer} <b>must</b> override this method with their own specific logic.\n         *\n         * @param {Frame} frame - the {@link Frame} to be drawn\n         * @return {void}\n         * @protected\n         * @abstract\n         * @memberof Renderer#\n         */\n        draw: function (frame) {},\n        /**\n         * Returns the element onto which this {@link Renderer} is rendering the QR code.\n         *\n         * If this method is called while this {@link Renderer} is disabled, it will be immediately enabled and rendered\n         * before the element is returned.\n         *\n         * @return {*} The element.\n         * @public\n         * @memberof Renderer#\n         */\n        getElement: function () {\n          if (!this.enabled) {\n            this.enabled = true;\n            this.render();\n          }\n          return this.element;\n        },\n        /**\n         * Calculates the size (in pixel units) to represent an individual module within the QR code based on the\n         * <code>frame</code> provided.\n         *\n         * Any configured padding will be excluded from the returned size.\n         *\n         * The returned value will be at least one, even in cases where the size of the QR code does not fit its contents.\n         * This is done so that the inevitable clipping is handled more gracefully since this way at least something is\n         * displayed instead of just a blank space filled by the background color.\n         *\n         * @param {Frame} frame - the {@link Frame} from which the module size is to be derived\n         * @return {number} The pixel size for each module in the QR code which will be no less than one.\n         * @protected\n         * @memberof Renderer#\n         */\n        getModuleSize: function (frame) {\n          var qrious = this.qrious;\n          var padding = qrious.padding || 0;\n          var pixels = Math.floor((qrious.size - padding * 2) / frame.width);\n          return Math.max(1, pixels);\n        },\n        /**\n         * Calculates the offset/padding (in pixel units) to be inserted before the QR code based on the <code>frame</code>\n         * provided.\n         *\n         * The returned value will be zero if there is no available offset or if the size of the QR code does not fit its\n         * contents. It will never be a negative value. This is done so that the inevitable clipping appears more naturally\n         * and it is not clipped from all directions.\n         *\n         * @param {Frame} frame - the {@link Frame} from which the offset is to be derived\n         * @return {number} The pixel offset for the QR code which will be no less than zero.\n         * @protected\n         * @memberof Renderer#\n         */\n        getOffset: function (frame) {\n          var qrious = this.qrious;\n          var padding = qrious.padding;\n          if (padding != null) {\n            return padding;\n          }\n          var moduleSize = this.getModuleSize(frame);\n          var offset = Math.floor((qrious.size - moduleSize * frame.width) / 2);\n          return Math.max(0, offset);\n        },\n        /**\n         * Renders a QR code on the underlying element based on the <code>frame</code> provided.\n         *\n         * @param {Frame} frame - the {@link Frame} to be rendered\n         * @return {void}\n         * @public\n         * @memberof Renderer#\n         */\n        render: function (frame) {\n          if (this.enabled) {\n            this.resize();\n            this.reset();\n            this.draw(frame);\n          }\n        },\n        /**\n         * Resets the underlying element, effectively clearing any previously rendered QR code.\n         *\n         * Implementations of {@link Renderer} <b>must</b> override this method with their own specific logic.\n         *\n         * @return {void}\n         * @protected\n         * @abstract\n         * @memberof Renderer#\n         */\n        reset: function () {},\n        /**\n         * Ensures that the size of the underlying element matches that defined on the associated {@link QRious} instance.\n         *\n         * Implementations of {@link Renderer} <b>must</b> override this method with their own specific logic.\n         *\n         * @return {void}\n         * @protected\n         * @abstract\n         * @memberof Renderer#\n         */\n        resize: function () {}\n      });\n      var Renderer_1 = Renderer;\n\n      /**\n       * An implementation of {@link Renderer} for working with <code>canvas</code> elements.\n       *\n       * @public\n       * @class\n       * @extends Renderer\n       */\n      var CanvasRenderer = Renderer_1.extend({\n        /**\n         * @override\n         */\n        draw: function (frame) {\n          var i, j;\n          var qrious = this.qrious;\n          var moduleSize = this.getModuleSize(frame);\n          var offset = this.getOffset(frame);\n          var context = this.element.getContext('2d');\n          context.fillStyle = qrious.foreground;\n          context.globalAlpha = qrious.foregroundAlpha;\n          for (i = 0; i < frame.width; i++) {\n            for (j = 0; j < frame.width; j++) {\n              if (frame.buffer[j * frame.width + i]) {\n                context.fillRect(moduleSize * i + offset, moduleSize * j + offset, moduleSize, moduleSize);\n              }\n            }\n          }\n        },\n        /**\n         * @override\n         */\n        reset: function () {\n          var qrious = this.qrious;\n          var context = this.element.getContext('2d');\n          var size = qrious.size;\n          context.lineWidth = 1;\n          context.clearRect(0, 0, size, size);\n          context.fillStyle = qrious.background;\n          context.globalAlpha = qrious.backgroundAlpha;\n          context.fillRect(0, 0, size, size);\n        },\n        /**\n         * @override\n         */\n        resize: function () {\n          var element = this.element;\n          element.width = element.height = this.qrious.size;\n        }\n      });\n      var CanvasRenderer_1 = CanvasRenderer;\n\n      /* eslint no-multi-spaces: \"off\" */\n\n      /**\n       * Contains alignment pattern information.\n       *\n       * @public\n       * @class\n       * @extends Nevis\n       */\n      var Alignment = lite.extend(null, {\n        /**\n         * The alignment pattern block.\n         *\n         * @public\n         * @static\n         * @type {number[]}\n         * @memberof Alignment\n         */\n        BLOCK: [0, 11, 15, 19, 23, 27, 31, 16, 18, 20, 22, 24, 26, 28, 20, 22, 24, 24, 26, 28, 28, 22, 24, 24, 26, 26, 28, 28, 24, 24, 26, 26, 26, 28, 28, 24, 26, 26, 26, 28, 28]\n      });\n      var Alignment_1 = Alignment;\n\n      /* eslint no-multi-spaces: \"off\" */\n\n      /**\n       * Contains error correction information.\n       *\n       * @public\n       * @class\n       * @extends Nevis\n       */\n      var ErrorCorrection = lite.extend(null, {\n        /**\n         * The error correction blocks.\n         *\n         * There are four elements per version. The first two indicate the number of blocks, then the data width, and finally\n         * the ECC width.\n         *\n         * @public\n         * @static\n         * @type {number[]}\n         * @memberof ErrorCorrection\n         */\n        BLOCKS: [1, 0, 19, 7, 1, 0, 16, 10, 1, 0, 13, 13, 1, 0, 9, 17, 1, 0, 34, 10, 1, 0, 28, 16, 1, 0, 22, 22, 1, 0, 16, 28, 1, 0, 55, 15, 1, 0, 44, 26, 2, 0, 17, 18, 2, 0, 13, 22, 1, 0, 80, 20, 2, 0, 32, 18, 2, 0, 24, 26, 4, 0, 9, 16, 1, 0, 108, 26, 2, 0, 43, 24, 2, 2, 15, 18, 2, 2, 11, 22, 2, 0, 68, 18, 4, 0, 27, 16, 4, 0, 19, 24, 4, 0, 15, 28, 2, 0, 78, 20, 4, 0, 31, 18, 2, 4, 14, 18, 4, 1, 13, 26, 2, 0, 97, 24, 2, 2, 38, 22, 4, 2, 18, 22, 4, 2, 14, 26, 2, 0, 116, 30, 3, 2, 36, 22, 4, 4, 16, 20, 4, 4, 12, 24, 2, 2, 68, 18, 4, 1, 43, 26, 6, 2, 19, 24, 6, 2, 15, 28, 4, 0, 81, 20, 1, 4, 50, 30, 4, 4, 22, 28, 3, 8, 12, 24, 2, 2, 92, 24, 6, 2, 36, 22, 4, 6, 20, 26, 7, 4, 14, 28, 4, 0, 107, 26, 8, 1, 37, 22, 8, 4, 20, 24, 12, 4, 11, 22, 3, 1, 115, 30, 4, 5, 40, 24, 11, 5, 16, 20, 11, 5, 12, 24, 5, 1, 87, 22, 5, 5, 41, 24, 5, 7, 24, 30, 11, 7, 12, 24, 5, 1, 98, 24, 7, 3, 45, 28, 15, 2, 19, 24, 3, 13, 15, 30, 1, 5, 107, 28, 10, 1, 46, 28, 1, 15, 22, 28, 2, 17, 14, 28, 5, 1, 120, 30, 9, 4, 43, 26, 17, 1, 22, 28, 2, 19, 14, 28, 3, 4, 113, 28, 3, 11, 44, 26, 17, 4, 21, 26, 9, 16, 13, 26, 3, 5, 107, 28, 3, 13, 41, 26, 15, 5, 24, 30, 15, 10, 15, 28, 4, 4, 116, 28, 17, 0, 42, 26, 17, 6, 22, 28, 19, 6, 16, 30, 2, 7, 111, 28, 17, 0, 46, 28, 7, 16, 24, 30, 34, 0, 13, 24, 4, 5, 121, 30, 4, 14, 47, 28, 11, 14, 24, 30, 16, 14, 15, 30, 6, 4, 117, 30, 6, 14, 45, 28, 11, 16, 24, 30, 30, 2, 16, 30, 8, 4, 106, 26, 8, 13, 47, 28, 7, 22, 24, 30, 22, 13, 15, 30, 10, 2, 114, 28, 19, 4, 46, 28, 28, 6, 22, 28, 33, 4, 16, 30, 8, 4, 122, 30, 22, 3, 45, 28, 8, 26, 23, 30, 12, 28, 15, 30, 3, 10, 117, 30, 3, 23, 45, 28, 4, 31, 24, 30, 11, 31, 15, 30, 7, 7, 116, 30, 21, 7, 45, 28, 1, 37, 23, 30, 19, 26, 15, 30, 5, 10, 115, 30, 19, 10, 47, 28, 15, 25, 24, 30, 23, 25, 15, 30, 13, 3, 115, 30, 2, 29, 46, 28, 42, 1, 24, 30, 23, 28, 15, 30, 17, 0, 115, 30, 10, 23, 46, 28, 10, 35, 24, 30, 19, 35, 15, 30, 17, 1, 115, 30, 14, 21, 46, 28, 29, 19, 24, 30, 11, 46, 15, 30, 13, 6, 115, 30, 14, 23, 46, 28, 44, 7, 24, 30, 59, 1, 16, 30, 12, 7, 121, 30, 12, 26, 47, 28, 39, 14, 24, 30, 22, 41, 15, 30, 6, 14, 121, 30, 6, 34, 47, 28, 46, 10, 24, 30, 2, 64, 15, 30, 17, 4, 122, 30, 29, 14, 46, 28, 49, 10, 24, 30, 24, 46, 15, 30, 4, 18, 122, 30, 13, 32, 46, 28, 48, 14, 24, 30, 42, 32, 15, 30, 20, 4, 117, 30, 40, 7, 47, 28, 43, 22, 24, 30, 10, 67, 15, 30, 19, 6, 118, 30, 18, 31, 47, 28, 34, 34, 24, 30, 20, 61, 15, 30],\n        /**\n         * The final format bits with mask (level << 3 | mask).\n         *\n         * @public\n         * @static\n         * @type {number[]}\n         * @memberof ErrorCorrection\n         */\n        FINAL_FORMAT: [\n        // L\n        0x77c4, 0x72f3, 0x7daa, 0x789d, 0x662f, 0x6318, 0x6c41, 0x6976,\n        // M\n        0x5412, 0x5125, 0x5e7c, 0x5b4b, 0x45f9, 0x40ce, 0x4f97, 0x4aa0,\n        // Q\n        0x355f, 0x3068, 0x3f31, 0x3a06, 0x24b4, 0x2183, 0x2eda, 0x2bed,\n        // H\n        0x1689, 0x13be, 0x1ce7, 0x19d0, 0x0762, 0x0255, 0x0d0c, 0x083b],\n        /**\n         * A map of human-readable ECC levels.\n         *\n         * @public\n         * @static\n         * @type {Object.<string, number>}\n         * @memberof ErrorCorrection\n         */\n        LEVELS: {\n          L: 1,\n          M: 2,\n          Q: 3,\n          H: 4\n        }\n      });\n      var ErrorCorrection_1 = ErrorCorrection;\n\n      /**\n       * Contains Galois field information.\n       *\n       * @public\n       * @class\n       * @extends Nevis\n       */\n      var Galois = lite.extend(null, {\n        /**\n         * The Galois field exponent table.\n         *\n         * @public\n         * @static\n         * @type {number[]}\n         * @memberof Galois\n         */\n        EXPONENT: [0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1d, 0x3a, 0x74, 0xe8, 0xcd, 0x87, 0x13, 0x26, 0x4c, 0x98, 0x2d, 0x5a, 0xb4, 0x75, 0xea, 0xc9, 0x8f, 0x03, 0x06, 0x0c, 0x18, 0x30, 0x60, 0xc0, 0x9d, 0x27, 0x4e, 0x9c, 0x25, 0x4a, 0x94, 0x35, 0x6a, 0xd4, 0xb5, 0x77, 0xee, 0xc1, 0x9f, 0x23, 0x46, 0x8c, 0x05, 0x0a, 0x14, 0x28, 0x50, 0xa0, 0x5d, 0xba, 0x69, 0xd2, 0xb9, 0x6f, 0xde, 0xa1, 0x5f, 0xbe, 0x61, 0xc2, 0x99, 0x2f, 0x5e, 0xbc, 0x65, 0xca, 0x89, 0x0f, 0x1e, 0x3c, 0x78, 0xf0, 0xfd, 0xe7, 0xd3, 0xbb, 0x6b, 0xd6, 0xb1, 0x7f, 0xfe, 0xe1, 0xdf, 0xa3, 0x5b, 0xb6, 0x71, 0xe2, 0xd9, 0xaf, 0x43, 0x86, 0x11, 0x22, 0x44, 0x88, 0x0d, 0x1a, 0x34, 0x68, 0xd0, 0xbd, 0x67, 0xce, 0x81, 0x1f, 0x3e, 0x7c, 0xf8, 0xed, 0xc7, 0x93, 0x3b, 0x76, 0xec, 0xc5, 0x97, 0x33, 0x66, 0xcc, 0x85, 0x17, 0x2e, 0x5c, 0xb8, 0x6d, 0xda, 0xa9, 0x4f, 0x9e, 0x21, 0x42, 0x84, 0x15, 0x2a, 0x54, 0xa8, 0x4d, 0x9a, 0x29, 0x52, 0xa4, 0x55, 0xaa, 0x49, 0x92, 0x39, 0x72, 0xe4, 0xd5, 0xb7, 0x73, 0xe6, 0xd1, 0xbf, 0x63, 0xc6, 0x91, 0x3f, 0x7e, 0xfc, 0xe5, 0xd7, 0xb3, 0x7b, 0xf6, 0xf1, 0xff, 0xe3, 0xdb, 0xab, 0x4b, 0x96, 0x31, 0x62, 0xc4, 0x95, 0x37, 0x6e, 0xdc, 0xa5, 0x57, 0xae, 0x41, 0x82, 0x19, 0x32, 0x64, 0xc8, 0x8d, 0x07, 0x0e, 0x1c, 0x38, 0x70, 0xe0, 0xdd, 0xa7, 0x53, 0xa6, 0x51, 0xa2, 0x59, 0xb2, 0x79, 0xf2, 0xf9, 0xef, 0xc3, 0x9b, 0x2b, 0x56, 0xac, 0x45, 0x8a, 0x09, 0x12, 0x24, 0x48, 0x90, 0x3d, 0x7a, 0xf4, 0xf5, 0xf7, 0xf3, 0xfb, 0xeb, 0xcb, 0x8b, 0x0b, 0x16, 0x2c, 0x58, 0xb0, 0x7d, 0xfa, 0xe9, 0xcf, 0x83, 0x1b, 0x36, 0x6c, 0xd8, 0xad, 0x47, 0x8e, 0x00],\n        /**\n         * The Galois field log table.\n         *\n         * @public\n         * @static\n         * @type {number[]}\n         * @memberof Galois\n         */\n        LOG: [0xff, 0x00, 0x01, 0x19, 0x02, 0x32, 0x1a, 0xc6, 0x03, 0xdf, 0x33, 0xee, 0x1b, 0x68, 0xc7, 0x4b, 0x04, 0x64, 0xe0, 0x0e, 0x34, 0x8d, 0xef, 0x81, 0x1c, 0xc1, 0x69, 0xf8, 0xc8, 0x08, 0x4c, 0x71, 0x05, 0x8a, 0x65, 0x2f, 0xe1, 0x24, 0x0f, 0x21, 0x35, 0x93, 0x8e, 0xda, 0xf0, 0x12, 0x82, 0x45, 0x1d, 0xb5, 0xc2, 0x7d, 0x6a, 0x27, 0xf9, 0xb9, 0xc9, 0x9a, 0x09, 0x78, 0x4d, 0xe4, 0x72, 0xa6, 0x06, 0xbf, 0x8b, 0x62, 0x66, 0xdd, 0x30, 0xfd, 0xe2, 0x98, 0x25, 0xb3, 0x10, 0x91, 0x22, 0x88, 0x36, 0xd0, 0x94, 0xce, 0x8f, 0x96, 0xdb, 0xbd, 0xf1, 0xd2, 0x13, 0x5c, 0x83, 0x38, 0x46, 0x40, 0x1e, 0x42, 0xb6, 0xa3, 0xc3, 0x48, 0x7e, 0x6e, 0x6b, 0x3a, 0x28, 0x54, 0xfa, 0x85, 0xba, 0x3d, 0xca, 0x5e, 0x9b, 0x9f, 0x0a, 0x15, 0x79, 0x2b, 0x4e, 0xd4, 0xe5, 0xac, 0x73, 0xf3, 0xa7, 0x57, 0x07, 0x70, 0xc0, 0xf7, 0x8c, 0x80, 0x63, 0x0d, 0x67, 0x4a, 0xde, 0xed, 0x31, 0xc5, 0xfe, 0x18, 0xe3, 0xa5, 0x99, 0x77, 0x26, 0xb8, 0xb4, 0x7c, 0x11, 0x44, 0x92, 0xd9, 0x23, 0x20, 0x89, 0x2e, 0x37, 0x3f, 0xd1, 0x5b, 0x95, 0xbc, 0xcf, 0xcd, 0x90, 0x87, 0x97, 0xb2, 0xdc, 0xfc, 0xbe, 0x61, 0xf2, 0x56, 0xd3, 0xab, 0x14, 0x2a, 0x5d, 0x9e, 0x84, 0x3c, 0x39, 0x53, 0x47, 0x6d, 0x41, 0xa2, 0x1f, 0x2d, 0x43, 0xd8, 0xb7, 0x7b, 0xa4, 0x76, 0xc4, 0x17, 0x49, 0xec, 0x7f, 0x0c, 0x6f, 0xf6, 0x6c, 0xa1, 0x3b, 0x52, 0x29, 0x9d, 0x55, 0xaa, 0xfb, 0x60, 0x86, 0xb1, 0xbb, 0xcc, 0x3e, 0x5a, 0xcb, 0x59, 0x5f, 0xb0, 0x9c, 0xa9, 0xa0, 0x51, 0x0b, 0xf5, 0x16, 0xeb, 0x7a, 0x75, 0x2c, 0xd7, 0x4f, 0xae, 0xd5, 0xe9, 0xe6, 0xe7, 0xad, 0xe8, 0x74, 0xd6, 0xf4, 0xea, 0xa8, 0x50, 0x58, 0xaf]\n      });\n      var Galois_1 = Galois;\n\n      /**\n       * Contains version pattern information.\n       *\n       * @public\n       * @class\n       * @extends Nevis\n       */\n      var Version = lite.extend(null, {\n        /**\n         * The version pattern block.\n         *\n         * @public\n         * @static\n         * @type {number[]}\n         * @memberof Version\n         */\n        BLOCK: [0xc94, 0x5bc, 0xa99, 0x4d3, 0xbf6, 0x762, 0x847, 0x60d, 0x928, 0xb78, 0x45d, 0xa17, 0x532, 0x9a6, 0x683, 0x8c9, 0x7ec, 0xec4, 0x1e1, 0xfab, 0x08e, 0xc1a, 0x33f, 0xd75, 0x250, 0x9d5, 0x6f0, 0x8ba, 0x79f, 0xb0b, 0x42e, 0xa64, 0x541, 0xc69]\n      });\n      var Version_1 = Version;\n\n      /**\n       * Generates information for a QR code frame based on a specific value to be encoded.\n       *\n       * @param {Frame~Options} options - the options to be used\n       * @public\n       * @class\n       * @extends Nevis\n       */\n      var Frame = lite.extend(function (options) {\n        var dataBlock, eccBlock, index, neccBlock1, neccBlock2;\n        var valueLength = options.value.length;\n        this._badness = [];\n        this._level = ErrorCorrection_1.LEVELS[options.level];\n        this._polynomial = [];\n        this._value = options.value;\n        this._version = 0;\n        this._stringBuffer = [];\n        while (this._version < 40) {\n          this._version++;\n          index = (this._level - 1) * 4 + (this._version - 1) * 16;\n          neccBlock1 = ErrorCorrection_1.BLOCKS[index++];\n          neccBlock2 = ErrorCorrection_1.BLOCKS[index++];\n          dataBlock = ErrorCorrection_1.BLOCKS[index++];\n          eccBlock = ErrorCorrection_1.BLOCKS[index];\n          index = dataBlock * (neccBlock1 + neccBlock2) + neccBlock2 - 3 + (this._version <= 9);\n          if (valueLength <= index) {\n            break;\n          }\n        }\n        this._dataBlock = dataBlock;\n        this._eccBlock = eccBlock;\n        this._neccBlock1 = neccBlock1;\n        this._neccBlock2 = neccBlock2;\n\n        /**\n         * The data width is based on version.\n         *\n         * @public\n         * @type {number}\n         * @memberof Frame#\n         */\n        // FIXME: Ensure that it fits instead of being truncated.\n        var width = this.width = 17 + 4 * this._version;\n\n        /**\n         * The image buffer.\n         *\n         * @public\n         * @type {number[]}\n         * @memberof Frame#\n         */\n        this.buffer = Frame._createArray(width * width);\n        this._ecc = Frame._createArray(dataBlock + (dataBlock + eccBlock) * (neccBlock1 + neccBlock2) + neccBlock2);\n        this._mask = Frame._createArray((width * (width + 1) + 1) / 2);\n        this._insertFinders();\n        this._insertAlignments();\n\n        // Insert single foreground cell.\n        this.buffer[8 + width * (width - 8)] = 1;\n        this._insertTimingGap();\n        this._reverseMask();\n        this._insertTimingRowAndColumn();\n        this._insertVersion();\n        this._syncMask();\n        this._convertBitStream(valueLength);\n        this._calculatePolynomial();\n        this._appendEccToData();\n        this._interleaveBlocks();\n        this._pack();\n        this._finish();\n      }, {\n        _addAlignment: function (x, y) {\n          var i;\n          var buffer = this.buffer;\n          var width = this.width;\n          buffer[x + width * y] = 1;\n          for (i = -2; i < 2; i++) {\n            buffer[x + i + width * (y - 2)] = 1;\n            buffer[x - 2 + width * (y + i + 1)] = 1;\n            buffer[x + 2 + width * (y + i)] = 1;\n            buffer[x + i + 1 + width * (y + 2)] = 1;\n          }\n          for (i = 0; i < 2; i++) {\n            this._setMask(x - 1, y + i);\n            this._setMask(x + 1, y - i);\n            this._setMask(x - i, y - 1);\n            this._setMask(x + i, y + 1);\n          }\n        },\n        _appendData: function (data, dataLength, ecc, eccLength) {\n          var bit, i, j;\n          var polynomial = this._polynomial;\n          var stringBuffer = this._stringBuffer;\n          for (i = 0; i < eccLength; i++) {\n            stringBuffer[ecc + i] = 0;\n          }\n          for (i = 0; i < dataLength; i++) {\n            bit = Galois_1.LOG[stringBuffer[data + i] ^ stringBuffer[ecc]];\n            if (bit !== 255) {\n              for (j = 1; j < eccLength; j++) {\n                stringBuffer[ecc + j - 1] = stringBuffer[ecc + j] ^ Galois_1.EXPONENT[Frame._modN(bit + polynomial[eccLength - j])];\n              }\n            } else {\n              for (j = ecc; j < ecc + eccLength; j++) {\n                stringBuffer[j] = stringBuffer[j + 1];\n              }\n            }\n            stringBuffer[ecc + eccLength - 1] = bit === 255 ? 0 : Galois_1.EXPONENT[Frame._modN(bit + polynomial[0])];\n          }\n        },\n        _appendEccToData: function () {\n          var i;\n          var data = 0;\n          var dataBlock = this._dataBlock;\n          var ecc = this._calculateMaxLength();\n          var eccBlock = this._eccBlock;\n          for (i = 0; i < this._neccBlock1; i++) {\n            this._appendData(data, dataBlock, ecc, eccBlock);\n            data += dataBlock;\n            ecc += eccBlock;\n          }\n          for (i = 0; i < this._neccBlock2; i++) {\n            this._appendData(data, dataBlock + 1, ecc, eccBlock);\n            data += dataBlock + 1;\n            ecc += eccBlock;\n          }\n        },\n        _applyMask: function (mask) {\n          var r3x, r3y, x, y;\n          var buffer = this.buffer;\n          var width = this.width;\n          switch (mask) {\n            case 0:\n              for (y = 0; y < width; y++) {\n                for (x = 0; x < width; x++) {\n                  if (!(x + y & 1) && !this._isMasked(x, y)) {\n                    buffer[x + y * width] ^= 1;\n                  }\n                }\n              }\n              break;\n            case 1:\n              for (y = 0; y < width; y++) {\n                for (x = 0; x < width; x++) {\n                  if (!(y & 1) && !this._isMasked(x, y)) {\n                    buffer[x + y * width] ^= 1;\n                  }\n                }\n              }\n              break;\n            case 2:\n              for (y = 0; y < width; y++) {\n                for (r3x = 0, x = 0; x < width; x++, r3x++) {\n                  if (r3x === 3) {\n                    r3x = 0;\n                  }\n                  if (!r3x && !this._isMasked(x, y)) {\n                    buffer[x + y * width] ^= 1;\n                  }\n                }\n              }\n              break;\n            case 3:\n              for (r3y = 0, y = 0; y < width; y++, r3y++) {\n                if (r3y === 3) {\n                  r3y = 0;\n                }\n                for (r3x = r3y, x = 0; x < width; x++, r3x++) {\n                  if (r3x === 3) {\n                    r3x = 0;\n                  }\n                  if (!r3x && !this._isMasked(x, y)) {\n                    buffer[x + y * width] ^= 1;\n                  }\n                }\n              }\n              break;\n            case 4:\n              for (y = 0; y < width; y++) {\n                for (r3x = 0, r3y = y >> 1 & 1, x = 0; x < width; x++, r3x++) {\n                  if (r3x === 3) {\n                    r3x = 0;\n                    r3y = !r3y;\n                  }\n                  if (!r3y && !this._isMasked(x, y)) {\n                    buffer[x + y * width] ^= 1;\n                  }\n                }\n              }\n              break;\n            case 5:\n              for (r3y = 0, y = 0; y < width; y++, r3y++) {\n                if (r3y === 3) {\n                  r3y = 0;\n                }\n                for (r3x = 0, x = 0; x < width; x++, r3x++) {\n                  if (r3x === 3) {\n                    r3x = 0;\n                  }\n                  if (!((x & y & 1) + !(!r3x | !r3y)) && !this._isMasked(x, y)) {\n                    buffer[x + y * width] ^= 1;\n                  }\n                }\n              }\n              break;\n            case 6:\n              for (r3y = 0, y = 0; y < width; y++, r3y++) {\n                if (r3y === 3) {\n                  r3y = 0;\n                }\n                for (r3x = 0, x = 0; x < width; x++, r3x++) {\n                  if (r3x === 3) {\n                    r3x = 0;\n                  }\n                  if (!((x & y & 1) + (r3x && r3x === r3y) & 1) && !this._isMasked(x, y)) {\n                    buffer[x + y * width] ^= 1;\n                  }\n                }\n              }\n              break;\n            case 7:\n              for (r3y = 0, y = 0; y < width; y++, r3y++) {\n                if (r3y === 3) {\n                  r3y = 0;\n                }\n                for (r3x = 0, x = 0; x < width; x++, r3x++) {\n                  if (r3x === 3) {\n                    r3x = 0;\n                  }\n                  if (!((r3x && r3x === r3y) + (x + y & 1) & 1) && !this._isMasked(x, y)) {\n                    buffer[x + y * width] ^= 1;\n                  }\n                }\n              }\n              break;\n          }\n        },\n        _calculateMaxLength: function () {\n          return this._dataBlock * (this._neccBlock1 + this._neccBlock2) + this._neccBlock2;\n        },\n        _calculatePolynomial: function () {\n          var i, j;\n          var eccBlock = this._eccBlock;\n          var polynomial = this._polynomial;\n          polynomial[0] = 1;\n          for (i = 0; i < eccBlock; i++) {\n            polynomial[i + 1] = 1;\n            for (j = i; j > 0; j--) {\n              polynomial[j] = polynomial[j] ? polynomial[j - 1] ^ Galois_1.EXPONENT[Frame._modN(Galois_1.LOG[polynomial[j]] + i)] : polynomial[j - 1];\n            }\n            polynomial[0] = Galois_1.EXPONENT[Frame._modN(Galois_1.LOG[polynomial[0]] + i)];\n          }\n\n          // Use logs for generator polynomial to save calculation step.\n          for (i = 0; i <= eccBlock; i++) {\n            polynomial[i] = Galois_1.LOG[polynomial[i]];\n          }\n        },\n        _checkBadness: function () {\n          var b, b1, h, x, y;\n          var bad = 0;\n          var badness = this._badness;\n          var buffer = this.buffer;\n          var width = this.width;\n\n          // Blocks of same colour.\n          for (y = 0; y < width - 1; y++) {\n            for (x = 0; x < width - 1; x++) {\n              // All foreground colour.\n              if (buffer[x + width * y] && buffer[x + 1 + width * y] && buffer[x + width * (y + 1)] && buffer[x + 1 + width * (y + 1)] ||\n              // All background colour.\n              !(buffer[x + width * y] || buffer[x + 1 + width * y] || buffer[x + width * (y + 1)] || buffer[x + 1 + width * (y + 1)])) {\n                bad += Frame.N2;\n              }\n            }\n          }\n          var bw = 0;\n\n          // X runs.\n          for (y = 0; y < width; y++) {\n            h = 0;\n            badness[0] = 0;\n            for (b = 0, x = 0; x < width; x++) {\n              b1 = buffer[x + width * y];\n              if (b === b1) {\n                badness[h]++;\n              } else {\n                badness[++h] = 1;\n              }\n              b = b1;\n              bw += b ? 1 : -1;\n            }\n            bad += this._getBadness(h);\n          }\n          if (bw < 0) {\n            bw = -bw;\n          }\n          var count = 0;\n          var big = bw;\n          big += big << 2;\n          big <<= 1;\n          while (big > width * width) {\n            big -= width * width;\n            count++;\n          }\n          bad += count * Frame.N4;\n\n          // Y runs.\n          for (x = 0; x < width; x++) {\n            h = 0;\n            badness[0] = 0;\n            for (b = 0, y = 0; y < width; y++) {\n              b1 = buffer[x + width * y];\n              if (b === b1) {\n                badness[h]++;\n              } else {\n                badness[++h] = 1;\n              }\n              b = b1;\n            }\n            bad += this._getBadness(h);\n          }\n          return bad;\n        },\n        _convertBitStream: function (length) {\n          var bit, i;\n          var ecc = this._ecc;\n          var version = this._version;\n\n          // Convert string to bit stream. 8-bit data to QR-coded 8-bit data (numeric, alphanumeric, or kanji not supported).\n          for (i = 0; i < length; i++) {\n            ecc[i] = this._value.charCodeAt(i);\n          }\n          var stringBuffer = this._stringBuffer = ecc.slice();\n          var maxLength = this._calculateMaxLength();\n          if (length >= maxLength - 2) {\n            length = maxLength - 2;\n            if (version > 9) {\n              length--;\n            }\n          }\n\n          // Shift and re-pack to insert length prefix.\n          var index = length;\n          if (version > 9) {\n            stringBuffer[index + 2] = 0;\n            stringBuffer[index + 3] = 0;\n            while (index--) {\n              bit = stringBuffer[index];\n              stringBuffer[index + 3] |= 255 & bit << 4;\n              stringBuffer[index + 2] = bit >> 4;\n            }\n            stringBuffer[2] |= 255 & length << 4;\n            stringBuffer[1] = length >> 4;\n            stringBuffer[0] = 0x40 | length >> 12;\n          } else {\n            stringBuffer[index + 1] = 0;\n            stringBuffer[index + 2] = 0;\n            while (index--) {\n              bit = stringBuffer[index];\n              stringBuffer[index + 2] |= 255 & bit << 4;\n              stringBuffer[index + 1] = bit >> 4;\n            }\n            stringBuffer[1] |= 255 & length << 4;\n            stringBuffer[0] = 0x40 | length >> 4;\n          }\n\n          // Fill to end with pad pattern.\n          index = length + 3 - (version < 10);\n          while (index < maxLength) {\n            stringBuffer[index++] = 0xec;\n            stringBuffer[index++] = 0x11;\n          }\n        },\n        _getBadness: function (length) {\n          var i;\n          var badRuns = 0;\n          var badness = this._badness;\n          for (i = 0; i <= length; i++) {\n            if (badness[i] >= 5) {\n              badRuns += Frame.N1 + badness[i] - 5;\n            }\n          }\n\n          // FBFFFBF as in finder.\n          for (i = 3; i < length - 1; i += 2) {\n            if (badness[i - 2] === badness[i + 2] && badness[i + 2] === badness[i - 1] && badness[i - 1] === badness[i + 1] && badness[i - 1] * 3 === badness[i] && (\n            // Background around the foreground pattern? Not part of the specs.\n            badness[i - 3] === 0 || i + 3 > length || badness[i - 3] * 3 >= badness[i] * 4 || badness[i + 3] * 3 >= badness[i] * 4)) {\n              badRuns += Frame.N3;\n            }\n          }\n          return badRuns;\n        },\n        _finish: function () {\n          // Save pre-mask copy of frame.\n          this._stringBuffer = this.buffer.slice();\n          var currentMask, i;\n          var bit = 0;\n          var mask = 30000;\n\n          /*\n           * Using for instead of while since in original Arduino code if an early mask was \"good enough\" it wouldn't try for\n           * a better one since they get more complex and take longer.\n           */\n          for (i = 0; i < 8; i++) {\n            // Returns foreground-background imbalance.\n            this._applyMask(i);\n            currentMask = this._checkBadness();\n\n            // Is current mask better than previous best?\n            if (currentMask < mask) {\n              mask = currentMask;\n              bit = i;\n            }\n\n            // Don't increment \"i\" to a void redoing mask.\n            if (bit === 7) {\n              break;\n            }\n\n            // Reset for next pass.\n            this.buffer = this._stringBuffer.slice();\n          }\n\n          // Redo best mask as none were \"good enough\" (i.e. last wasn't bit).\n          if (bit !== i) {\n            this._applyMask(bit);\n          }\n\n          // Add in final mask/ECC level bytes.\n          mask = ErrorCorrection_1.FINAL_FORMAT[bit + (this._level - 1 << 3)];\n          var buffer = this.buffer;\n          var width = this.width;\n\n          // Low byte.\n          for (i = 0; i < 8; i++, mask >>= 1) {\n            if (mask & 1) {\n              buffer[width - 1 - i + width * 8] = 1;\n              if (i < 6) {\n                buffer[8 + width * i] = 1;\n              } else {\n                buffer[8 + width * (i + 1)] = 1;\n              }\n            }\n          }\n\n          // High byte.\n          for (i = 0; i < 7; i++, mask >>= 1) {\n            if (mask & 1) {\n              buffer[8 + width * (width - 7 + i)] = 1;\n              if (i) {\n                buffer[6 - i + width * 8] = 1;\n              } else {\n                buffer[7 + width * 8] = 1;\n              }\n            }\n          }\n        },\n        _interleaveBlocks: function () {\n          var i, j;\n          var dataBlock = this._dataBlock;\n          var ecc = this._ecc;\n          var eccBlock = this._eccBlock;\n          var k = 0;\n          var maxLength = this._calculateMaxLength();\n          var neccBlock1 = this._neccBlock1;\n          var neccBlock2 = this._neccBlock2;\n          var stringBuffer = this._stringBuffer;\n          for (i = 0; i < dataBlock; i++) {\n            for (j = 0; j < neccBlock1; j++) {\n              ecc[k++] = stringBuffer[i + j * dataBlock];\n            }\n            for (j = 0; j < neccBlock2; j++) {\n              ecc[k++] = stringBuffer[neccBlock1 * dataBlock + i + j * (dataBlock + 1)];\n            }\n          }\n          for (j = 0; j < neccBlock2; j++) {\n            ecc[k++] = stringBuffer[neccBlock1 * dataBlock + i + j * (dataBlock + 1)];\n          }\n          for (i = 0; i < eccBlock; i++) {\n            for (j = 0; j < neccBlock1 + neccBlock2; j++) {\n              ecc[k++] = stringBuffer[maxLength + i + j * eccBlock];\n            }\n          }\n          this._stringBuffer = ecc;\n        },\n        _insertAlignments: function () {\n          var i, x, y;\n          var version = this._version;\n          var width = this.width;\n          if (version > 1) {\n            i = Alignment_1.BLOCK[version];\n            y = width - 7;\n            for (;;) {\n              x = width - 7;\n              while (x > i - 3) {\n                this._addAlignment(x, y);\n                if (x < i) {\n                  break;\n                }\n                x -= i;\n              }\n              if (y <= i + 9) {\n                break;\n              }\n              y -= i;\n              this._addAlignment(6, y);\n              this._addAlignment(y, 6);\n            }\n          }\n        },\n        _insertFinders: function () {\n          var i, j, x, y;\n          var buffer = this.buffer;\n          var width = this.width;\n          for (i = 0; i < 3; i++) {\n            j = 0;\n            y = 0;\n            if (i === 1) {\n              j = width - 7;\n            }\n            if (i === 2) {\n              y = width - 7;\n            }\n            buffer[y + 3 + width * (j + 3)] = 1;\n            for (x = 0; x < 6; x++) {\n              buffer[y + x + width * j] = 1;\n              buffer[y + width * (j + x + 1)] = 1;\n              buffer[y + 6 + width * (j + x)] = 1;\n              buffer[y + x + 1 + width * (j + 6)] = 1;\n            }\n            for (x = 1; x < 5; x++) {\n              this._setMask(y + x, j + 1);\n              this._setMask(y + 1, j + x + 1);\n              this._setMask(y + 5, j + x);\n              this._setMask(y + x + 1, j + 5);\n            }\n            for (x = 2; x < 4; x++) {\n              buffer[y + x + width * (j + 2)] = 1;\n              buffer[y + 2 + width * (j + x + 1)] = 1;\n              buffer[y + 4 + width * (j + x)] = 1;\n              buffer[y + x + 1 + width * (j + 4)] = 1;\n            }\n          }\n        },\n        _insertTimingGap: function () {\n          var x, y;\n          var width = this.width;\n          for (y = 0; y < 7; y++) {\n            this._setMask(7, y);\n            this._setMask(width - 8, y);\n            this._setMask(7, y + width - 7);\n          }\n          for (x = 0; x < 8; x++) {\n            this._setMask(x, 7);\n            this._setMask(x + width - 8, 7);\n            this._setMask(x, width - 8);\n          }\n        },\n        _insertTimingRowAndColumn: function () {\n          var x;\n          var buffer = this.buffer;\n          var width = this.width;\n          for (x = 0; x < width - 14; x++) {\n            if (x & 1) {\n              this._setMask(8 + x, 6);\n              this._setMask(6, 8 + x);\n            } else {\n              buffer[8 + x + width * 6] = 1;\n              buffer[6 + width * (8 + x)] = 1;\n            }\n          }\n        },\n        _insertVersion: function () {\n          var i, j, x, y;\n          var buffer = this.buffer;\n          var version = this._version;\n          var width = this.width;\n          if (version > 6) {\n            i = Version_1.BLOCK[version - 7];\n            j = 17;\n            for (x = 0; x < 6; x++) {\n              for (y = 0; y < 3; y++, j--) {\n                if (1 & (j > 11 ? version >> j - 12 : i >> j)) {\n                  buffer[5 - x + width * (2 - y + width - 11)] = 1;\n                  buffer[2 - y + width - 11 + width * (5 - x)] = 1;\n                } else {\n                  this._setMask(5 - x, 2 - y + width - 11);\n                  this._setMask(2 - y + width - 11, 5 - x);\n                }\n              }\n            }\n          }\n        },\n        _isMasked: function (x, y) {\n          var bit = Frame._getMaskBit(x, y);\n          return this._mask[bit] === 1;\n        },\n        _pack: function () {\n          var bit, i, j;\n          var k = 1;\n          var v = 1;\n          var width = this.width;\n          var x = width - 1;\n          var y = width - 1;\n\n          // Interleaved data and ECC codes.\n          var length = (this._dataBlock + this._eccBlock) * (this._neccBlock1 + this._neccBlock2) + this._neccBlock2;\n          for (i = 0; i < length; i++) {\n            bit = this._stringBuffer[i];\n            for (j = 0; j < 8; j++, bit <<= 1) {\n              if (0x80 & bit) {\n                this.buffer[x + width * y] = 1;\n              }\n\n              // Find next fill position.\n              do {\n                if (v) {\n                  x--;\n                } else {\n                  x++;\n                  if (k) {\n                    if (y !== 0) {\n                      y--;\n                    } else {\n                      x -= 2;\n                      k = !k;\n                      if (x === 6) {\n                        x--;\n                        y = 9;\n                      }\n                    }\n                  } else if (y !== width - 1) {\n                    y++;\n                  } else {\n                    x -= 2;\n                    k = !k;\n                    if (x === 6) {\n                      x--;\n                      y -= 8;\n                    }\n                  }\n                }\n                v = !v;\n              } while (this._isMasked(x, y));\n            }\n          }\n        },\n        _reverseMask: function () {\n          var x, y;\n          var width = this.width;\n          for (x = 0; x < 9; x++) {\n            this._setMask(x, 8);\n          }\n          for (x = 0; x < 8; x++) {\n            this._setMask(x + width - 8, 8);\n            this._setMask(8, x);\n          }\n          for (y = 0; y < 7; y++) {\n            this._setMask(8, y + width - 7);\n          }\n        },\n        _setMask: function (x, y) {\n          var bit = Frame._getMaskBit(x, y);\n          this._mask[bit] = 1;\n        },\n        _syncMask: function () {\n          var x, y;\n          var width = this.width;\n          for (y = 0; y < width; y++) {\n            for (x = 0; x <= y; x++) {\n              if (this.buffer[x + width * y]) {\n                this._setMask(x, y);\n              }\n            }\n          }\n        }\n      }, {\n        _createArray: function (length) {\n          var i;\n          var array = [];\n          for (i = 0; i < length; i++) {\n            array[i] = 0;\n          }\n          return array;\n        },\n        _getMaskBit: function (x, y) {\n          var bit;\n          if (x > y) {\n            bit = x;\n            x = y;\n            y = bit;\n          }\n          bit = y;\n          bit += y * y;\n          bit >>= 1;\n          bit += x;\n          return bit;\n        },\n        _modN: function (x) {\n          while (x >= 255) {\n            x -= 255;\n            x = (x >> 8) + (x & 255);\n          }\n          return x;\n        },\n        // *Badness* coefficients.\n        N1: 3,\n        N2: 3,\n        N3: 40,\n        N4: 10\n      });\n      var Frame_1 = Frame;\n\n      /**\n       * The options used by {@link Frame}.\n       *\n       * @typedef {Object} Frame~Options\n       * @property {string} level - The ECC level to be used.\n       * @property {string} value - The value to be encoded.\n       */\n\n      /**\n       * An implementation of {@link Renderer} for working with <code>img</code> elements.\n       *\n       * This depends on {@link CanvasRenderer} being executed first as this implementation simply applies the data URL from\n       * the rendered <code>canvas</code> element as the <code>src</code> for the <code>img</code> element being rendered.\n       *\n       * @public\n       * @class\n       * @extends Renderer\n       */\n      var ImageRenderer = Renderer_1.extend({\n        /**\n         * @override\n         */\n        draw: function () {\n          this.element.src = this.qrious.toDataURL();\n        },\n        /**\n         * @override\n         */\n        reset: function () {\n          this.element.src = '';\n        },\n        /**\n         * @override\n         */\n        resize: function () {\n          var element = this.element;\n          element.width = element.height = this.qrious.size;\n        }\n      });\n      var ImageRenderer_1 = ImageRenderer;\n\n      /**\n       * Defines an available option while also configuring how values are applied to the target object.\n       *\n       * Optionally, a default value can be specified as well a value transformer for greater control over how the option\n       * value is applied.\n       *\n       * If no value transformer is specified, then any specified option will be applied directly. All values are maintained\n       * on the target object itself as a field using the option name prefixed with a single underscore.\n       *\n       * When an option is specified as modifiable, the {@link OptionManager} will be required to include a setter for the\n       * property that is defined on the target object that uses the option name.\n       *\n       * @param {string} name - the name to be used\n       * @param {boolean} [modifiable] - <code>true</code> if the property defined on target objects should include a setter;\n       * otherwise <code>false</code>\n       * @param {*} [defaultValue] - the default value to be used\n       * @param {Option~ValueTransformer} [valueTransformer] - the value transformer to be used\n       * @public\n       * @class\n       * @extends Nevis\n       */\n      var Option = lite.extend(function (name, modifiable, defaultValue, valueTransformer) {\n        /**\n         * The name for this {@link Option}.\n         *\n         * @public\n         * @type {string}\n         * @memberof Option#\n         */\n        this.name = name;\n\n        /**\n         * Whether a setter should be included on the property defined on target objects for this {@link Option}.\n         *\n         * @public\n         * @type {boolean}\n         * @memberof Option#\n         */\n        this.modifiable = Boolean(modifiable);\n\n        /**\n         * The default value for this {@link Option}.\n         *\n         * @public\n         * @type {*}\n         * @memberof Option#\n         */\n        this.defaultValue = defaultValue;\n        this._valueTransformer = valueTransformer;\n      }, {\n        /**\n         * Transforms the specified <code>value</code> so that it can be applied for this {@link Option}.\n         *\n         * If a value transformer has been specified for this {@link Option}, it will be called upon to transform\n         * <code>value</code>. Otherwise, <code>value</code> will be returned directly.\n         *\n         * @param {*} value - the value to be transformed\n         * @return {*} The transformed value or <code>value</code> if no value transformer is specified.\n         * @public\n         * @memberof Option#\n         */\n        transform: function (value) {\n          var transformer = this._valueTransformer;\n          if (typeof transformer === 'function') {\n            return transformer(value, this);\n          }\n          return value;\n        }\n      });\n      var Option_1 = Option;\n\n      /**\n       * Returns a transformed value for the specified <code>value</code> to be applied for the <code>option</code> provided.\n       *\n       * @callback Option~ValueTransformer\n       * @param {*} value - the value to be transformed\n       * @param {Option} option - the {@link Option} for which <code>value</code> is being transformed\n       * @return {*} The transform value.\n       */\n\n      /**\n       * Contains utility methods that are useful throughout the library.\n       *\n       * @public\n       * @class\n       * @extends Nevis\n       */\n      var Utilities = lite.extend(null, {\n        /**\n         * Returns the absolute value of a given number.\n         *\n         * This method is simply a convenient shorthand for <code>Math.abs</code> while ensuring that nulls are returned as\n         * <code>null</code> instead of zero.\n         *\n         * @param {number} value - the number whose absolute value is to be returned\n         * @return {number} The absolute value of <code>value</code> or <code>null</code> if <code>value</code> is\n         * <code>null</code>.\n         * @public\n         * @static\n         * @memberof Utilities\n         */\n        abs: function (value) {\n          return value != null ? Math.abs(value) : null;\n        },\n        /**\n         * Returns whether the specified <code>object</code> has a property with the specified <code>name</code> as an own\n         * (not inherited) property.\n         *\n         * @param {Object} object - the object on which the property is to be checked\n         * @param {string} name - the name of the property to be checked\n         * @return {boolean} <code>true</code> if <code>object</code> has an own property with <code>name</code>.\n         * @public\n         * @static\n         * @memberof Utilities\n         */\n        hasOwn: function (object, name) {\n          return Object.prototype.hasOwnProperty.call(object, name);\n        },\n        /**\n         * A non-operation method that does absolutely nothing.\n         *\n         * @return {void}\n         * @public\n         * @static\n         * @memberof Utilities\n         */\n        noop: function () {},\n        /**\n         * Transforms the specified <code>string</code> to upper case while remaining null-safe.\n         *\n         * @param {string} string - the string to be transformed to upper case\n         * @return {string} <code>string</code> transformed to upper case if <code>string</code> is not <code>null</code>.\n         * @public\n         * @static\n         * @memberof Utilities\n         */\n        toUpperCase: function (string) {\n          return string != null ? string.toUpperCase() : null;\n        }\n      });\n      var Utilities_1 = Utilities;\n\n      /**\n       * Manages multiple {@link Option} instances that are intended to be used by multiple implementations.\n       *\n       * Although the option definitions are shared between targets, the values are maintained on the targets themselves.\n       *\n       * @param {Option[]} options - the options to be used\n       * @public\n       * @class\n       * @extends Nevis\n       */\n      var OptionManager = lite.extend(function (options) {\n        /**\n         * The available options for this {@link OptionManager}.\n         *\n         * @public\n         * @type {Object.<string, Option>}\n         * @memberof OptionManager#\n         */\n        this.options = {};\n        options.forEach(function (option) {\n          this.options[option.name] = option;\n        }, this);\n      }, {\n        /**\n         * Returns whether an option with the specified <code>name</code> is available.\n         *\n         * @param {string} name - the name of the {@link Option} whose existence is to be checked\n         * @return {boolean} <code>true</code> if an {@link Option} exists with <code>name</code>; otherwise\n         * <code>false</code>.\n         * @public\n         * @memberof OptionManager#\n         */\n        exists: function (name) {\n          return this.options[name] != null;\n        },\n        /**\n         * Returns the value of the option with the specified <code>name</code> on the <code>target</code> object provided.\n         *\n         * @param {string} name - the name of the {@link Option} whose value on <code>target</code> is to be returned\n         * @param {Object} target - the object from which the value of the named {@link Option} is to be returned\n         * @return {*} The value of the {@link Option} with <code>name</code> on <code>target</code>.\n         * @public\n         * @memberof OptionManager#\n         */\n        get: function (name, target) {\n          return OptionManager._get(this.options[name], target);\n        },\n        /**\n         * Returns a copy of all of the available options on the <code>target</code> object provided.\n         *\n         * @param {Object} target - the object from which the option name/value pairs are to be returned\n         * @return {Object.<string, *>} A hash containing the name/value pairs of all options on <code>target</code>.\n         * @public\n         * @memberof OptionManager#\n         */\n        getAll: function (target) {\n          var name;\n          var options = this.options;\n          var result = {};\n          for (name in options) {\n            if (Utilities_1.hasOwn(options, name)) {\n              result[name] = OptionManager._get(options[name], target);\n            }\n          }\n          return result;\n        },\n        /**\n         * Initializes the available options for the <code>target</code> object provided and then applies the initial values\n         * within the speciifed <code>options</code>.\n         *\n         * This method will throw an error if any of the names within <code>options</code> does not match an available option.\n         *\n         * This involves setting the default values and defining properties for all of the available options on\n         * <code>target</code> before finally calling {@link OptionMananger#setAll} with <code>options</code> and\n         * <code>target</code>. Any options that are configured to be modifiable will have a setter included in their defined\n         * property that will allow its corresponding value to be modified.\n         *\n         * If a change handler is specified, it will be called whenever the value changes on <code>target</code> for a\n         * modifiable option, but only when done so via the defined property's setter.\n         *\n         * @param {Object.<string, *>} options - the name/value pairs of the initial options to be set\n         * @param {Object} target - the object on which the options are to be initialized\n         * @param {Function} [changeHandler] - the function to be called whenever the value of an modifiable option changes on\n         * <code>target</code>\n         * @return {void}\n         * @throws {Error} If <code>options</code> contains an invalid option name.\n         * @public\n         * @memberof OptionManager#\n         */\n        init: function (options, target, changeHandler) {\n          if (typeof changeHandler !== 'function') {\n            changeHandler = Utilities_1.noop;\n          }\n          var name, option;\n          for (name in this.options) {\n            if (Utilities_1.hasOwn(this.options, name)) {\n              option = this.options[name];\n              OptionManager._set(option, option.defaultValue, target);\n              OptionManager._createAccessor(option, target, changeHandler);\n            }\n          }\n          this._setAll(options, target, true);\n        },\n        /**\n         * Sets the value of the option with the specified <code>name</code> on the <code>target</code> object provided to\n         * <code>value</code>.\n         *\n         * This method will throw an error if <code>name</code> does not match an available option or matches an option that\n         * cannot be modified.\n         *\n         * If <code>value</code> is <code>null</code> and the {@link Option} has a default value configured, then that default\n         * value will be used instead. If the {@link Option} also has a value transformer configured, it will be used to\n         * transform whichever value was determined to be used.\n         *\n         * This method returns whether the value of the underlying field on <code>target</code> was changed as a result.\n         *\n         * @param {string} name - the name of the {@link Option} whose value is to be set\n         * @param {*} value - the value to be set for the named {@link Option} on <code>target</code>\n         * @param {Object} target - the object on which <code>value</code> is to be set for the named {@link Option}\n         * @return {boolean} <code>true</code> if the underlying field on <code>target</code> was changed; otherwise\n         * <code>false</code>.\n         * @throws {Error} If <code>name</code> is invalid or is for an option that cannot be modified.\n         * @public\n         * @memberof OptionManager#\n         */\n        set: function (name, value, target) {\n          return this._set(name, value, target);\n        },\n        /**\n         * Sets all of the specified <code>options</code> on the <code>target</code> object provided to their corresponding\n         * values.\n         *\n         * This method will throw an error if any of the names within <code>options</code> does not match an available option\n         * or matches an option that cannot be modified.\n         *\n         * If any value within <code>options</code> is <code>null</code> and the corresponding {@link Option} has a default\n         * value configured, then that default value will be used instead. If an {@link Option} also has a value transformer\n         * configured, it will be used to transform whichever value was determined to be used.\n         *\n         * This method returns whether the value for any of the underlying fields on <code>target</code> were changed as a\n         * result.\n         *\n         * @param {Object.<string, *>} options - the name/value pairs of options to be set\n         * @param {Object} target - the object on which the options are to be set\n         * @return {boolean} <code>true</code> if any of the underlying fields on <code>target</code> were changed; otherwise\n         * <code>false</code>.\n         * @throws {Error} If <code>options</code> contains an invalid option name or an option that cannot be modiifed.\n         * @public\n         * @memberof OptionManager#\n         */\n        setAll: function (options, target) {\n          return this._setAll(options, target);\n        },\n        _set: function (name, value, target, allowUnmodifiable) {\n          var option = this.options[name];\n          if (!option) {\n            throw new Error('Invalid option: ' + name);\n          }\n          if (!option.modifiable && !allowUnmodifiable) {\n            throw new Error('Option cannot be modified: ' + name);\n          }\n          return OptionManager._set(option, value, target);\n        },\n        _setAll: function (options, target, allowUnmodifiable) {\n          if (!options) {\n            return false;\n          }\n          var name;\n          var changed = false;\n          for (name in options) {\n            if (Utilities_1.hasOwn(options, name) && this._set(name, options[name], target, allowUnmodifiable)) {\n              changed = true;\n            }\n          }\n          return changed;\n        }\n      }, {\n        _createAccessor: function (option, target, changeHandler) {\n          var descriptor = {\n            get: function () {\n              return OptionManager._get(option, target);\n            }\n          };\n          if (option.modifiable) {\n            descriptor.set = function (value) {\n              if (OptionManager._set(option, value, target)) {\n                changeHandler(value, option);\n              }\n            };\n          }\n          Object.defineProperty(target, option.name, descriptor);\n        },\n        _get: function (option, target) {\n          return target['_' + option.name];\n        },\n        _set: function (option, value, target) {\n          var fieldName = '_' + option.name;\n          var oldValue = target[fieldName];\n          var newValue = option.transform(value != null ? value : option.defaultValue);\n          target[fieldName] = newValue;\n          return newValue !== oldValue;\n        }\n      });\n      var OptionManager_1 = OptionManager;\n\n      /**\n       * Called whenever the value of a modifiable {@link Option} is changed on a target object via the defined property's\n       * setter.\n       *\n       * @callback OptionManager~ChangeHandler\n       * @param {*} value - the new value for <code>option</code> on the target object\n       * @param {Option} option - the modifable {@link Option} whose value has changed on the target object.\n       * @return {void}\n       */\n\n      /**\n       * A basic manager for {@link Service} implementations that are mapped to simple names.\n       *\n       * @public\n       * @class\n       * @extends Nevis\n       */\n      var ServiceManager = lite.extend(function () {\n        this._services = {};\n      }, {\n        /**\n         * Returns the {@link Service} being managed with the specified <code>name</code>.\n         *\n         * @param {string} name - the name of the {@link Service} to be returned\n         * @return {Service} The {@link Service} is being managed with <code>name</code>.\n         * @throws {Error} If no {@link Service} is being managed with <code>name</code>.\n         * @public\n         * @memberof ServiceManager#\n         */\n        getService: function (name) {\n          var service = this._services[name];\n          if (!service) {\n            throw new Error('Service is not being managed with name: ' + name);\n          }\n          return service;\n        },\n        /**\n         * Sets the {@link Service} implementation to be managed for the specified <code>name</code> to the\n         * <code>service</code> provided.\n         *\n         * @param {string} name - the name of the {@link Service} to be managed with <code>name</code>\n         * @param {Service} service - the {@link Service} implementation to be managed\n         * @return {void}\n         * @throws {Error} If a {@link Service} is already being managed with the same <code>name</code>.\n         * @public\n         * @memberof ServiceManager#\n         */\n        setService: function (name, service) {\n          if (this._services[name]) {\n            throw new Error('Service is already managed with name: ' + name);\n          }\n          if (service) {\n            this._services[name] = service;\n          }\n        }\n      });\n      var ServiceManager_1 = ServiceManager;\n      var optionManager = new OptionManager_1([new Option_1('background', true, 'white'), new Option_1('backgroundAlpha', true, 1, Utilities_1.abs), new Option_1('element'), new Option_1('foreground', true, 'black'), new Option_1('foregroundAlpha', true, 1, Utilities_1.abs), new Option_1('level', true, 'L', Utilities_1.toUpperCase), new Option_1('mime', true, 'image/png'), new Option_1('padding', true, null, Utilities_1.abs), new Option_1('size', true, 100, Utilities_1.abs), new Option_1('value', true, '')]);\n      var serviceManager = new ServiceManager_1();\n\n      /**\n       * Enables configuration of a QR code generator which uses HTML5 <code>canvas</code> for rendering.\n       *\n       * @param {QRious~Options} [options] - the options to be used\n       * @throws {Error} If any <code>options</code> are invalid.\n       * @public\n       * @class\n       * @extends Nevis\n       */\n      var QRious = lite.extend(function (options) {\n        optionManager.init(options, this, this.update.bind(this));\n        var element = optionManager.get('element', this);\n        var elementService = serviceManager.getService('element');\n        var canvas = element && elementService.isCanvas(element) ? element : elementService.createCanvas();\n        var image = element && elementService.isImage(element) ? element : elementService.createImage();\n        this._canvasRenderer = new CanvasRenderer_1(this, canvas, true);\n        this._imageRenderer = new ImageRenderer_1(this, image, image === element);\n        this.update();\n      }, {\n        /**\n         * Returns all of the options configured for this {@link QRious}.\n         *\n         * Any changes made to the returned object will not be reflected in the options themselves or their corresponding\n         * underlying fields.\n         *\n         * @return {Object.<string, *>} A copy of the applied options.\n         * @public\n         * @memberof QRious#\n         */\n        get: function () {\n          return optionManager.getAll(this);\n        },\n        /**\n         * Sets all of the specified <code>options</code> and automatically updates this {@link QRious} if any of the\n         * underlying fields are changed as a result.\n         *\n         * This is the preferred method for updating multiple options at one time to avoid unnecessary updates between\n         * changes.\n         *\n         * @param {QRious~Options} options - the options to be set\n         * @return {void}\n         * @throws {Error} If any <code>options</code> are invalid or cannot be modified.\n         * @public\n         * @memberof QRious#\n         */\n        set: function (options) {\n          if (optionManager.setAll(options, this)) {\n            this.update();\n          }\n        },\n        /**\n         * Returns the image data URI for the generated QR code using the <code>mime</code> provided.\n         *\n         * @param {string} [mime] - the MIME type for the image\n         * @return {string} The image data URI for the QR code.\n         * @public\n         * @memberof QRious#\n         */\n        toDataURL: function (mime) {\n          return this.canvas.toDataURL(mime || this.mime);\n        },\n        /**\n         * Updates this {@link QRious} by generating a new {@link Frame} and re-rendering the QR code.\n         *\n         * @return {void}\n         * @protected\n         * @memberof QRious#\n         */\n        update: function () {\n          var frame = new Frame_1({\n            level: this.level,\n            value: this.value\n          });\n          this._canvasRenderer.render(frame);\n          this._imageRenderer.render(frame);\n        }\n      }, {\n        /**\n         * Configures the <code>service</code> provided to be used by all {@link QRious} instances.\n         *\n         * @param {Service} service - the {@link Service} to be configured\n         * @return {void}\n         * @throws {Error} If a {@link Service} has already been configured with the same name.\n         * @public\n         * @static\n         * @memberof QRious\n         */\n        use: function (service) {\n          serviceManager.setService(service.getName(), service);\n        }\n      });\n      Object.defineProperties(QRious.prototype, {\n        canvas: {\n          /**\n           * Returns the <code>canvas</code> element being used to render the QR code for this {@link QRious}.\n           *\n           * @return {*} The <code>canvas</code> element.\n           * @public\n           * @memberof QRious#\n           * @alias canvas\n           */\n          get: function () {\n            return this._canvasRenderer.getElement();\n          }\n        },\n        image: {\n          /**\n           * Returns the <code>img</code> element being used to render the QR code for this {@link QRious}.\n           *\n           * @return {*} The <code>img</code> element.\n           * @public\n           * @memberof QRious#\n           * @alias image\n           */\n          get: function () {\n            return this._imageRenderer.getElement();\n          }\n        }\n      });\n      var QRious_1$2 = QRious;\n\n      /**\n       * The options used by {@link QRious}.\n       *\n       * @typedef {Object} QRious~Options\n       * @property {string} [background=\"white\"] - The background color to be applied to the QR code.\n       * @property {number} [backgroundAlpha=1] - The background alpha to be applied to the QR code.\n       * @property {*} [element] - The element to be used to render the QR code which may either be an <code>canvas</code> or\n       * <code>img</code>. The element(s) will be created if needed.\n       * @property {string} [foreground=\"black\"] - The foreground color to be applied to the QR code.\n       * @property {number} [foregroundAlpha=1] - The foreground alpha to be applied to the QR code.\n       * @property {string} [level=\"L\"] - The error correction level to be applied to the QR code.\n       * @property {string} [mime=\"image/png\"] - The MIME type to be used to render the image for the QR code.\n       * @property {number} [padding] - The padding for the QR code in pixels.\n       * @property {number} [size=100] - The size of the QR code in pixels.\n       * @property {string} [value=\"\"] - The value to be encoded within the QR code.\n       */\n\n      var index = QRious_1$2;\n\n      /**\n       * Defines a service contract that must be met by all implementations.\n       *\n       * @public\n       * @class\n       * @extends Nevis\n       */\n      var Service = lite.extend({\n        /**\n         * Returns the name of this {@link Service}.\n         *\n         * @return {string} The service name.\n         * @public\n         * @abstract\n         * @memberof Service#\n         */\n        getName: function () {}\n      });\n      var Service_1 = Service;\n\n      /**\n       * A service for working with elements.\n       *\n       * @public\n       * @class\n       * @extends Service\n       */\n      var ElementService = Service_1.extend({\n        /**\n         * Creates an instance of a canvas element.\n         *\n         * Implementations of {@link ElementService} <b>must</b> override this method with their own specific logic.\n         *\n         * @return {*} The newly created canvas element.\n         * @public\n         * @abstract\n         * @memberof ElementService#\n         */\n        createCanvas: function () {},\n        /**\n         * Creates an instance of a image element.\n         *\n         * Implementations of {@link ElementService} <b>must</b> override this method with their own specific logic.\n         *\n         * @return {*} The newly created image element.\n         * @public\n         * @abstract\n         * @memberof ElementService#\n         */\n        createImage: function () {},\n        /**\n         * @override\n         */\n        getName: function () {\n          return 'element';\n        },\n        /**\n         * Returns whether the specified <code>element</code> is a canvas.\n         *\n         * Implementations of {@link ElementService} <b>must</b> override this method with their own specific logic.\n         *\n         * @param {*} element - the element to be checked\n         * @return {boolean} <code>true</code> if <code>element</code> is a canvas; otherwise <code>false</code>.\n         * @public\n         * @abstract\n         * @memberof ElementService#\n         */\n        isCanvas: function (element) {},\n        /**\n         * Returns whether the specified <code>element</code> is an image.\n         *\n         * Implementations of {@link ElementService} <b>must</b> override this method with their own specific logic.\n         *\n         * @param {*} element - the element to be checked\n         * @return {boolean} <code>true</code> if <code>element</code> is an image; otherwise <code>false</code>.\n         * @public\n         * @abstract\n         * @memberof ElementService#\n         */\n        isImage: function (element) {}\n      });\n      var ElementService_1 = ElementService;\n\n      /**\n       * An implementation of {@link ElementService} intended for use within a browser environment.\n       *\n       * @public\n       * @class\n       * @extends ElementService\n       */\n      var BrowserElementService = ElementService_1.extend({\n        /**\n         * @override\n         */\n        createCanvas: function () {\n          return document.createElement('canvas');\n        },\n        /**\n         * @override\n         */\n        createImage: function () {\n          return document.createElement('img');\n        },\n        /**\n         * @override\n         */\n        isCanvas: function (element) {\n          return element instanceof HTMLCanvasElement;\n        },\n        /**\n         * @override\n         */\n        isImage: function (element) {\n          return element instanceof HTMLImageElement;\n        }\n      });\n      var BrowserElementService_1 = BrowserElementService;\n      index.use(new BrowserElementService_1());\n      var QRious_1 = index;\n      return QRious_1;\n    });\n  });\n  var vQriously = {\n    render: function render() {\n      var _vm = this;\n      var _h = _vm.$createElement;\n      var _c = _vm._self._c || _h;\n      return _c('div', [_c('canvas', {\n        ref: \"qrcode\"\n      })]);\n    },\n    staticRenderFns: [],\n    data: function data() {\n      return {\n        qrious: null\n      };\n    },\n    props: {\n      background: {\n        type: String,\n        default: 'white'\n      },\n      backgroundAlpha: {\n        type: Number,\n        default: 0.0\n      },\n      foreground: {\n        type: String,\n        default: 'black'\n      },\n      foregroundAlpha: {\n        type: Number,\n        default: 1.0\n      },\n      level: {\n        type: String,\n        default: 'L'\n      },\n      mime: {\n        type: String,\n        default: 'image/png'\n      },\n      padding: {\n        type: Number,\n        default: null\n      },\n      size: {\n        type: Number,\n        default: 100\n      },\n      value: {\n        type: String,\n        required: true\n      }\n    },\n    watch: {\n      background: function background() {\n        this.qrious.background = this.background;\n      },\n      backgroundAlpha: function backgroundAlpha() {\n        this.qrious.backgroundAlpha = this.backgroundAlpha;\n      },\n      foreground: function foreground() {\n        this.qrious.foreground = this.foreground;\n      },\n      foregroundAlpha: function foregroundAlpha() {\n        this.qrious.foregroundAlpha = this.foregroundAlpha;\n      },\n      level: function level() {\n        this.qrious.level = this.level;\n      },\n      mime: function mime() {\n        this.qrious.mime = this.mime;\n      },\n      padding: function padding() {\n        this.qrious.padding = this.padding;\n      },\n      size: function size() {\n        this.qrious.size = this.size;\n      },\n      value: function value() {\n        this.qrious.value = this.value;\n      }\n    },\n    mounted: function mounted() {\n      var element = this.$refs.qrcode;\n      var background = this.background;\n      var backgroundAlpha = this.backgroundAlpha;\n      var foreground = this.foreground;\n      var foregroundAlpha = this.foregroundAlpha;\n      var level = this.level;\n      var mime = this.mime;\n      var padding = this.padding;\n      var size = this.size;\n      var value = this.value;\n      this.qrious = new qrious({\n        element: element,\n        background: background,\n        backgroundAlpha: backgroundAlpha,\n        foreground: foreground,\n        foregroundAlpha: foregroundAlpha,\n        level: level,\n        mime: mime,\n        padding: padding,\n        size: size,\n        value: value\n      });\n    }\n  };\n\n  /**\r\n   * @name VueJS vQriously (vue-qriously)\r\n   * @description Component to generate HTML canvas QR codes for Vue.js 2.0\r\n   * @author Theodore Messinezis <theo@theomessin.com>\r\n   * @file vue-qriously plugin definition\r\n   */\n\n  var VueQriously = {\n    install: function install(Vue, options) {\n      Vue.component('qriously', vQriously);\n    }\n  };\n  if (typeof window !== 'undefined' && window.Vue) {\n    window.Vue.use(VueQriously);\n  }\n  return VueQriously;\n});","map":{"version":3,"names":["global","factory","exports","module","define","amd","commonjsGlobal","window","self","createCommonjsModule","fn","qrious","Constructor","hasOwnProperty","Object","prototype","slice","Array","createObject","properties","result","create","extendObject","extend","name","constructor","statics","superConstructor","apply","arguments","class_","super_","own","target","sources","call","property","source","i","length","extend_1","Nevis","nevis","lite","Renderer","element","enabled","Boolean","draw","frame","getElement","render","getModuleSize","padding","pixels","Math","floor","size","width","max","getOffset","moduleSize","offset","resize","reset","Renderer_1","CanvasRenderer","j","context","getContext","fillStyle","foreground","globalAlpha","foregroundAlpha","buffer","fillRect","lineWidth","clearRect","background","backgroundAlpha","height","CanvasRenderer_1","Alignment","BLOCK","Alignment_1","ErrorCorrection","BLOCKS","FINAL_FORMAT","LEVELS","L","M","Q","H","ErrorCorrection_1","Galois","EXPONENT","LOG","Galois_1","Version","Version_1","Frame","options","dataBlock","eccBlock","index","neccBlock1","neccBlock2","valueLength","value","_badness","_level","level","_polynomial","_value","_version","_stringBuffer","_dataBlock","_eccBlock","_neccBlock1","_neccBlock2","_createArray","_ecc","_mask","_insertFinders","_insertAlignments","_insertTimingGap","_reverseMask","_insertTimingRowAndColumn","_insertVersion","_syncMask","_convertBitStream","_calculatePolynomial","_appendEccToData","_interleaveBlocks","_pack","_finish","_addAlignment","x","y","_setMask","_appendData","data","dataLength","ecc","eccLength","bit","polynomial","stringBuffer","_modN","_calculateMaxLength","_applyMask","mask","r3x","r3y","_isMasked","_checkBadness","b","b1","h","bad","badness","N2","bw","_getBadness","count","big","N4","version","charCodeAt","maxLength","badRuns","N1","N3","currentMask","k","_getMaskBit","v","array","Frame_1","ImageRenderer","src","toDataURL","ImageRenderer_1","Option","modifiable","defaultValue","valueTransformer","_valueTransformer","transform","transformer","Option_1","Utilities","abs","hasOwn","object","noop","toUpperCase","string","Utilities_1","OptionManager","forEach","option","exists","get","_get","getAll","init","changeHandler","_set","_createAccessor","_setAll","set","setAll","allowUnmodifiable","Error","changed","descriptor","defineProperty","fieldName","oldValue","newValue","OptionManager_1","ServiceManager","_services","getService","service","setService","ServiceManager_1","optionManager","serviceManager","QRious","update","bind","elementService","canvas","isCanvas","createCanvas","image","isImage","createImage","_canvasRenderer","_imageRenderer","mime","use","getName","defineProperties","QRious_1$2","Service","Service_1","ElementService","ElementService_1","BrowserElementService","document","createElement","HTMLCanvasElement","HTMLImageElement","BrowserElementService_1","QRious_1","vQriously","_vm","_h","$createElement","_c","_self","ref","staticRenderFns","props","type","String","default","Number","required","watch","mounted","$refs","qrcode","VueQriously","install","Vue","component"],"sources":["F:/default/Desktop/shiro-vue/vue/node_modules/vue-qriously/dist/vue-qriously.js"],"sourcesContent":["(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global['vue-qriously'] = factory());\n}(this, (function () { 'use strict';\n\nvar commonjsGlobal = typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\n\n\n\n\nfunction createCommonjsModule(fn, module) {\n\treturn module = { exports: {} }, fn(module, module.exports), module.exports;\n}\n\nvar qrious = createCommonjsModule(function (module, exports) {\n/*\n * QRious v4.0.2\n * Copyright (C) 2017 Alasdair Mercer\n * Copyright (C) 2010 Tom Zerucha\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n(function (global, factory) {\n  module.exports = factory();\n}(commonjsGlobal, (function () { 'use strict';\n\n  /*\n   * Copyright (C) 2017 Alasdair Mercer, !ninja\n   *\n   * Permission is hereby granted, free of charge, to any person obtaining a copy\n   * of this software and associated documentation files (the \"Software\"), to deal\n   * in the Software without restriction, including without limitation the rights\n   * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n   * copies of the Software, and to permit persons to whom the Software is\n   * furnished to do so, subject to the following conditions:\n   *\n   * The above copyright notice and this permission notice shall be included in all\n   * copies or substantial portions of the Software.\n   *\n   * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n   * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n   * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n   * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n   * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n   * SOFTWARE.\n   */\n\n  /**\n   * A bare-bones constructor for surrogate prototype swapping.\n   *\n   * @private\n   * @constructor\n   */\n  var Constructor = /* istanbul ignore next */ function() {};\n  /**\n   * A reference to <code>Object.prototype.hasOwnProperty</code>.\n   *\n   * @private\n   * @type {Function}\n   */\n  var hasOwnProperty = Object.prototype.hasOwnProperty;\n  /**\n   * A reference to <code>Array.prototype.slice</code>.\n   *\n   * @private\n   * @type {Function}\n   */\n  var slice = Array.prototype.slice;\n\n  /**\n   * Creates an object which inherits the given <code>prototype</code>.\n   *\n   * Optionally, the created object can be extended further with the specified <code>properties</code>.\n   *\n   * @param {Object} prototype - the prototype to be inherited by the created object\n   * @param {Object} [properties] - the optional properties to be extended by the created object\n   * @return {Object} The newly created object.\n   * @private\n   */\n  function createObject(prototype, properties) {\n    var result;\n    /* istanbul ignore next */\n    if (typeof Object.create === 'function') {\n      result = Object.create(prototype);\n    } else {\n      Constructor.prototype = prototype;\n      result = new Constructor();\n      Constructor.prototype = null;\n    }\n\n    if (properties) {\n      extendObject(true, result, properties);\n    }\n\n    return result;\n  }\n\n  /**\n   * Extends the constructor to which this method is associated with the <code>prototype</code> and/or\n   * <code>statics</code> provided.\n   *\n   * If <code>name</code> is provided, it will be used as the class name and can be accessed via a special\n   * <code>class_</code> property on the child constructor, otherwise the class name of the super constructor will be used\n   * instead. The class name may also be used string representation for instances of the child constructor (via\n   * <code>toString</code>), but this is not applicable to the <i>lite</i> version of Nevis.\n   *\n   * If <code>constructor</code> is provided, it will be used as the constructor for the child, otherwise a simple\n   * constructor which only calls the super constructor will be used instead.\n   *\n   * The super constructor can be accessed via a special <code>super_</code> property on the child constructor.\n   *\n   * @param {string} [name=this.class_] - the class name to be used for the child constructor\n   * @param {Function} [constructor] - the constructor for the child\n   * @param {Object} [prototype] - the prototype properties to be defined for the child\n   * @param {Object} [statics] - the static properties to be defined for the child\n   * @return {Function} The child <code>constructor</code> provided or the one created if none was given.\n   * @public\n   */\n  function extend(name, constructor, prototype, statics) {\n    var superConstructor = this;\n\n    if (typeof name !== 'string') {\n      statics = prototype;\n      prototype = constructor;\n      constructor = name;\n      name = null;\n    }\n\n    if (typeof constructor !== 'function') {\n      statics = prototype;\n      prototype = constructor;\n      constructor = function() {\n        return superConstructor.apply(this, arguments);\n      };\n    }\n\n    extendObject(false, constructor, superConstructor, statics);\n\n    constructor.prototype = createObject(superConstructor.prototype, prototype);\n    constructor.prototype.constructor = constructor;\n\n    constructor.class_ = name || superConstructor.class_;\n    constructor.super_ = superConstructor;\n\n    return constructor;\n  }\n\n  /**\n   * Extends the specified <code>target</code> object with the properties in each of the <code>sources</code> provided.\n   *\n   * if any source is <code>null</code> it will be ignored.\n   *\n   * @param {boolean} own - <code>true</code> to only copy <b>own</b> properties from <code>sources</code> onto\n   * <code>target</code>; otherwise <code>false</code>\n   * @param {Object} target - the target object which should be extended\n   * @param {...Object} [sources] - the source objects whose properties are to be copied onto <code>target</code>\n   * @return {void}\n   * @private\n   */\n  function extendObject(own, target, sources) {\n    sources = slice.call(arguments, 2);\n\n    var property;\n    var source;\n\n    for (var i = 0, length = sources.length; i < length; i++) {\n      source = sources[i];\n\n      for (property in source) {\n        if (!own || hasOwnProperty.call(source, property)) {\n          target[property] = source[property];\n        }\n      }\n    }\n  }\n\n  var extend_1 = extend;\n\n  /**\n   * The base class from which all others should extend.\n   *\n   * @public\n   * @constructor\n   */\n  function Nevis() {}\n  Nevis.class_ = 'Nevis';\n  Nevis.super_ = Object;\n\n  /**\n   * Extends the constructor to which this method is associated with the <code>prototype</code> and/or\n   * <code>statics</code> provided.\n   *\n   * If <code>name</code> is provided, it will be used as the class name and can be accessed via a special\n   * <code>class_</code> property on the child constructor, otherwise the class name of the super constructor will be used\n   * instead. The class name may also be used string representation for instances of the child constructor (via\n   * <code>toString</code>), but this is not applicable to the <i>lite</i> version of Nevis.\n   *\n   * If <code>constructor</code> is provided, it will be used as the constructor for the child, otherwise a simple\n   * constructor which only calls the super constructor will be used instead.\n   *\n   * The super constructor can be accessed via a special <code>super_</code> property on the child constructor.\n   *\n   * @param {string} [name=this.class_] - the class name to be used for the child constructor\n   * @param {Function} [constructor] - the constructor for the child\n   * @param {Object} [prototype] - the prototype properties to be defined for the child\n   * @param {Object} [statics] - the static properties to be defined for the child\n   * @return {Function} The child <code>constructor</code> provided or the one created if none was given.\n   * @public\n   * @static\n   * @memberof Nevis\n   */\n  Nevis.extend = extend_1;\n\n  var nevis = Nevis;\n\n  var lite = nevis;\n\n  /**\n   * Responsible for rendering a QR code {@link Frame} on a specific type of element.\n   *\n   * A renderer may be dependant on the rendering of another element, so the ordering of their execution is important.\n   *\n   * The rendering of a element can be deferred by disabling the renderer initially, however, any attempt get the element\n   * from the renderer will result in it being immediately enabled and the element being rendered.\n   *\n   * @param {QRious} qrious - the {@link QRious} instance to be used\n   * @param {*} element - the element onto which the QR code is to be rendered\n   * @param {boolean} [enabled] - <code>true</code> this {@link Renderer} is enabled; otherwise <code>false</code>.\n   * @public\n   * @class\n   * @extends Nevis\n   */\n  var Renderer = lite.extend(function(qrious, element, enabled) {\n    /**\n     * The {@link QRious} instance.\n     *\n     * @protected\n     * @type {QRious}\n     * @memberof Renderer#\n     */\n    this.qrious = qrious;\n\n    /**\n     * The element onto which this {@link Renderer} is rendering the QR code.\n     *\n     * @protected\n     * @type {*}\n     * @memberof Renderer#\n     */\n    this.element = element;\n    this.element.qrious = qrious;\n\n    /**\n     * Whether this {@link Renderer} is enabled.\n     *\n     * @protected\n     * @type {boolean}\n     * @memberof Renderer#\n     */\n    this.enabled = Boolean(enabled);\n  }, {\n\n    /**\n     * Draws the specified QR code <code>frame</code> on the underlying element.\n     *\n     * Implementations of {@link Renderer} <b>must</b> override this method with their own specific logic.\n     *\n     * @param {Frame} frame - the {@link Frame} to be drawn\n     * @return {void}\n     * @protected\n     * @abstract\n     * @memberof Renderer#\n     */\n    draw: function(frame) {},\n\n    /**\n     * Returns the element onto which this {@link Renderer} is rendering the QR code.\n     *\n     * If this method is called while this {@link Renderer} is disabled, it will be immediately enabled and rendered\n     * before the element is returned.\n     *\n     * @return {*} The element.\n     * @public\n     * @memberof Renderer#\n     */\n    getElement: function() {\n      if (!this.enabled) {\n        this.enabled = true;\n        this.render();\n      }\n\n      return this.element;\n    },\n\n    /**\n     * Calculates the size (in pixel units) to represent an individual module within the QR code based on the\n     * <code>frame</code> provided.\n     *\n     * Any configured padding will be excluded from the returned size.\n     *\n     * The returned value will be at least one, even in cases where the size of the QR code does not fit its contents.\n     * This is done so that the inevitable clipping is handled more gracefully since this way at least something is\n     * displayed instead of just a blank space filled by the background color.\n     *\n     * @param {Frame} frame - the {@link Frame} from which the module size is to be derived\n     * @return {number} The pixel size for each module in the QR code which will be no less than one.\n     * @protected\n     * @memberof Renderer#\n     */\n    getModuleSize: function(frame) {\n      var qrious = this.qrious;\n      var padding = qrious.padding || 0;\n      var pixels = Math.floor((qrious.size - (padding * 2)) / frame.width);\n\n      return Math.max(1, pixels);\n    },\n\n    /**\n     * Calculates the offset/padding (in pixel units) to be inserted before the QR code based on the <code>frame</code>\n     * provided.\n     *\n     * The returned value will be zero if there is no available offset or if the size of the QR code does not fit its\n     * contents. It will never be a negative value. This is done so that the inevitable clipping appears more naturally\n     * and it is not clipped from all directions.\n     *\n     * @param {Frame} frame - the {@link Frame} from which the offset is to be derived\n     * @return {number} The pixel offset for the QR code which will be no less than zero.\n     * @protected\n     * @memberof Renderer#\n     */\n    getOffset: function(frame) {\n      var qrious = this.qrious;\n      var padding = qrious.padding;\n\n      if (padding != null) {\n        return padding;\n      }\n\n      var moduleSize = this.getModuleSize(frame);\n      var offset = Math.floor((qrious.size - (moduleSize * frame.width)) / 2);\n\n      return Math.max(0, offset);\n    },\n\n    /**\n     * Renders a QR code on the underlying element based on the <code>frame</code> provided.\n     *\n     * @param {Frame} frame - the {@link Frame} to be rendered\n     * @return {void}\n     * @public\n     * @memberof Renderer#\n     */\n    render: function(frame) {\n      if (this.enabled) {\n        this.resize();\n        this.reset();\n        this.draw(frame);\n      }\n    },\n\n    /**\n     * Resets the underlying element, effectively clearing any previously rendered QR code.\n     *\n     * Implementations of {@link Renderer} <b>must</b> override this method with their own specific logic.\n     *\n     * @return {void}\n     * @protected\n     * @abstract\n     * @memberof Renderer#\n     */\n    reset: function() {},\n\n    /**\n     * Ensures that the size of the underlying element matches that defined on the associated {@link QRious} instance.\n     *\n     * Implementations of {@link Renderer} <b>must</b> override this method with their own specific logic.\n     *\n     * @return {void}\n     * @protected\n     * @abstract\n     * @memberof Renderer#\n     */\n    resize: function() {}\n\n  });\n\n  var Renderer_1 = Renderer;\n\n  /**\n   * An implementation of {@link Renderer} for working with <code>canvas</code> elements.\n   *\n   * @public\n   * @class\n   * @extends Renderer\n   */\n  var CanvasRenderer = Renderer_1.extend({\n\n    /**\n     * @override\n     */\n    draw: function(frame) {\n      var i, j;\n      var qrious = this.qrious;\n      var moduleSize = this.getModuleSize(frame);\n      var offset = this.getOffset(frame);\n      var context = this.element.getContext('2d');\n\n      context.fillStyle = qrious.foreground;\n      context.globalAlpha = qrious.foregroundAlpha;\n\n      for (i = 0; i < frame.width; i++) {\n        for (j = 0; j < frame.width; j++) {\n          if (frame.buffer[(j * frame.width) + i]) {\n            context.fillRect((moduleSize * i) + offset, (moduleSize * j) + offset, moduleSize, moduleSize);\n          }\n        }\n      }\n    },\n\n    /**\n     * @override\n     */\n    reset: function() {\n      var qrious = this.qrious;\n      var context = this.element.getContext('2d');\n      var size = qrious.size;\n\n      context.lineWidth = 1;\n      context.clearRect(0, 0, size, size);\n      context.fillStyle = qrious.background;\n      context.globalAlpha = qrious.backgroundAlpha;\n      context.fillRect(0, 0, size, size);\n    },\n\n    /**\n     * @override\n     */\n    resize: function() {\n      var element = this.element;\n\n      element.width = element.height = this.qrious.size;\n    }\n\n  });\n\n  var CanvasRenderer_1 = CanvasRenderer;\n\n  /* eslint no-multi-spaces: \"off\" */\n\n\n\n  /**\n   * Contains alignment pattern information.\n   *\n   * @public\n   * @class\n   * @extends Nevis\n   */\n  var Alignment = lite.extend(null, {\n\n    /**\n     * The alignment pattern block.\n     *\n     * @public\n     * @static\n     * @type {number[]}\n     * @memberof Alignment\n     */\n    BLOCK: [\n      0,  11, 15, 19, 23, 27, 31,\n      16, 18, 20, 22, 24, 26, 28, 20, 22, 24, 24, 26, 28, 28, 22, 24, 24,\n      26, 26, 28, 28, 24, 24, 26, 26, 26, 28, 28, 24, 26, 26, 26, 28, 28\n    ]\n\n  });\n\n  var Alignment_1 = Alignment;\n\n  /* eslint no-multi-spaces: \"off\" */\n\n\n\n  /**\n   * Contains error correction information.\n   *\n   * @public\n   * @class\n   * @extends Nevis\n   */\n  var ErrorCorrection = lite.extend(null, {\n\n    /**\n     * The error correction blocks.\n     *\n     * There are four elements per version. The first two indicate the number of blocks, then the data width, and finally\n     * the ECC width.\n     *\n     * @public\n     * @static\n     * @type {number[]}\n     * @memberof ErrorCorrection\n     */\n    BLOCKS: [\n      1,  0,  19,  7,     1,  0,  16,  10,    1,  0,  13,  13,    1,  0,  9,   17,\n      1,  0,  34,  10,    1,  0,  28,  16,    1,  0,  22,  22,    1,  0,  16,  28,\n      1,  0,  55,  15,    1,  0,  44,  26,    2,  0,  17,  18,    2,  0,  13,  22,\n      1,  0,  80,  20,    2,  0,  32,  18,    2,  0,  24,  26,    4,  0,  9,   16,\n      1,  0,  108, 26,    2,  0,  43,  24,    2,  2,  15,  18,    2,  2,  11,  22,\n      2,  0,  68,  18,    4,  0,  27,  16,    4,  0,  19,  24,    4,  0,  15,  28,\n      2,  0,  78,  20,    4,  0,  31,  18,    2,  4,  14,  18,    4,  1,  13,  26,\n      2,  0,  97,  24,    2,  2,  38,  22,    4,  2,  18,  22,    4,  2,  14,  26,\n      2,  0,  116, 30,    3,  2,  36,  22,    4,  4,  16,  20,    4,  4,  12,  24,\n      2,  2,  68,  18,    4,  1,  43,  26,    6,  2,  19,  24,    6,  2,  15,  28,\n      4,  0,  81,  20,    1,  4,  50,  30,    4,  4,  22,  28,    3,  8,  12,  24,\n      2,  2,  92,  24,    6,  2,  36,  22,    4,  6,  20,  26,    7,  4,  14,  28,\n      4,  0,  107, 26,    8,  1,  37,  22,    8,  4,  20,  24,    12, 4,  11,  22,\n      3,  1,  115, 30,    4,  5,  40,  24,    11, 5,  16,  20,    11, 5,  12,  24,\n      5,  1,  87,  22,    5,  5,  41,  24,    5,  7,  24,  30,    11, 7,  12,  24,\n      5,  1,  98,  24,    7,  3,  45,  28,    15, 2,  19,  24,    3,  13, 15,  30,\n      1,  5,  107, 28,    10, 1,  46,  28,    1,  15, 22,  28,    2,  17, 14,  28,\n      5,  1,  120, 30,    9,  4,  43,  26,    17, 1,  22,  28,    2,  19, 14,  28,\n      3,  4,  113, 28,    3,  11, 44,  26,    17, 4,  21,  26,    9,  16, 13,  26,\n      3,  5,  107, 28,    3,  13, 41,  26,    15, 5,  24,  30,    15, 10, 15,  28,\n      4,  4,  116, 28,    17, 0,  42,  26,    17, 6,  22,  28,    19, 6,  16,  30,\n      2,  7,  111, 28,    17, 0,  46,  28,    7,  16, 24,  30,    34, 0,  13,  24,\n      4,  5,  121, 30,    4,  14, 47,  28,    11, 14, 24,  30,    16, 14, 15,  30,\n      6,  4,  117, 30,    6,  14, 45,  28,    11, 16, 24,  30,    30, 2,  16,  30,\n      8,  4,  106, 26,    8,  13, 47,  28,    7,  22, 24,  30,    22, 13, 15,  30,\n      10, 2,  114, 28,    19, 4,  46,  28,    28, 6,  22,  28,    33, 4,  16,  30,\n      8,  4,  122, 30,    22, 3,  45,  28,    8,  26, 23,  30,    12, 28, 15,  30,\n      3,  10, 117, 30,    3,  23, 45,  28,    4,  31, 24,  30,    11, 31, 15,  30,\n      7,  7,  116, 30,    21, 7,  45,  28,    1,  37, 23,  30,    19, 26, 15,  30,\n      5,  10, 115, 30,    19, 10, 47,  28,    15, 25, 24,  30,    23, 25, 15,  30,\n      13, 3,  115, 30,    2,  29, 46,  28,    42, 1,  24,  30,    23, 28, 15,  30,\n      17, 0,  115, 30,    10, 23, 46,  28,    10, 35, 24,  30,    19, 35, 15,  30,\n      17, 1,  115, 30,    14, 21, 46,  28,    29, 19, 24,  30,    11, 46, 15,  30,\n      13, 6,  115, 30,    14, 23, 46,  28,    44, 7,  24,  30,    59, 1,  16,  30,\n      12, 7,  121, 30,    12, 26, 47,  28,    39, 14, 24,  30,    22, 41, 15,  30,\n      6,  14, 121, 30,    6,  34, 47,  28,    46, 10, 24,  30,    2,  64, 15,  30,\n      17, 4,  122, 30,    29, 14, 46,  28,    49, 10, 24,  30,    24, 46, 15,  30,\n      4,  18, 122, 30,    13, 32, 46,  28,    48, 14, 24,  30,    42, 32, 15,  30,\n      20, 4,  117, 30,    40, 7,  47,  28,    43, 22, 24,  30,    10, 67, 15,  30,\n      19, 6,  118, 30,    18, 31, 47,  28,    34, 34, 24,  30,    20, 61, 15,  30\n    ],\n\n    /**\n     * The final format bits with mask (level << 3 | mask).\n     *\n     * @public\n     * @static\n     * @type {number[]}\n     * @memberof ErrorCorrection\n     */\n    FINAL_FORMAT: [\n      // L\n      0x77c4, 0x72f3, 0x7daa, 0x789d, 0x662f, 0x6318, 0x6c41, 0x6976,\n      // M\n      0x5412, 0x5125, 0x5e7c, 0x5b4b, 0x45f9, 0x40ce, 0x4f97, 0x4aa0,\n      // Q\n      0x355f, 0x3068, 0x3f31, 0x3a06, 0x24b4, 0x2183, 0x2eda, 0x2bed,\n      // H\n      0x1689, 0x13be, 0x1ce7, 0x19d0, 0x0762, 0x0255, 0x0d0c, 0x083b\n    ],\n\n    /**\n     * A map of human-readable ECC levels.\n     *\n     * @public\n     * @static\n     * @type {Object.<string, number>}\n     * @memberof ErrorCorrection\n     */\n    LEVELS: {\n      L: 1,\n      M: 2,\n      Q: 3,\n      H: 4\n    }\n\n  });\n\n  var ErrorCorrection_1 = ErrorCorrection;\n\n  /**\n   * Contains Galois field information.\n   *\n   * @public\n   * @class\n   * @extends Nevis\n   */\n  var Galois = lite.extend(null, {\n\n    /**\n     * The Galois field exponent table.\n     *\n     * @public\n     * @static\n     * @type {number[]}\n     * @memberof Galois\n     */\n    EXPONENT: [\n      0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1d, 0x3a, 0x74, 0xe8, 0xcd, 0x87, 0x13, 0x26,\n      0x4c, 0x98, 0x2d, 0x5a, 0xb4, 0x75, 0xea, 0xc9, 0x8f, 0x03, 0x06, 0x0c, 0x18, 0x30, 0x60, 0xc0,\n      0x9d, 0x27, 0x4e, 0x9c, 0x25, 0x4a, 0x94, 0x35, 0x6a, 0xd4, 0xb5, 0x77, 0xee, 0xc1, 0x9f, 0x23,\n      0x46, 0x8c, 0x05, 0x0a, 0x14, 0x28, 0x50, 0xa0, 0x5d, 0xba, 0x69, 0xd2, 0xb9, 0x6f, 0xde, 0xa1,\n      0x5f, 0xbe, 0x61, 0xc2, 0x99, 0x2f, 0x5e, 0xbc, 0x65, 0xca, 0x89, 0x0f, 0x1e, 0x3c, 0x78, 0xf0,\n      0xfd, 0xe7, 0xd3, 0xbb, 0x6b, 0xd6, 0xb1, 0x7f, 0xfe, 0xe1, 0xdf, 0xa3, 0x5b, 0xb6, 0x71, 0xe2,\n      0xd9, 0xaf, 0x43, 0x86, 0x11, 0x22, 0x44, 0x88, 0x0d, 0x1a, 0x34, 0x68, 0xd0, 0xbd, 0x67, 0xce,\n      0x81, 0x1f, 0x3e, 0x7c, 0xf8, 0xed, 0xc7, 0x93, 0x3b, 0x76, 0xec, 0xc5, 0x97, 0x33, 0x66, 0xcc,\n      0x85, 0x17, 0x2e, 0x5c, 0xb8, 0x6d, 0xda, 0xa9, 0x4f, 0x9e, 0x21, 0x42, 0x84, 0x15, 0x2a, 0x54,\n      0xa8, 0x4d, 0x9a, 0x29, 0x52, 0xa4, 0x55, 0xaa, 0x49, 0x92, 0x39, 0x72, 0xe4, 0xd5, 0xb7, 0x73,\n      0xe6, 0xd1, 0xbf, 0x63, 0xc6, 0x91, 0x3f, 0x7e, 0xfc, 0xe5, 0xd7, 0xb3, 0x7b, 0xf6, 0xf1, 0xff,\n      0xe3, 0xdb, 0xab, 0x4b, 0x96, 0x31, 0x62, 0xc4, 0x95, 0x37, 0x6e, 0xdc, 0xa5, 0x57, 0xae, 0x41,\n      0x82, 0x19, 0x32, 0x64, 0xc8, 0x8d, 0x07, 0x0e, 0x1c, 0x38, 0x70, 0xe0, 0xdd, 0xa7, 0x53, 0xa6,\n      0x51, 0xa2, 0x59, 0xb2, 0x79, 0xf2, 0xf9, 0xef, 0xc3, 0x9b, 0x2b, 0x56, 0xac, 0x45, 0x8a, 0x09,\n      0x12, 0x24, 0x48, 0x90, 0x3d, 0x7a, 0xf4, 0xf5, 0xf7, 0xf3, 0xfb, 0xeb, 0xcb, 0x8b, 0x0b, 0x16,\n      0x2c, 0x58, 0xb0, 0x7d, 0xfa, 0xe9, 0xcf, 0x83, 0x1b, 0x36, 0x6c, 0xd8, 0xad, 0x47, 0x8e, 0x00\n    ],\n\n    /**\n     * The Galois field log table.\n     *\n     * @public\n     * @static\n     * @type {number[]}\n     * @memberof Galois\n     */\n    LOG: [\n      0xff, 0x00, 0x01, 0x19, 0x02, 0x32, 0x1a, 0xc6, 0x03, 0xdf, 0x33, 0xee, 0x1b, 0x68, 0xc7, 0x4b,\n      0x04, 0x64, 0xe0, 0x0e, 0x34, 0x8d, 0xef, 0x81, 0x1c, 0xc1, 0x69, 0xf8, 0xc8, 0x08, 0x4c, 0x71,\n      0x05, 0x8a, 0x65, 0x2f, 0xe1, 0x24, 0x0f, 0x21, 0x35, 0x93, 0x8e, 0xda, 0xf0, 0x12, 0x82, 0x45,\n      0x1d, 0xb5, 0xc2, 0x7d, 0x6a, 0x27, 0xf9, 0xb9, 0xc9, 0x9a, 0x09, 0x78, 0x4d, 0xe4, 0x72, 0xa6,\n      0x06, 0xbf, 0x8b, 0x62, 0x66, 0xdd, 0x30, 0xfd, 0xe2, 0x98, 0x25, 0xb3, 0x10, 0x91, 0x22, 0x88,\n      0x36, 0xd0, 0x94, 0xce, 0x8f, 0x96, 0xdb, 0xbd, 0xf1, 0xd2, 0x13, 0x5c, 0x83, 0x38, 0x46, 0x40,\n      0x1e, 0x42, 0xb6, 0xa3, 0xc3, 0x48, 0x7e, 0x6e, 0x6b, 0x3a, 0x28, 0x54, 0xfa, 0x85, 0xba, 0x3d,\n      0xca, 0x5e, 0x9b, 0x9f, 0x0a, 0x15, 0x79, 0x2b, 0x4e, 0xd4, 0xe5, 0xac, 0x73, 0xf3, 0xa7, 0x57,\n      0x07, 0x70, 0xc0, 0xf7, 0x8c, 0x80, 0x63, 0x0d, 0x67, 0x4a, 0xde, 0xed, 0x31, 0xc5, 0xfe, 0x18,\n      0xe3, 0xa5, 0x99, 0x77, 0x26, 0xb8, 0xb4, 0x7c, 0x11, 0x44, 0x92, 0xd9, 0x23, 0x20, 0x89, 0x2e,\n      0x37, 0x3f, 0xd1, 0x5b, 0x95, 0xbc, 0xcf, 0xcd, 0x90, 0x87, 0x97, 0xb2, 0xdc, 0xfc, 0xbe, 0x61,\n      0xf2, 0x56, 0xd3, 0xab, 0x14, 0x2a, 0x5d, 0x9e, 0x84, 0x3c, 0x39, 0x53, 0x47, 0x6d, 0x41, 0xa2,\n      0x1f, 0x2d, 0x43, 0xd8, 0xb7, 0x7b, 0xa4, 0x76, 0xc4, 0x17, 0x49, 0xec, 0x7f, 0x0c, 0x6f, 0xf6,\n      0x6c, 0xa1, 0x3b, 0x52, 0x29, 0x9d, 0x55, 0xaa, 0xfb, 0x60, 0x86, 0xb1, 0xbb, 0xcc, 0x3e, 0x5a,\n      0xcb, 0x59, 0x5f, 0xb0, 0x9c, 0xa9, 0xa0, 0x51, 0x0b, 0xf5, 0x16, 0xeb, 0x7a, 0x75, 0x2c, 0xd7,\n      0x4f, 0xae, 0xd5, 0xe9, 0xe6, 0xe7, 0xad, 0xe8, 0x74, 0xd6, 0xf4, 0xea, 0xa8, 0x50, 0x58, 0xaf\n    ]\n\n  });\n\n  var Galois_1 = Galois;\n\n  /**\n   * Contains version pattern information.\n   *\n   * @public\n   * @class\n   * @extends Nevis\n   */\n  var Version = lite.extend(null, {\n\n    /**\n     * The version pattern block.\n     *\n     * @public\n     * @static\n     * @type {number[]}\n     * @memberof Version\n     */\n    BLOCK: [\n      0xc94, 0x5bc, 0xa99, 0x4d3, 0xbf6, 0x762, 0x847, 0x60d, 0x928, 0xb78, 0x45d, 0xa17, 0x532,\n      0x9a6, 0x683, 0x8c9, 0x7ec, 0xec4, 0x1e1, 0xfab, 0x08e, 0xc1a, 0x33f, 0xd75, 0x250, 0x9d5,\n      0x6f0, 0x8ba, 0x79f, 0xb0b, 0x42e, 0xa64, 0x541, 0xc69\n    ]\n\n  });\n\n  var Version_1 = Version;\n\n  /**\n   * Generates information for a QR code frame based on a specific value to be encoded.\n   *\n   * @param {Frame~Options} options - the options to be used\n   * @public\n   * @class\n   * @extends Nevis\n   */\n  var Frame = lite.extend(function(options) {\n    var dataBlock, eccBlock, index, neccBlock1, neccBlock2;\n    var valueLength = options.value.length;\n\n    this._badness = [];\n    this._level = ErrorCorrection_1.LEVELS[options.level];\n    this._polynomial = [];\n    this._value = options.value;\n    this._version = 0;\n    this._stringBuffer = [];\n\n    while (this._version < 40) {\n      this._version++;\n\n      index = ((this._level - 1) * 4) + ((this._version - 1) * 16);\n\n      neccBlock1 = ErrorCorrection_1.BLOCKS[index++];\n      neccBlock2 = ErrorCorrection_1.BLOCKS[index++];\n      dataBlock = ErrorCorrection_1.BLOCKS[index++];\n      eccBlock = ErrorCorrection_1.BLOCKS[index];\n\n      index = (dataBlock * (neccBlock1 + neccBlock2)) + neccBlock2 - 3 + (this._version <= 9);\n\n      if (valueLength <= index) {\n        break;\n      }\n    }\n\n    this._dataBlock = dataBlock;\n    this._eccBlock = eccBlock;\n    this._neccBlock1 = neccBlock1;\n    this._neccBlock2 = neccBlock2;\n\n    /**\n     * The data width is based on version.\n     *\n     * @public\n     * @type {number}\n     * @memberof Frame#\n     */\n    // FIXME: Ensure that it fits instead of being truncated.\n    var width = this.width = 17 + (4 * this._version);\n\n    /**\n     * The image buffer.\n     *\n     * @public\n     * @type {number[]}\n     * @memberof Frame#\n     */\n    this.buffer = Frame._createArray(width * width);\n\n    this._ecc = Frame._createArray(dataBlock + ((dataBlock + eccBlock) * (neccBlock1 + neccBlock2)) + neccBlock2);\n    this._mask = Frame._createArray(((width * (width + 1)) + 1) / 2);\n\n    this._insertFinders();\n    this._insertAlignments();\n\n    // Insert single foreground cell.\n    this.buffer[8 + (width * (width - 8))] = 1;\n\n    this._insertTimingGap();\n    this._reverseMask();\n    this._insertTimingRowAndColumn();\n    this._insertVersion();\n    this._syncMask();\n    this._convertBitStream(valueLength);\n    this._calculatePolynomial();\n    this._appendEccToData();\n    this._interleaveBlocks();\n    this._pack();\n    this._finish();\n  }, {\n\n    _addAlignment: function(x, y) {\n      var i;\n      var buffer = this.buffer;\n      var width = this.width;\n\n      buffer[x + (width * y)] = 1;\n\n      for (i = -2; i < 2; i++) {\n        buffer[x + i + (width * (y - 2))] = 1;\n        buffer[x - 2 + (width * (y + i + 1))] = 1;\n        buffer[x + 2 + (width * (y + i))] = 1;\n        buffer[x + i + 1 + (width * (y + 2))] = 1;\n      }\n\n      for (i = 0; i < 2; i++) {\n        this._setMask(x - 1, y + i);\n        this._setMask(x + 1, y - i);\n        this._setMask(x - i, y - 1);\n        this._setMask(x + i, y + 1);\n      }\n    },\n\n    _appendData: function(data, dataLength, ecc, eccLength) {\n      var bit, i, j;\n      var polynomial = this._polynomial;\n      var stringBuffer = this._stringBuffer;\n\n      for (i = 0; i < eccLength; i++) {\n        stringBuffer[ecc + i] = 0;\n      }\n\n      for (i = 0; i < dataLength; i++) {\n        bit = Galois_1.LOG[stringBuffer[data + i] ^ stringBuffer[ecc]];\n\n        if (bit !== 255) {\n          for (j = 1; j < eccLength; j++) {\n            stringBuffer[ecc + j - 1] = stringBuffer[ecc + j] ^\n              Galois_1.EXPONENT[Frame._modN(bit + polynomial[eccLength - j])];\n          }\n        } else {\n          for (j = ecc; j < ecc + eccLength; j++) {\n            stringBuffer[j] = stringBuffer[j + 1];\n          }\n        }\n\n        stringBuffer[ecc + eccLength - 1] = bit === 255 ? 0 : Galois_1.EXPONENT[Frame._modN(bit + polynomial[0])];\n      }\n    },\n\n    _appendEccToData: function() {\n      var i;\n      var data = 0;\n      var dataBlock = this._dataBlock;\n      var ecc = this._calculateMaxLength();\n      var eccBlock = this._eccBlock;\n\n      for (i = 0; i < this._neccBlock1; i++) {\n        this._appendData(data, dataBlock, ecc, eccBlock);\n\n        data += dataBlock;\n        ecc += eccBlock;\n      }\n\n      for (i = 0; i < this._neccBlock2; i++) {\n        this._appendData(data, dataBlock + 1, ecc, eccBlock);\n\n        data += dataBlock + 1;\n        ecc += eccBlock;\n      }\n    },\n\n    _applyMask: function(mask) {\n      var r3x, r3y, x, y;\n      var buffer = this.buffer;\n      var width = this.width;\n\n      switch (mask) {\n      case 0:\n        for (y = 0; y < width; y++) {\n          for (x = 0; x < width; x++) {\n            if (!((x + y) & 1) && !this._isMasked(x, y)) {\n              buffer[x + (y * width)] ^= 1;\n            }\n          }\n        }\n\n        break;\n      case 1:\n        for (y = 0; y < width; y++) {\n          for (x = 0; x < width; x++) {\n            if (!(y & 1) && !this._isMasked(x, y)) {\n              buffer[x + (y * width)] ^= 1;\n            }\n          }\n        }\n\n        break;\n      case 2:\n        for (y = 0; y < width; y++) {\n          for (r3x = 0, x = 0; x < width; x++, r3x++) {\n            if (r3x === 3) {\n              r3x = 0;\n            }\n\n            if (!r3x && !this._isMasked(x, y)) {\n              buffer[x + (y * width)] ^= 1;\n            }\n          }\n        }\n\n        break;\n      case 3:\n        for (r3y = 0, y = 0; y < width; y++, r3y++) {\n          if (r3y === 3) {\n            r3y = 0;\n          }\n\n          for (r3x = r3y, x = 0; x < width; x++, r3x++) {\n            if (r3x === 3) {\n              r3x = 0;\n            }\n\n            if (!r3x && !this._isMasked(x, y)) {\n              buffer[x + (y * width)] ^= 1;\n            }\n          }\n        }\n\n        break;\n      case 4:\n        for (y = 0; y < width; y++) {\n          for (r3x = 0, r3y = (y >> 1) & 1, x = 0; x < width; x++, r3x++) {\n            if (r3x === 3) {\n              r3x = 0;\n              r3y = !r3y;\n            }\n\n            if (!r3y && !this._isMasked(x, y)) {\n              buffer[x + (y * width)] ^= 1;\n            }\n          }\n        }\n\n        break;\n      case 5:\n        for (r3y = 0, y = 0; y < width; y++, r3y++) {\n          if (r3y === 3) {\n            r3y = 0;\n          }\n\n          for (r3x = 0, x = 0; x < width; x++, r3x++) {\n            if (r3x === 3) {\n              r3x = 0;\n            }\n\n            if (!((x & y & 1) + !(!r3x | !r3y)) && !this._isMasked(x, y)) {\n              buffer[x + (y * width)] ^= 1;\n            }\n          }\n        }\n\n        break;\n      case 6:\n        for (r3y = 0, y = 0; y < width; y++, r3y++) {\n          if (r3y === 3) {\n            r3y = 0;\n          }\n\n          for (r3x = 0, x = 0; x < width; x++, r3x++) {\n            if (r3x === 3) {\n              r3x = 0;\n            }\n\n            if (!((x & y & 1) + (r3x && r3x === r3y) & 1) && !this._isMasked(x, y)) {\n              buffer[x + (y * width)] ^= 1;\n            }\n          }\n        }\n\n        break;\n      case 7:\n        for (r3y = 0, y = 0; y < width; y++, r3y++) {\n          if (r3y === 3) {\n            r3y = 0;\n          }\n\n          for (r3x = 0, x = 0; x < width; x++, r3x++) {\n            if (r3x === 3) {\n              r3x = 0;\n            }\n\n            if (!((r3x && r3x === r3y) + (x + y & 1) & 1) && !this._isMasked(x, y)) {\n              buffer[x + (y * width)] ^= 1;\n            }\n          }\n        }\n\n        break;\n      }\n    },\n\n    _calculateMaxLength: function() {\n      return (this._dataBlock * (this._neccBlock1 + this._neccBlock2)) + this._neccBlock2;\n    },\n\n    _calculatePolynomial: function() {\n      var i, j;\n      var eccBlock = this._eccBlock;\n      var polynomial = this._polynomial;\n\n      polynomial[0] = 1;\n\n      for (i = 0; i < eccBlock; i++) {\n        polynomial[i + 1] = 1;\n\n        for (j = i; j > 0; j--) {\n          polynomial[j] = polynomial[j] ? polynomial[j - 1] ^\n            Galois_1.EXPONENT[Frame._modN(Galois_1.LOG[polynomial[j]] + i)] : polynomial[j - 1];\n        }\n\n        polynomial[0] = Galois_1.EXPONENT[Frame._modN(Galois_1.LOG[polynomial[0]] + i)];\n      }\n\n      // Use logs for generator polynomial to save calculation step.\n      for (i = 0; i <= eccBlock; i++) {\n        polynomial[i] = Galois_1.LOG[polynomial[i]];\n      }\n    },\n\n    _checkBadness: function() {\n      var b, b1, h, x, y;\n      var bad = 0;\n      var badness = this._badness;\n      var buffer = this.buffer;\n      var width = this.width;\n\n      // Blocks of same colour.\n      for (y = 0; y < width - 1; y++) {\n        for (x = 0; x < width - 1; x++) {\n          // All foreground colour.\n          if ((buffer[x + (width * y)] &&\n            buffer[x + 1 + (width * y)] &&\n            buffer[x + (width * (y + 1))] &&\n            buffer[x + 1 + (width * (y + 1))]) ||\n            // All background colour.\n            !(buffer[x + (width * y)] ||\n            buffer[x + 1 + (width * y)] ||\n            buffer[x + (width * (y + 1))] ||\n            buffer[x + 1 + (width * (y + 1))])) {\n            bad += Frame.N2;\n          }\n        }\n      }\n\n      var bw = 0;\n\n      // X runs.\n      for (y = 0; y < width; y++) {\n        h = 0;\n\n        badness[0] = 0;\n\n        for (b = 0, x = 0; x < width; x++) {\n          b1 = buffer[x + (width * y)];\n\n          if (b === b1) {\n            badness[h]++;\n          } else {\n            badness[++h] = 1;\n          }\n\n          b = b1;\n          bw += b ? 1 : -1;\n        }\n\n        bad += this._getBadness(h);\n      }\n\n      if (bw < 0) {\n        bw = -bw;\n      }\n\n      var count = 0;\n      var big = bw;\n      big += big << 2;\n      big <<= 1;\n\n      while (big > width * width) {\n        big -= width * width;\n        count++;\n      }\n\n      bad += count * Frame.N4;\n\n      // Y runs.\n      for (x = 0; x < width; x++) {\n        h = 0;\n\n        badness[0] = 0;\n\n        for (b = 0, y = 0; y < width; y++) {\n          b1 = buffer[x + (width * y)];\n\n          if (b === b1) {\n            badness[h]++;\n          } else {\n            badness[++h] = 1;\n          }\n\n          b = b1;\n        }\n\n        bad += this._getBadness(h);\n      }\n\n      return bad;\n    },\n\n    _convertBitStream: function(length) {\n      var bit, i;\n      var ecc = this._ecc;\n      var version = this._version;\n\n      // Convert string to bit stream. 8-bit data to QR-coded 8-bit data (numeric, alphanumeric, or kanji not supported).\n      for (i = 0; i < length; i++) {\n        ecc[i] = this._value.charCodeAt(i);\n      }\n\n      var stringBuffer = this._stringBuffer = ecc.slice();\n      var maxLength = this._calculateMaxLength();\n\n      if (length >= maxLength - 2) {\n        length = maxLength - 2;\n\n        if (version > 9) {\n          length--;\n        }\n      }\n\n      // Shift and re-pack to insert length prefix.\n      var index = length;\n\n      if (version > 9) {\n        stringBuffer[index + 2] = 0;\n        stringBuffer[index + 3] = 0;\n\n        while (index--) {\n          bit = stringBuffer[index];\n\n          stringBuffer[index + 3] |= 255 & (bit << 4);\n          stringBuffer[index + 2] = bit >> 4;\n        }\n\n        stringBuffer[2] |= 255 & (length << 4);\n        stringBuffer[1] = length >> 4;\n        stringBuffer[0] = 0x40 | (length >> 12);\n      } else {\n        stringBuffer[index + 1] = 0;\n        stringBuffer[index + 2] = 0;\n\n        while (index--) {\n          bit = stringBuffer[index];\n\n          stringBuffer[index + 2] |= 255 & (bit << 4);\n          stringBuffer[index + 1] = bit >> 4;\n        }\n\n        stringBuffer[1] |= 255 & (length << 4);\n        stringBuffer[0] = 0x40 | (length >> 4);\n      }\n\n      // Fill to end with pad pattern.\n      index = length + 3 - (version < 10);\n\n      while (index < maxLength) {\n        stringBuffer[index++] = 0xec;\n        stringBuffer[index++] = 0x11;\n      }\n    },\n\n    _getBadness: function(length) {\n      var i;\n      var badRuns = 0;\n      var badness = this._badness;\n\n      for (i = 0; i <= length; i++) {\n        if (badness[i] >= 5) {\n          badRuns += Frame.N1 + badness[i] - 5;\n        }\n      }\n\n      // FBFFFBF as in finder.\n      for (i = 3; i < length - 1; i += 2) {\n        if (badness[i - 2] === badness[i + 2] &&\n          badness[i + 2] === badness[i - 1] &&\n          badness[i - 1] === badness[i + 1] &&\n          badness[i - 1] * 3 === badness[i] &&\n          // Background around the foreground pattern? Not part of the specs.\n          (badness[i - 3] === 0 || i + 3 > length ||\n          badness[i - 3] * 3 >= badness[i] * 4 ||\n          badness[i + 3] * 3 >= badness[i] * 4)) {\n          badRuns += Frame.N3;\n        }\n      }\n\n      return badRuns;\n    },\n\n    _finish: function() {\n      // Save pre-mask copy of frame.\n      this._stringBuffer = this.buffer.slice();\n\n      var currentMask, i;\n      var bit = 0;\n      var mask = 30000;\n\n      /*\n       * Using for instead of while since in original Arduino code if an early mask was \"good enough\" it wouldn't try for\n       * a better one since they get more complex and take longer.\n       */\n      for (i = 0; i < 8; i++) {\n        // Returns foreground-background imbalance.\n        this._applyMask(i);\n\n        currentMask = this._checkBadness();\n\n        // Is current mask better than previous best?\n        if (currentMask < mask) {\n          mask = currentMask;\n          bit = i;\n        }\n\n        // Don't increment \"i\" to a void redoing mask.\n        if (bit === 7) {\n          break;\n        }\n\n        // Reset for next pass.\n        this.buffer = this._stringBuffer.slice();\n      }\n\n      // Redo best mask as none were \"good enough\" (i.e. last wasn't bit).\n      if (bit !== i) {\n        this._applyMask(bit);\n      }\n\n      // Add in final mask/ECC level bytes.\n      mask = ErrorCorrection_1.FINAL_FORMAT[bit + (this._level - 1 << 3)];\n\n      var buffer = this.buffer;\n      var width = this.width;\n\n      // Low byte.\n      for (i = 0; i < 8; i++, mask >>= 1) {\n        if (mask & 1) {\n          buffer[width - 1 - i + (width * 8)] = 1;\n\n          if (i < 6) {\n            buffer[8 + (width * i)] = 1;\n          } else {\n            buffer[8 + (width * (i + 1))] = 1;\n          }\n        }\n      }\n\n      // High byte.\n      for (i = 0; i < 7; i++, mask >>= 1) {\n        if (mask & 1) {\n          buffer[8 + (width * (width - 7 + i))] = 1;\n\n          if (i) {\n            buffer[6 - i + (width * 8)] = 1;\n          } else {\n            buffer[7 + (width * 8)] = 1;\n          }\n        }\n      }\n    },\n\n    _interleaveBlocks: function() {\n      var i, j;\n      var dataBlock = this._dataBlock;\n      var ecc = this._ecc;\n      var eccBlock = this._eccBlock;\n      var k = 0;\n      var maxLength = this._calculateMaxLength();\n      var neccBlock1 = this._neccBlock1;\n      var neccBlock2 = this._neccBlock2;\n      var stringBuffer = this._stringBuffer;\n\n      for (i = 0; i < dataBlock; i++) {\n        for (j = 0; j < neccBlock1; j++) {\n          ecc[k++] = stringBuffer[i + (j * dataBlock)];\n        }\n\n        for (j = 0; j < neccBlock2; j++) {\n          ecc[k++] = stringBuffer[(neccBlock1 * dataBlock) + i + (j * (dataBlock + 1))];\n        }\n      }\n\n      for (j = 0; j < neccBlock2; j++) {\n        ecc[k++] = stringBuffer[(neccBlock1 * dataBlock) + i + (j * (dataBlock + 1))];\n      }\n\n      for (i = 0; i < eccBlock; i++) {\n        for (j = 0; j < neccBlock1 + neccBlock2; j++) {\n          ecc[k++] = stringBuffer[maxLength + i + (j * eccBlock)];\n        }\n      }\n\n      this._stringBuffer = ecc;\n    },\n\n    _insertAlignments: function() {\n      var i, x, y;\n      var version = this._version;\n      var width = this.width;\n\n      if (version > 1) {\n        i = Alignment_1.BLOCK[version];\n        y = width - 7;\n\n        for (;;) {\n          x = width - 7;\n\n          while (x > i - 3) {\n            this._addAlignment(x, y);\n\n            if (x < i) {\n              break;\n            }\n\n            x -= i;\n          }\n\n          if (y <= i + 9) {\n            break;\n          }\n\n          y -= i;\n\n          this._addAlignment(6, y);\n          this._addAlignment(y, 6);\n        }\n      }\n    },\n\n    _insertFinders: function() {\n      var i, j, x, y;\n      var buffer = this.buffer;\n      var width = this.width;\n\n      for (i = 0; i < 3; i++) {\n        j = 0;\n        y = 0;\n\n        if (i === 1) {\n          j = width - 7;\n        }\n        if (i === 2) {\n          y = width - 7;\n        }\n\n        buffer[y + 3 + (width * (j + 3))] = 1;\n\n        for (x = 0; x < 6; x++) {\n          buffer[y + x + (width * j)] = 1;\n          buffer[y + (width * (j + x + 1))] = 1;\n          buffer[y + 6 + (width * (j + x))] = 1;\n          buffer[y + x + 1 + (width * (j + 6))] = 1;\n        }\n\n        for (x = 1; x < 5; x++) {\n          this._setMask(y + x, j + 1);\n          this._setMask(y + 1, j + x + 1);\n          this._setMask(y + 5, j + x);\n          this._setMask(y + x + 1, j + 5);\n        }\n\n        for (x = 2; x < 4; x++) {\n          buffer[y + x + (width * (j + 2))] = 1;\n          buffer[y + 2 + (width * (j + x + 1))] = 1;\n          buffer[y + 4 + (width * (j + x))] = 1;\n          buffer[y + x + 1 + (width * (j + 4))] = 1;\n        }\n      }\n    },\n\n    _insertTimingGap: function() {\n      var x, y;\n      var width = this.width;\n\n      for (y = 0; y < 7; y++) {\n        this._setMask(7, y);\n        this._setMask(width - 8, y);\n        this._setMask(7, y + width - 7);\n      }\n\n      for (x = 0; x < 8; x++) {\n        this._setMask(x, 7);\n        this._setMask(x + width - 8, 7);\n        this._setMask(x, width - 8);\n      }\n    },\n\n    _insertTimingRowAndColumn: function() {\n      var x;\n      var buffer = this.buffer;\n      var width = this.width;\n\n      for (x = 0; x < width - 14; x++) {\n        if (x & 1) {\n          this._setMask(8 + x, 6);\n          this._setMask(6, 8 + x);\n        } else {\n          buffer[8 + x + (width * 6)] = 1;\n          buffer[6 + (width * (8 + x))] = 1;\n        }\n      }\n    },\n\n    _insertVersion: function() {\n      var i, j, x, y;\n      var buffer = this.buffer;\n      var version = this._version;\n      var width = this.width;\n\n      if (version > 6) {\n        i = Version_1.BLOCK[version - 7];\n        j = 17;\n\n        for (x = 0; x < 6; x++) {\n          for (y = 0; y < 3; y++, j--) {\n            if (1 & (j > 11 ? version >> j - 12 : i >> j)) {\n              buffer[5 - x + (width * (2 - y + width - 11))] = 1;\n              buffer[2 - y + width - 11 + (width * (5 - x))] = 1;\n            } else {\n              this._setMask(5 - x, 2 - y + width - 11);\n              this._setMask(2 - y + width - 11, 5 - x);\n            }\n          }\n        }\n      }\n    },\n\n    _isMasked: function(x, y) {\n      var bit = Frame._getMaskBit(x, y);\n\n      return this._mask[bit] === 1;\n    },\n\n    _pack: function() {\n      var bit, i, j;\n      var k = 1;\n      var v = 1;\n      var width = this.width;\n      var x = width - 1;\n      var y = width - 1;\n\n      // Interleaved data and ECC codes.\n      var length = ((this._dataBlock + this._eccBlock) * (this._neccBlock1 + this._neccBlock2)) + this._neccBlock2;\n\n      for (i = 0; i < length; i++) {\n        bit = this._stringBuffer[i];\n\n        for (j = 0; j < 8; j++, bit <<= 1) {\n          if (0x80 & bit) {\n            this.buffer[x + (width * y)] = 1;\n          }\n\n          // Find next fill position.\n          do {\n            if (v) {\n              x--;\n            } else {\n              x++;\n\n              if (k) {\n                if (y !== 0) {\n                  y--;\n                } else {\n                  x -= 2;\n                  k = !k;\n\n                  if (x === 6) {\n                    x--;\n                    y = 9;\n                  }\n                }\n              } else if (y !== width - 1) {\n                y++;\n              } else {\n                x -= 2;\n                k = !k;\n\n                if (x === 6) {\n                  x--;\n                  y -= 8;\n                }\n              }\n            }\n\n            v = !v;\n          } while (this._isMasked(x, y));\n        }\n      }\n    },\n\n    _reverseMask: function() {\n      var x, y;\n      var width = this.width;\n\n      for (x = 0; x < 9; x++) {\n        this._setMask(x, 8);\n      }\n\n      for (x = 0; x < 8; x++) {\n        this._setMask(x + width - 8, 8);\n        this._setMask(8, x);\n      }\n\n      for (y = 0; y < 7; y++) {\n        this._setMask(8, y + width - 7);\n      }\n    },\n\n    _setMask: function(x, y) {\n      var bit = Frame._getMaskBit(x, y);\n\n      this._mask[bit] = 1;\n    },\n\n    _syncMask: function() {\n      var x, y;\n      var width = this.width;\n\n      for (y = 0; y < width; y++) {\n        for (x = 0; x <= y; x++) {\n          if (this.buffer[x + (width * y)]) {\n            this._setMask(x, y);\n          }\n        }\n      }\n    }\n\n  }, {\n\n    _createArray: function(length) {\n      var i;\n      var array = [];\n\n      for (i = 0; i < length; i++) {\n        array[i] = 0;\n      }\n\n      return array;\n    },\n\n    _getMaskBit: function(x, y) {\n      var bit;\n\n      if (x > y) {\n        bit = x;\n        x = y;\n        y = bit;\n      }\n\n      bit = y;\n      bit += y * y;\n      bit >>= 1;\n      bit += x;\n\n      return bit;\n    },\n\n    _modN: function(x) {\n      while (x >= 255) {\n        x -= 255;\n        x = (x >> 8) + (x & 255);\n      }\n\n      return x;\n    },\n\n    // *Badness* coefficients.\n    N1: 3,\n    N2: 3,\n    N3: 40,\n    N4: 10\n\n  });\n\n  var Frame_1 = Frame;\n\n  /**\n   * The options used by {@link Frame}.\n   *\n   * @typedef {Object} Frame~Options\n   * @property {string} level - The ECC level to be used.\n   * @property {string} value - The value to be encoded.\n   */\n\n  /**\n   * An implementation of {@link Renderer} for working with <code>img</code> elements.\n   *\n   * This depends on {@link CanvasRenderer} being executed first as this implementation simply applies the data URL from\n   * the rendered <code>canvas</code> element as the <code>src</code> for the <code>img</code> element being rendered.\n   *\n   * @public\n   * @class\n   * @extends Renderer\n   */\n  var ImageRenderer = Renderer_1.extend({\n\n    /**\n     * @override\n     */\n    draw: function() {\n      this.element.src = this.qrious.toDataURL();\n    },\n\n    /**\n     * @override\n     */\n    reset: function() {\n      this.element.src = '';\n    },\n\n    /**\n     * @override\n     */\n    resize: function() {\n      var element = this.element;\n\n      element.width = element.height = this.qrious.size;\n    }\n\n  });\n\n  var ImageRenderer_1 = ImageRenderer;\n\n  /**\n   * Defines an available option while also configuring how values are applied to the target object.\n   *\n   * Optionally, a default value can be specified as well a value transformer for greater control over how the option\n   * value is applied.\n   *\n   * If no value transformer is specified, then any specified option will be applied directly. All values are maintained\n   * on the target object itself as a field using the option name prefixed with a single underscore.\n   *\n   * When an option is specified as modifiable, the {@link OptionManager} will be required to include a setter for the\n   * property that is defined on the target object that uses the option name.\n   *\n   * @param {string} name - the name to be used\n   * @param {boolean} [modifiable] - <code>true</code> if the property defined on target objects should include a setter;\n   * otherwise <code>false</code>\n   * @param {*} [defaultValue] - the default value to be used\n   * @param {Option~ValueTransformer} [valueTransformer] - the value transformer to be used\n   * @public\n   * @class\n   * @extends Nevis\n   */\n  var Option = lite.extend(function(name, modifiable, defaultValue, valueTransformer) {\n    /**\n     * The name for this {@link Option}.\n     *\n     * @public\n     * @type {string}\n     * @memberof Option#\n     */\n    this.name = name;\n\n    /**\n     * Whether a setter should be included on the property defined on target objects for this {@link Option}.\n     *\n     * @public\n     * @type {boolean}\n     * @memberof Option#\n     */\n    this.modifiable = Boolean(modifiable);\n\n    /**\n     * The default value for this {@link Option}.\n     *\n     * @public\n     * @type {*}\n     * @memberof Option#\n     */\n    this.defaultValue = defaultValue;\n\n    this._valueTransformer = valueTransformer;\n  }, {\n\n    /**\n     * Transforms the specified <code>value</code> so that it can be applied for this {@link Option}.\n     *\n     * If a value transformer has been specified for this {@link Option}, it will be called upon to transform\n     * <code>value</code>. Otherwise, <code>value</code> will be returned directly.\n     *\n     * @param {*} value - the value to be transformed\n     * @return {*} The transformed value or <code>value</code> if no value transformer is specified.\n     * @public\n     * @memberof Option#\n     */\n    transform: function(value) {\n      var transformer = this._valueTransformer;\n      if (typeof transformer === 'function') {\n        return transformer(value, this);\n      }\n\n      return value;\n    }\n\n  });\n\n  var Option_1 = Option;\n\n  /**\n   * Returns a transformed value for the specified <code>value</code> to be applied for the <code>option</code> provided.\n   *\n   * @callback Option~ValueTransformer\n   * @param {*} value - the value to be transformed\n   * @param {Option} option - the {@link Option} for which <code>value</code> is being transformed\n   * @return {*} The transform value.\n   */\n\n  /**\n   * Contains utility methods that are useful throughout the library.\n   *\n   * @public\n   * @class\n   * @extends Nevis\n   */\n  var Utilities = lite.extend(null, {\n\n    /**\n     * Returns the absolute value of a given number.\n     *\n     * This method is simply a convenient shorthand for <code>Math.abs</code> while ensuring that nulls are returned as\n     * <code>null</code> instead of zero.\n     *\n     * @param {number} value - the number whose absolute value is to be returned\n     * @return {number} The absolute value of <code>value</code> or <code>null</code> if <code>value</code> is\n     * <code>null</code>.\n     * @public\n     * @static\n     * @memberof Utilities\n     */\n    abs: function(value) {\n      return value != null ? Math.abs(value) : null;\n    },\n\n    /**\n     * Returns whether the specified <code>object</code> has a property with the specified <code>name</code> as an own\n     * (not inherited) property.\n     *\n     * @param {Object} object - the object on which the property is to be checked\n     * @param {string} name - the name of the property to be checked\n     * @return {boolean} <code>true</code> if <code>object</code> has an own property with <code>name</code>.\n     * @public\n     * @static\n     * @memberof Utilities\n     */\n    hasOwn: function(object, name) {\n      return Object.prototype.hasOwnProperty.call(object, name);\n    },\n\n    /**\n     * A non-operation method that does absolutely nothing.\n     *\n     * @return {void}\n     * @public\n     * @static\n     * @memberof Utilities\n     */\n    noop: function() {},\n\n    /**\n     * Transforms the specified <code>string</code> to upper case while remaining null-safe.\n     *\n     * @param {string} string - the string to be transformed to upper case\n     * @return {string} <code>string</code> transformed to upper case if <code>string</code> is not <code>null</code>.\n     * @public\n     * @static\n     * @memberof Utilities\n     */\n    toUpperCase: function(string) {\n      return string != null ? string.toUpperCase() : null;\n    }\n\n  });\n\n  var Utilities_1 = Utilities;\n\n  /**\n   * Manages multiple {@link Option} instances that are intended to be used by multiple implementations.\n   *\n   * Although the option definitions are shared between targets, the values are maintained on the targets themselves.\n   *\n   * @param {Option[]} options - the options to be used\n   * @public\n   * @class\n   * @extends Nevis\n   */\n  var OptionManager = lite.extend(function(options) {\n    /**\n     * The available options for this {@link OptionManager}.\n     *\n     * @public\n     * @type {Object.<string, Option>}\n     * @memberof OptionManager#\n     */\n    this.options = {};\n\n    options.forEach(function(option) {\n      this.options[option.name] = option;\n    }, this);\n  }, {\n\n    /**\n     * Returns whether an option with the specified <code>name</code> is available.\n     *\n     * @param {string} name - the name of the {@link Option} whose existence is to be checked\n     * @return {boolean} <code>true</code> if an {@link Option} exists with <code>name</code>; otherwise\n     * <code>false</code>.\n     * @public\n     * @memberof OptionManager#\n     */\n    exists: function(name) {\n      return this.options[name] != null;\n    },\n\n    /**\n     * Returns the value of the option with the specified <code>name</code> on the <code>target</code> object provided.\n     *\n     * @param {string} name - the name of the {@link Option} whose value on <code>target</code> is to be returned\n     * @param {Object} target - the object from which the value of the named {@link Option} is to be returned\n     * @return {*} The value of the {@link Option} with <code>name</code> on <code>target</code>.\n     * @public\n     * @memberof OptionManager#\n     */\n    get: function(name, target) {\n      return OptionManager._get(this.options[name], target);\n    },\n\n    /**\n     * Returns a copy of all of the available options on the <code>target</code> object provided.\n     *\n     * @param {Object} target - the object from which the option name/value pairs are to be returned\n     * @return {Object.<string, *>} A hash containing the name/value pairs of all options on <code>target</code>.\n     * @public\n     * @memberof OptionManager#\n     */\n    getAll: function(target) {\n      var name;\n      var options = this.options;\n      var result = {};\n\n      for (name in options) {\n        if (Utilities_1.hasOwn(options, name)) {\n          result[name] = OptionManager._get(options[name], target);\n        }\n      }\n\n      return result;\n    },\n\n    /**\n     * Initializes the available options for the <code>target</code> object provided and then applies the initial values\n     * within the speciifed <code>options</code>.\n     *\n     * This method will throw an error if any of the names within <code>options</code> does not match an available option.\n     *\n     * This involves setting the default values and defining properties for all of the available options on\n     * <code>target</code> before finally calling {@link OptionMananger#setAll} with <code>options</code> and\n     * <code>target</code>. Any options that are configured to be modifiable will have a setter included in their defined\n     * property that will allow its corresponding value to be modified.\n     *\n     * If a change handler is specified, it will be called whenever the value changes on <code>target</code> for a\n     * modifiable option, but only when done so via the defined property's setter.\n     *\n     * @param {Object.<string, *>} options - the name/value pairs of the initial options to be set\n     * @param {Object} target - the object on which the options are to be initialized\n     * @param {Function} [changeHandler] - the function to be called whenever the value of an modifiable option changes on\n     * <code>target</code>\n     * @return {void}\n     * @throws {Error} If <code>options</code> contains an invalid option name.\n     * @public\n     * @memberof OptionManager#\n     */\n    init: function(options, target, changeHandler) {\n      if (typeof changeHandler !== 'function') {\n        changeHandler = Utilities_1.noop;\n      }\n\n      var name, option;\n\n      for (name in this.options) {\n        if (Utilities_1.hasOwn(this.options, name)) {\n          option = this.options[name];\n\n          OptionManager._set(option, option.defaultValue, target);\n          OptionManager._createAccessor(option, target, changeHandler);\n        }\n      }\n\n      this._setAll(options, target, true);\n    },\n\n    /**\n     * Sets the value of the option with the specified <code>name</code> on the <code>target</code> object provided to\n     * <code>value</code>.\n     *\n     * This method will throw an error if <code>name</code> does not match an available option or matches an option that\n     * cannot be modified.\n     *\n     * If <code>value</code> is <code>null</code> and the {@link Option} has a default value configured, then that default\n     * value will be used instead. If the {@link Option} also has a value transformer configured, it will be used to\n     * transform whichever value was determined to be used.\n     *\n     * This method returns whether the value of the underlying field on <code>target</code> was changed as a result.\n     *\n     * @param {string} name - the name of the {@link Option} whose value is to be set\n     * @param {*} value - the value to be set for the named {@link Option} on <code>target</code>\n     * @param {Object} target - the object on which <code>value</code> is to be set for the named {@link Option}\n     * @return {boolean} <code>true</code> if the underlying field on <code>target</code> was changed; otherwise\n     * <code>false</code>.\n     * @throws {Error} If <code>name</code> is invalid or is for an option that cannot be modified.\n     * @public\n     * @memberof OptionManager#\n     */\n    set: function(name, value, target) {\n      return this._set(name, value, target);\n    },\n\n    /**\n     * Sets all of the specified <code>options</code> on the <code>target</code> object provided to their corresponding\n     * values.\n     *\n     * This method will throw an error if any of the names within <code>options</code> does not match an available option\n     * or matches an option that cannot be modified.\n     *\n     * If any value within <code>options</code> is <code>null</code> and the corresponding {@link Option} has a default\n     * value configured, then that default value will be used instead. If an {@link Option} also has a value transformer\n     * configured, it will be used to transform whichever value was determined to be used.\n     *\n     * This method returns whether the value for any of the underlying fields on <code>target</code> were changed as a\n     * result.\n     *\n     * @param {Object.<string, *>} options - the name/value pairs of options to be set\n     * @param {Object} target - the object on which the options are to be set\n     * @return {boolean} <code>true</code> if any of the underlying fields on <code>target</code> were changed; otherwise\n     * <code>false</code>.\n     * @throws {Error} If <code>options</code> contains an invalid option name or an option that cannot be modiifed.\n     * @public\n     * @memberof OptionManager#\n     */\n    setAll: function(options, target) {\n      return this._setAll(options, target);\n    },\n\n    _set: function(name, value, target, allowUnmodifiable) {\n      var option = this.options[name];\n      if (!option) {\n        throw new Error('Invalid option: ' + name);\n      }\n      if (!option.modifiable && !allowUnmodifiable) {\n        throw new Error('Option cannot be modified: ' + name);\n      }\n\n      return OptionManager._set(option, value, target);\n    },\n\n    _setAll: function(options, target, allowUnmodifiable) {\n      if (!options) {\n        return false;\n      }\n\n      var name;\n      var changed = false;\n\n      for (name in options) {\n        if (Utilities_1.hasOwn(options, name) && this._set(name, options[name], target, allowUnmodifiable)) {\n          changed = true;\n        }\n      }\n\n      return changed;\n    }\n\n  }, {\n\n    _createAccessor: function(option, target, changeHandler) {\n      var descriptor = {\n        get: function() {\n          return OptionManager._get(option, target);\n        }\n      };\n\n      if (option.modifiable) {\n        descriptor.set = function(value) {\n          if (OptionManager._set(option, value, target)) {\n            changeHandler(value, option);\n          }\n        };\n      }\n\n      Object.defineProperty(target, option.name, descriptor);\n    },\n\n    _get: function(option, target) {\n      return target['_' + option.name];\n    },\n\n    _set: function(option, value, target) {\n      var fieldName = '_' + option.name;\n      var oldValue = target[fieldName];\n      var newValue = option.transform(value != null ? value : option.defaultValue);\n\n      target[fieldName] = newValue;\n\n      return newValue !== oldValue;\n    }\n\n  });\n\n  var OptionManager_1 = OptionManager;\n\n  /**\n   * Called whenever the value of a modifiable {@link Option} is changed on a target object via the defined property's\n   * setter.\n   *\n   * @callback OptionManager~ChangeHandler\n   * @param {*} value - the new value for <code>option</code> on the target object\n   * @param {Option} option - the modifable {@link Option} whose value has changed on the target object.\n   * @return {void}\n   */\n\n  /**\n   * A basic manager for {@link Service} implementations that are mapped to simple names.\n   *\n   * @public\n   * @class\n   * @extends Nevis\n   */\n  var ServiceManager = lite.extend(function() {\n    this._services = {};\n  }, {\n\n    /**\n     * Returns the {@link Service} being managed with the specified <code>name</code>.\n     *\n     * @param {string} name - the name of the {@link Service} to be returned\n     * @return {Service} The {@link Service} is being managed with <code>name</code>.\n     * @throws {Error} If no {@link Service} is being managed with <code>name</code>.\n     * @public\n     * @memberof ServiceManager#\n     */\n    getService: function(name) {\n      var service = this._services[name];\n      if (!service) {\n        throw new Error('Service is not being managed with name: ' + name);\n      }\n\n      return service;\n    },\n\n    /**\n     * Sets the {@link Service} implementation to be managed for the specified <code>name</code> to the\n     * <code>service</code> provided.\n     *\n     * @param {string} name - the name of the {@link Service} to be managed with <code>name</code>\n     * @param {Service} service - the {@link Service} implementation to be managed\n     * @return {void}\n     * @throws {Error} If a {@link Service} is already being managed with the same <code>name</code>.\n     * @public\n     * @memberof ServiceManager#\n     */\n    setService: function(name, service) {\n      if (this._services[name]) {\n        throw new Error('Service is already managed with name: ' + name);\n      }\n\n      if (service) {\n        this._services[name] = service;\n      }\n    }\n\n  });\n\n  var ServiceManager_1 = ServiceManager;\n\n  var optionManager = new OptionManager_1([\n    new Option_1('background', true, 'white'),\n    new Option_1('backgroundAlpha', true, 1, Utilities_1.abs),\n    new Option_1('element'),\n    new Option_1('foreground', true, 'black'),\n    new Option_1('foregroundAlpha', true, 1, Utilities_1.abs),\n    new Option_1('level', true, 'L', Utilities_1.toUpperCase),\n    new Option_1('mime', true, 'image/png'),\n    new Option_1('padding', true, null, Utilities_1.abs),\n    new Option_1('size', true, 100, Utilities_1.abs),\n    new Option_1('value', true, '')\n  ]);\n  var serviceManager = new ServiceManager_1();\n\n  /**\n   * Enables configuration of a QR code generator which uses HTML5 <code>canvas</code> for rendering.\n   *\n   * @param {QRious~Options} [options] - the options to be used\n   * @throws {Error} If any <code>options</code> are invalid.\n   * @public\n   * @class\n   * @extends Nevis\n   */\n  var QRious = lite.extend(function(options) {\n    optionManager.init(options, this, this.update.bind(this));\n\n    var element = optionManager.get('element', this);\n    var elementService = serviceManager.getService('element');\n    var canvas = element && elementService.isCanvas(element) ? element : elementService.createCanvas();\n    var image = element && elementService.isImage(element) ? element : elementService.createImage();\n\n    this._canvasRenderer = new CanvasRenderer_1(this, canvas, true);\n    this._imageRenderer = new ImageRenderer_1(this, image, image === element);\n\n    this.update();\n  }, {\n\n    /**\n     * Returns all of the options configured for this {@link QRious}.\n     *\n     * Any changes made to the returned object will not be reflected in the options themselves or their corresponding\n     * underlying fields.\n     *\n     * @return {Object.<string, *>} A copy of the applied options.\n     * @public\n     * @memberof QRious#\n     */\n    get: function() {\n      return optionManager.getAll(this);\n    },\n\n    /**\n     * Sets all of the specified <code>options</code> and automatically updates this {@link QRious} if any of the\n     * underlying fields are changed as a result.\n     *\n     * This is the preferred method for updating multiple options at one time to avoid unnecessary updates between\n     * changes.\n     *\n     * @param {QRious~Options} options - the options to be set\n     * @return {void}\n     * @throws {Error} If any <code>options</code> are invalid or cannot be modified.\n     * @public\n     * @memberof QRious#\n     */\n    set: function(options) {\n      if (optionManager.setAll(options, this)) {\n        this.update();\n      }\n    },\n\n    /**\n     * Returns the image data URI for the generated QR code using the <code>mime</code> provided.\n     *\n     * @param {string} [mime] - the MIME type for the image\n     * @return {string} The image data URI for the QR code.\n     * @public\n     * @memberof QRious#\n     */\n    toDataURL: function(mime) {\n      return this.canvas.toDataURL(mime || this.mime);\n    },\n\n    /**\n     * Updates this {@link QRious} by generating a new {@link Frame} and re-rendering the QR code.\n     *\n     * @return {void}\n     * @protected\n     * @memberof QRious#\n     */\n    update: function() {\n      var frame = new Frame_1({\n        level: this.level,\n        value: this.value\n      });\n\n      this._canvasRenderer.render(frame);\n      this._imageRenderer.render(frame);\n    }\n\n  }, {\n\n    /**\n     * Configures the <code>service</code> provided to be used by all {@link QRious} instances.\n     *\n     * @param {Service} service - the {@link Service} to be configured\n     * @return {void}\n     * @throws {Error} If a {@link Service} has already been configured with the same name.\n     * @public\n     * @static\n     * @memberof QRious\n     */\n    use: function(service) {\n      serviceManager.setService(service.getName(), service);\n    }\n\n  });\n\n  Object.defineProperties(QRious.prototype, {\n\n    canvas: {\n      /**\n       * Returns the <code>canvas</code> element being used to render the QR code for this {@link QRious}.\n       *\n       * @return {*} The <code>canvas</code> element.\n       * @public\n       * @memberof QRious#\n       * @alias canvas\n       */\n      get: function() {\n        return this._canvasRenderer.getElement();\n      }\n    },\n\n    image: {\n      /**\n       * Returns the <code>img</code> element being used to render the QR code for this {@link QRious}.\n       *\n       * @return {*} The <code>img</code> element.\n       * @public\n       * @memberof QRious#\n       * @alias image\n       */\n      get: function() {\n        return this._imageRenderer.getElement();\n      }\n    }\n\n  });\n\n  var QRious_1$2 = QRious;\n\n  /**\n   * The options used by {@link QRious}.\n   *\n   * @typedef {Object} QRious~Options\n   * @property {string} [background=\"white\"] - The background color to be applied to the QR code.\n   * @property {number} [backgroundAlpha=1] - The background alpha to be applied to the QR code.\n   * @property {*} [element] - The element to be used to render the QR code which may either be an <code>canvas</code> or\n   * <code>img</code>. The element(s) will be created if needed.\n   * @property {string} [foreground=\"black\"] - The foreground color to be applied to the QR code.\n   * @property {number} [foregroundAlpha=1] - The foreground alpha to be applied to the QR code.\n   * @property {string} [level=\"L\"] - The error correction level to be applied to the QR code.\n   * @property {string} [mime=\"image/png\"] - The MIME type to be used to render the image for the QR code.\n   * @property {number} [padding] - The padding for the QR code in pixels.\n   * @property {number} [size=100] - The size of the QR code in pixels.\n   * @property {string} [value=\"\"] - The value to be encoded within the QR code.\n   */\n\n  var index = QRious_1$2;\n\n  /**\n   * Defines a service contract that must be met by all implementations.\n   *\n   * @public\n   * @class\n   * @extends Nevis\n   */\n  var Service = lite.extend({\n\n    /**\n     * Returns the name of this {@link Service}.\n     *\n     * @return {string} The service name.\n     * @public\n     * @abstract\n     * @memberof Service#\n     */\n    getName: function() {}\n\n  });\n\n  var Service_1 = Service;\n\n  /**\n   * A service for working with elements.\n   *\n   * @public\n   * @class\n   * @extends Service\n   */\n  var ElementService = Service_1.extend({\n\n    /**\n     * Creates an instance of a canvas element.\n     *\n     * Implementations of {@link ElementService} <b>must</b> override this method with their own specific logic.\n     *\n     * @return {*} The newly created canvas element.\n     * @public\n     * @abstract\n     * @memberof ElementService#\n     */\n    createCanvas: function() {},\n\n    /**\n     * Creates an instance of a image element.\n     *\n     * Implementations of {@link ElementService} <b>must</b> override this method with their own specific logic.\n     *\n     * @return {*} The newly created image element.\n     * @public\n     * @abstract\n     * @memberof ElementService#\n     */\n    createImage: function() {},\n\n    /**\n     * @override\n     */\n    getName: function() {\n      return 'element';\n    },\n\n    /**\n     * Returns whether the specified <code>element</code> is a canvas.\n     *\n     * Implementations of {@link ElementService} <b>must</b> override this method with their own specific logic.\n     *\n     * @param {*} element - the element to be checked\n     * @return {boolean} <code>true</code> if <code>element</code> is a canvas; otherwise <code>false</code>.\n     * @public\n     * @abstract\n     * @memberof ElementService#\n     */\n    isCanvas: function(element) {},\n\n    /**\n     * Returns whether the specified <code>element</code> is an image.\n     *\n     * Implementations of {@link ElementService} <b>must</b> override this method with their own specific logic.\n     *\n     * @param {*} element - the element to be checked\n     * @return {boolean} <code>true</code> if <code>element</code> is an image; otherwise <code>false</code>.\n     * @public\n     * @abstract\n     * @memberof ElementService#\n     */\n    isImage: function(element) {}\n\n  });\n\n  var ElementService_1 = ElementService;\n\n  /**\n   * An implementation of {@link ElementService} intended for use within a browser environment.\n   *\n   * @public\n   * @class\n   * @extends ElementService\n   */\n  var BrowserElementService = ElementService_1.extend({\n\n    /**\n     * @override\n     */\n    createCanvas: function() {\n      return document.createElement('canvas');\n    },\n\n    /**\n     * @override\n     */\n    createImage: function() {\n      return document.createElement('img');\n    },\n\n    /**\n     * @override\n     */\n    isCanvas: function(element) {\n      return element instanceof HTMLCanvasElement;\n    },\n\n    /**\n     * @override\n     */\n    isImage: function(element) {\n      return element instanceof HTMLImageElement;\n    }\n\n  });\n\n  var BrowserElementService_1 = BrowserElementService;\n\n  index.use(new BrowserElementService_1());\n\n  var QRious_1 = index;\n\n  return QRious_1;\n\n})));\n\n\n});\n\nvar vQriously = { render: function render() {\n        var _vm = this;var _h = _vm.$createElement;var _c = _vm._self._c || _h;return _c('div', [_c('canvas', { ref: \"qrcode\" })]);\n    }, staticRenderFns: [],\n    data: function data() {\n        return { qrious: null };\n    },\n\n    props: {\n        background: {\n            type: String,\n            default: 'white'\n        },\n        backgroundAlpha: {\n            type: Number,\n            default: 0.0\n        },\n        foreground: {\n            type: String,\n            default: 'black'\n        },\n        foregroundAlpha: {\n            type: Number,\n            default: 1.0\n        },\n        level: {\n            type: String,\n            default: 'L'\n        },\n        mime: {\n            type: String,\n            default: 'image/png'\n        },\n        padding: {\n            type: Number,\n            default: null\n        },\n        size: {\n            type: Number,\n            default: 100\n        },\n        value: {\n            type: String,\n            required: true\n        }\n    },\n    watch: {\n        background: function background() {\n            this.qrious.background = this.background;\n        },\n        backgroundAlpha: function backgroundAlpha() {\n            this.qrious.backgroundAlpha = this.backgroundAlpha;\n        },\n        foreground: function foreground() {\n            this.qrious.foreground = this.foreground;\n        },\n        foregroundAlpha: function foregroundAlpha() {\n            this.qrious.foregroundAlpha = this.foregroundAlpha;\n        },\n        level: function level() {\n            this.qrious.level = this.level;\n        },\n        mime: function mime() {\n            this.qrious.mime = this.mime;\n        },\n        padding: function padding() {\n            this.qrious.padding = this.padding;\n        },\n        size: function size() {\n            this.qrious.size = this.size;\n        },\n        value: function value() {\n            this.qrious.value = this.value;\n        }\n    },\n    mounted: function mounted() {\n        var element = this.$refs.qrcode;\n        var background = this.background;\n        var backgroundAlpha = this.backgroundAlpha;\n        var foreground = this.foreground;\n        var foregroundAlpha = this.foregroundAlpha;\n        var level = this.level;\n        var mime = this.mime;\n        var padding = this.padding;\n        var size = this.size;\n        var value = this.value;\n\n        this.qrious = new qrious({\n            element: element,\n            background: background,\n            backgroundAlpha: backgroundAlpha,\n            foreground: foreground,\n            foregroundAlpha: foregroundAlpha,\n            level: level,\n            mime: mime,\n            padding: padding,\n            size: size,\n            value: value\n        });\n    }\n};\n\n/**\r\n * @name VueJS vQriously (vue-qriously)\r\n * @description Component to generate HTML canvas QR codes for Vue.js 2.0\r\n * @author Theodore Messinezis <theo@theomessin.com>\r\n * @file vue-qriously plugin definition\r\n */\n\nvar VueQriously = {\n    install: function install(Vue, options) {\n        Vue.component('qriously', vQriously);\n    }\n};\n\nif (typeof window !== 'undefined' && window.Vue) {\n    window.Vue.use(VueQriously);\n}\n\nreturn VueQriously;\n\n})));\n"],"mappings":"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AAK,CAAC,EAAG,CAAC,EAAG,EAAE,EAAG,EAAE,EAAK,CAAC,EAAG,CAAC,EAAG,CAAC,EAAI,EAAE,EAC3E,CAAC,EAAG,CAAC,EAAG,GAAG,EAAE,EAAE,EAAK,CAAC,EAAG,CAAC,EAAG,EAAE,EAAG,EAAE,EAAK,CAAC,EAAG,CAAC,EAAG,EAAE,EAAG,EAAE,EAAK,CAAC,EAAG,CAAC,EAAG,EAAE,EAAG,EAAE,EAC3E,CAAC,EAAG,CAAC,EAAG,EAAE,EAAG,EAAE,EAAK,CAAC,EAAG,CAAC,EAAG,EAAE,EAAG,EAAE,EAAK,CAAC,EAAG,CAAC,EAAG,EAAE,EAAG,EAAE,EAAK,CAAC,EAAG,CAAC,EAAG,EAAE,EAAG,EAAE,EAC3E,CAAC,EAAG,CAAC,EAAG,EAAE,EAAG,EAAE,EAAK,CAAC,EAAG,CAAC,EAAG,EAAE,EAAG,EAAE,EAAK,CAAC,EAAG,CAAC,EAAG,EAAE,EAAG,EAAE,EAAK,CAAC,EAAG,CAAC,EAAG,EAAE,EAAG,EAAE,EAC3E,CAAC,EAAG,CAAC,EAAG,EAAE,EAAG,EAAE,EAAK,CAAC,EAAG,CAAC,EAAG,EAAE,EAAG,EAAE,EAAK,CAAC,EAAG,CAAC,EAAG,EAAE,EAAG,EAAE,EAAK,CAAC,EAAG,CAAC,EAAG,EAAE,EAAG,EAAE,EAC3E,CAAC,EAAG,CAAC,EAAG,GAAG,EAAE,EAAE,EAAK,CAAC,EAAG,CAAC,EAAG,EAAE,EAAG,EAAE,EAAK,CAAC,EAAG,CAAC,EAAG,EAAE,EAAG,EAAE,EAAK,CAAC,EAAG,CAAC,EAAG,EAAE,EAAG,EAAE,EAC3E,CAAC,EAAG,CAAC,EAAG,EAAE,EAAG,EAAE,EAAK,CAAC,EAAG,CAAC,EAAG,EAAE,EAAG,EAAE,EAAK,CAAC,EAAG,CAAC,EAAG,EAAE,EAAG,EAAE,EAAK,CAAC,EAAG,CAAC,EAAG,EAAE,EAAG,EAAE,EAC3E,CAAC,EAAG,CAAC,EAAG,EAAE,EAAG,EAAE,EAAK,CAAC,EAAG,CAAC,EAAG,EAAE,EAAG,EAAE,EAAK,CAAC,EAAG,CAAC,EAAG,EAAE,EAAG,EAAE,EAAK,CAAC,EAAG,CAAC,EAAG,EAAE,EAAG,EAAE,EAC3E,CAAC,EAAG,CAAC,EAAG,EAAE,EAAG,EAAE,EAAK,CAAC,EAAG,CAAC,EAAG,EAAE,EAAG,EAAE,EAAK,CAAC,EAAG,CAAC,EAAG,EAAE,EAAG,EAAE,EAAK,CAAC,EAAG,CAAC,EAAG,EAAE,EAAG,EAAE,EAC3E,CAAC,EAAG,CAAC,EAAG,GAAG,EAAE,EAAE,EAAK,CAAC,EAAG,CAAC,EAAG,EAAE,EAAG,EAAE,EAAK,CAAC,EAAG,CAAC,EAAG,EAAE,EAAG,EAAE,EAAK,EAAE,EAAE,CAAC,EAAG,EAAE,EAAG,EAAE,EAC3E,CAAC,EAAG,CAAC,EAAG,GAAG,EAAE,EAAE,EAAK,CAAC,EAAG,CAAC,EAAG,EAAE,EAAG,EAAE,EAAK,EAAE,EAAE,CAAC,EAAG,EAAE,EAAG,EAAE,EAAK,EAAE,EAAE,CAAC,EAAG,EAAE,EAAG,EAAE,EAC3E,CAAC,EAAG,CAAC,EAAG,EAAE,EAAG,EAAE,EAAK,CAAC,EAAG,CAAC,EAAG,EAAE,EAAG,EAAE,EAAK,CAAC,EAAG,CAAC,EAAG,EAAE,EAAG,EAAE,EAAK,EAAE,EAAE,CAAC,EAAG,EAAE,EAAG,EAAE,EAC3E,CAAC,EAAG,CAAC,EAAG,EAAE,EAAG,EAAE,EAAK,CAAC,EAAG,CAAC,EAAG,EAAE,EAAG,EAAE,EAAK,EAAE,EAAE,CAAC,EAAG,EAAE,EAAG,EAAE,EAAK,CAAC,EAAG,EAAE,EAAE,EAAE,EAAG,EAAE,EAC3E,CAAC,EAAG,CAAC,EAAG,GAAG,EAAE,EAAE,EAAK,EAAE,EAAE,CAAC,EAAG,EAAE,EAAG,EAAE,EAAK,CAAC,EAAG,EAAE,EAAE,EAAE,EAAG,EAAE,EAAK,CAAC,EAAG,EAAE,EAAE,EAAE,EAAG,EAAE,EAC3E,CAAC,EAAG,CAAC,EAAG,GAAG,EAAE,EAAE,EAAK,CAAC,EAAG,CAAC,EAAG,EAAE,EAAG,EAAE,EAAK,EAAE,EAAE,CAAC,EAAG,EAAE,EAAG,EAAE,EAAK,CAAC,EAAG,EAAE,EAAE,EAAE,EAAG,EAAE,EAC3E,CAAC,EAAG,CAAC,EAAG,GAAG,EAAE,EAAE,EAAK,CAAC,EAAG,EAAE,EAAE,EAAE,EAAG,EAAE,EAAK,EAAE,EAAE,CAAC,EAAG,EAAE,EAAG,EAAE,EAAK,CAAC,EAAG,EAAE,EAAE,EAAE,EAAG,EAAE,EAC3E,CAAC,EAAG,CAAC,EAAG,GAAG,EAAE,EAAE,EAAK,CAAC,EAAG,EAAE,EAAE,EAAE,EAAG,EAAE,EAAK,EAAE,EAAE,CAAC,EAAG,EAAE,EAAG,EAAE,EAAK,EAAE,EAAE,EAAE,EAAE,EAAE,EAAG,EAAE,EAC3E,CAAC,EAAG,CAAC,EAAG,GAAG,EAAE,EAAE,EAAK,EAAE,EAAE,CAAC,EAAG,EAAE,EAAG,EAAE,EAAK,EAAE,EAAE,CAAC,EAAG,EAAE,EAAG,EAAE,EAAK,EAAE,EAAE,CAAC,EAAG,EAAE,EAAG,EAAE,EAC3E,CAAC,EAAG,CAAC,EAAG,GAAG,EAAE,EAAE,EAAK,EAAE,EAAE,CAAC,EAAG,EAAE,EAAG,EAAE,EAAK,CAAC,EAAG,EAAE,EAAE,EAAE,EAAG,EAAE,EAAK,EAAE,EAAE,CAAC,EAAG,EAAE,EAAG,EAAE,EAC3E,CAAC,EAAG,CAAC,EAAG,GAAG,EAAE,EAAE,EAAK,CAAC,EAAG,EAAE,EAAE,EAAE,EAAG,EAAE,EAAK,EAAE,EAAE,EAAE,EAAE,EAAE,EAAG,EAAE,EAAK,EAAE,EAAE,EAAE,EAAE,EAAE,EAAG,EAAE,EAC3E,CAAC,EAAG,CAAC,EAAG,GAAG,EAAE,EAAE,EAAK,CAAC,EAAG,EAAE,EAAE,EAAE,EAAG,EAAE,EAAK,EAAE,EAAE,EAAE,EAAE,EAAE,EAAG,EAAE,EAAK,EAAE,EAAE,CAAC,EAAG,EAAE,EAAG,EAAE,EAC3E,CAAC,EAAG,CAAC,EAAG,GAAG,EAAE,EAAE,EAAK,CAAC,EAAG,EAAE,EAAE,EAAE,EAAG,EAAE,EAAK,CAAC,EAAG,EAAE,EAAE,EAAE,EAAG,EAAE,EAAK,EAAE,EAAE,EAAE,EAAE,EAAE,EAAG,EAAE,EAC3E,EAAE,EAAE,CAAC,EAAG,GAAG,EAAE,EAAE,EAAK,EAAE,EAAE,CAAC,EAAG,EAAE,EAAG,EAAE,EAAK,EAAE,EAAE,CAAC,EAAG,EAAE,EAAG,EAAE,EAAK,EAAE,EAAE,CAAC,EAAG,EAAE,EAAG,EAAE,EAC3E,CAAC,EAAG,CAAC,EAAG,GAAG,EAAE,EAAE,EAAK,EAAE,EAAE,CAAC,EAAG,EAAE,EAAG,EAAE,EAAK,CAAC,EAAG,EAAE,EAAE,EAAE,EAAG,EAAE,EAAK,EAAE,EAAE,EAAE,EAAE,EAAE,EAAG,EAAE,EAC3E,CAAC,EAAG,EAAE,EAAE,GAAG,EAAE,EAAE,EAAK,CAAC,EAAG,EAAE,EAAE,EAAE,EAAG,EAAE,EAAK,CAAC,EAAG,EAAE,EAAE,EAAE,EAAG,EAAE,EAAK,EAAE,EAAE,EAAE,EAAE,EAAE,EAAG,EAAE,EAC3E,CAAC,EAAG,CAAC,EAAG,GAAG,EAAE,EAAE,EAAK,EAAE,EAAE,CAAC,EAAG,EAAE,EAAG,EAAE,EAAK,CAAC,EAAG,EAAE,EAAE,EAAE,EAAG,EAAE,EAAK,EAAE,EAAE,EAAE,EAAE,EAAE,EAAG,EAAE,EAC3E,CAAC,EAAG,EAAE,EAAE,GAAG,EAAE,EAAE,EAAK,EAAE,EAAE,EAAE,EAAE,EAAE,EAAG,EAAE,EAAK,EAAE,EAAE,EAAE,EAAE,EAAE,EAAG,EAAE,EAAK,EAAE,EAAE,EAAE,EAAE,EAAE,EAAG,EAAE,EAC3E,EAAE,EAAE,CAAC,EAAG,GAAG,EAAE,EAAE,EAAK,CAAC,EAAG,EAAE,EAAE,EAAE,EAAG,EAAE,EAAK,EAAE,EAAE,CAAC,EAAG,EAAE,EAAG,EAAE,EAAK,EAAE,EAAE,EAAE,EAAE,EAAE,EAAG,EAAE,EAC3E,EAAE,EAAE,CAAC,EAAG,GAAG,EAAE,EAAE,EAAK,EAAE,EAAE,EAAE,EAAE,EAAE,EAAG,EAAE,EAAK,EAAE,EAAE,EAAE,EAAE,EAAE,EAAG,EAAE,EAAK,EAAE,EAAE,EAAE,EAAE,EAAE,EAAG,EAAE,EAC3E,EAAE,EAAE,CAAC,EAAG,GAAG,EAAE,EAAE,EAAK,EAAE,EAAE,EAAE,EAAE,EAAE,EAAG,EAAE,EAAK,EAAE,EAAE,EAAE,EAAE,EAAE,EAAG,EAAE,EAAK,EAAE,EAAE,EAAE,EAAE,EAAE,EAAG,EAAE,EAC3E,EAAE,EAAE,CAAC,EAAG,GAAG,EAAE,EAAE,EAAK,EAAE,EAAE,EAAE,EAAE,EAAE,EAAG,EAAE,EAAK,EAAE,EAAE,CAAC,EAAG,EAAE,EAAG,EAAE,EAAK,EAAE,EAAE,CAAC,EAAG,EAAE,EAAG,EAAE,EAC3E,EAAE,EAAE,CAAC,EAAG,GAAG,EAAE,EAAE,EAAK,EAAE,EAAE,EAAE,EAAE,EAAE,EAAG,EAAE,EAAK,EAAE,EAAE,EAAE,EAAE,EAAE,EAAG,EAAE,EAAK,EAAE,EAAE,EAAE,EAAE,EAAE,EAAG,EAAE,EAC3E,CAAC,EAAG,EAAE,EAAE,GAAG,EAAE,EAAE,EAAK,CAAC,EAAG,EAAE,EAAE,EAAE,EAAG,EAAE,EAAK,EAAE,EAAE,EAAE,EAAE,EAAE,EAAG,EAAE,EAAK,CAAC,EAAG,EAAE,EAAE,EAAE,EAAG,EAAE,EAC3E,EAAE,EAAE,CAAC,EAAG,GAAG,EAAE,EAAE,EAAK,EAAE,EAAE,EAAE,EAAE,EAAE,EAAG,EAAE,EAAK,EAAE,EAAE,EAAE,EAAE,EAAE,EAAG,EAAE,EAAK,EAAE,EAAE,EAAE,EAAE,EAAE,EAAG,EAAE,EAC3E,CAAC,EAAG,EAAE,EAAE,GAAG,EAAE,EAAE,EAAK,EAAE,EAAE,EAAE,EAAE,EAAE,EAAG,EAAE,EAAK,EAAE,EAAE,EAAE,EAAE,EAAE,EAAG,EAAE,EAAK,EAAE,EAAE,EAAE,EAAE,EAAE,EAAG,EAAE,EAC3E,EAAE,EAAE,CAAC,EAAG,GAAG,EAAE,EAAE,EAAK,EAAE,EAAE,CAAC,EAAG,EAAE,EAAG,EAAE,EAAK,EAAE,EAAE,EAAE,EAAE,EAAE,EAAG,EAAE,EAAK,EAAE,EAAE,EAAE,EAAE,EAAE,EAAG,EAAE,EAC3E,EAAE,EAAE,CAAC,EAAG,GAAG,EAAE,EAAE,EAAK,EAAE,EAAE,EAAE,EAAE,EAAE,EAAG,EAAE,EAAK,EAAE,EAAE,EAAE,EAAE,EAAE,EAAG,EAAE,EAAK,EAAE,EAAE,EAAE,EAAE,EAAE,EAAG,EAAE,CAC5E;QAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;QACIC,YAAY,EAAE;QACZ;QACA,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM;QAC9D;QACA,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM;QAC9D;QACA,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM;QAC9D;QACA,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,CAC/D;QAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;QACIC,MAAM,EAAE;UACNC,CAAC,EAAE,CAAC;UACJC,CAAC,EAAE,CAAC;UACJC,CAAC,EAAE,CAAC;UACJC,CAAC,EAAE;QACL;MAEF,CAAC,CAAC;MAEF,IAAIC,iBAAiB,GAAGR,eAAe;;MAEvC;AACF;AACA;AACA;AACA;AACA;AACA;MACE,IAAIS,MAAM,GAAGnD,IAAI,CAACpB,MAAM,CAAC,IAAI,EAAE;QAE7B;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;QACIwE,QAAQ,EAAE,CACR,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAC9F,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAC9F,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAC9F,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAC9F,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAC9F,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAC9F,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAC9F,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAC9F,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAC9F,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAC9F,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAC9F,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAC9F,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAC9F,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAC9F,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAC9F,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAC/F;QAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;QACIC,GAAG,EAAE,CACH,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAC9F,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAC9F,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAC9F,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAC9F,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAC9F,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAC9F,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAC9F,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAC9F,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAC9F,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE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"},"metadata":{},"sourceType":"module","externalDependencies":[]}