{"ast":null,"code":"export default {\n  name: \"Login\",\n  data() {\n    var checkUsername = (rule, value, callback) => {\n      if (value) {\n        this.request.get(\"/check?\" + \"username=\" + value).then(res => {\n          console.log(res);\n          if (res.code !== 200) {\n            return callback(new Error(res.msg));\n          } else {\n            callback();\n          }\n        });\n      }\n    };\n    var validatePass = (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error('请再次输入密码'));\n      } else if (value !== this.form.password) {\n        callback(new Error('两次输入密码不一致!'));\n      } else {\n        callback();\n      }\n    };\n    return {\n      form: {\n        username: '',\n        password: '',\n        checkPass: ''\n      },\n      // 表单验证， 需要在el-form-item- 元素中增加prop属性\n      rules: {\n        username: [{\n          required: true,\n          message: '用户名不可为空',\n          trigger: 'blur'\n        }, {\n          min: 3,\n          max: 10,\n          message: '长度在 3 到 5 个字符',\n          trigger: 'blur'\n        }, {\n          validator: checkUsername,\n          trigger: 'blur'\n        }],\n        password: [{\n          required: true,\n          message: '密码不可为空',\n          trigger: 'blur'\n        }, {\n          min: 1,\n          max: 20,\n          message: '长度在 1 到 20 个字符',\n          trigger: 'blur'\n        }],\n        checkPass: [{\n          validator: validatePass,\n          trigger: 'blur'\n        }, {\n          min: 1,\n          max: 20,\n          message: '长度在 1 到 20 个字符',\n          trigger: 'blur'\n        }]\n      },\n      //对话框显示和隐藏\n      dialogVisible: false\n    };\n  },\n  methods: {\n    handleClose: function () {\n      console.log(\"Handle Close，空函数\");\n    },\n    onSubmit(formName) {\n      //为表单绑定验证功能\n      this.$refs[formName].validate(valid => {\n        if (valid) {\n          this.request.post('/register', {\n            username: this.form.username,\n            password: this.form.password\n          }).then(res => {\n            if (res.code === 200) {\n              //使用vue-router 路由到指定页面，该方式称之为编程式导航\n              this.$router.push(\"/login\");\n              this.$message.success(\"注册成功\");\n            } else {\n              console.log(res.data);\n              this.$message.error(this.form.username + \"已被注册\");\n            }\n          });\n        } else {\n          this.dialogVisible = true;\n          return false;\n        }\n      });\n    }\n  },\n  created() {\n    console.log(this);\n  }\n};","map":{"version":3,"names":["name","data","checkUsername","rule","value","callback","request","get","then","res","console","log","code","Error","msg","validatePass","form","password","username","checkPass","rules","required","message","trigger","min","max","validator","dialogVisible","methods","handleClose","onSubmit","formName","$refs","validate","valid","post","$router","push","$message","success","error","created"],"sources":["src/views/Register-bak.vue"],"sourcesContent":["<template>\n    <div class=\"wrapper\">\n        <el-form ref=\"loginForm\" class=\"login-box\" :model=\"form\" status-icon :rules=\"rules\" label width=\" 80px\" style=\"background-color: #fff;border-radius: 10px;position: relative;top:100px\">\n            <h3 class=\"login-title\">欢迎注册</h3>\n            <el-form-item label=\"用户名\" prop=\"username\">\n                <el-input prefix-icon=\"el-icon-user\"  type=\"text\" placeholder=\" 请输入用户名\" v-model=\"form.username\"/>\n            </el-form-item>\n            <el-form-item label=\"密码\" prop=\"password\">\n                <el-input prefix-icon=\"el-icon-lock\" type=\"password\" placeholder=\" 请输入密码\" v-model=\" form.password\"/>\n            </el-form-item>\n            <el-form-item label=\"确认密码\" prop=\"checkPass\">\n                <el-input prefix-icon=\"el-icon-lock\" type=\"password\" placeholder=\" 请确认密码\" v-model=\"form.checkPass\" />\n            </el-form-item>\n            <el-form-item>\n                <el-button type=\"primary\" v-on:click=\"onSubmit('loginForm')\">注册</el-button>\n                <el-button type=\"primary\" v-on:click=\"$router.push('/login')\">去登录</el-button>\n            </el-form-item>\n        </el-form>\n        <el-dialog\n                title=\"温馨提示\"\n                :visible.sync=\"dialogVisible\"\n                width=\"30%\"\n                :before-close=\"handleClose\">\n            <span>请输入用户名和密码</span>\n            <span slot=\"footer\" class=\"dialog-footer\">\n<el-button type=\"primary\" @click=\"dialogVisible = false\">确 定</el-button>\n      </span>\n        </el-dialog>\n    </div>\n</template>\n<script>\n    export default {\n        name: \"Login\",\n        data() {\n            var checkUsername = (rule, value, callback) => {\n                if (value) {\n                    this.request.get(\"/check?\" + \"username=\" + value).then(res => {\n                        console.log(res)\n                        if(res.code!==200){\n                            return callback(new Error(res.msg));\n                        }else {\n                            callback();\n                        }\n                    })\n                }\n            };\n            var validatePass = (rule, value, callback) => {\n                if (value === '') {\n                    callback(new Error('请再次输入密码'));\n                } else if (value !== this.form.password) {\n                    callback(new Error('两次输入密码不一致!'));\n                } else {\n                    callback();\n                }\n            };\n            return {\n                form: {\n                    username: '',\n                    password: '',\n                    checkPass: '',\n                },\n// 表单验证， 需要在el-form-item- 元素中增加prop属性\n                rules: {\n                    username: [\n                        {required: true, message: '用户名不可为空', trigger: 'blur'},\n                        {min: 3, max: 10, message: '长度在 3 到 5 个字符', trigger: 'blur'},\n                        {validator: checkUsername, trigger: 'blur'}\n                    ],\n                    password: [\n                        {required: true, message: '密码不可为空', trigger: 'blur'},\n                        {min: 1, max: 20, message: '长度在 1 到 20 个字符', trigger: 'blur'},\n                    ],\n                    checkPass: [\n                        {validator: validatePass, trigger: 'blur'},\n                        {min: 1, max: 20, message: '长度在 1 到 20 个字符', trigger: 'blur'}\n                    ],\n                },\n                //对话框显示和隐藏\n                dialogVisible: false\n            }\n        },\n        methods: {\n            handleClose: function () {\n                console.log(\"Handle Close，空函数\");\n            },\n            onSubmit(formName) {\n                //为表单绑定验证功能\n                this.$refs [formName].validate((valid) => {\n                    if (valid) {\n                        this.request.post('/register', {\n                            username: this.form.username,\n                            password: this.form.password\n                        })\n                            .then(res => {\n                                if(res.code===200){\n                                    //使用vue-router 路由到指定页面，该方式称之为编程式导航\n                                    this.$router.push(\"/login\");\n                                    this.$message.success(\"注册成功\")\n                                }else{\n                                    console.log(res.data);\n                                    this.$message.error(this.form.username+\"已被注册\")\n                                }\n                            })\n\n\n                    } else {\n                        this.dialogVisible = true;\n                        return false;\n                    }\n                });\n            },\n\n        },\n        created() {\n            console.log(this)\n        }\n    }\n</script>\n<style scoped>\n    .wrapper {\n        height: 100vh;\n        background-image: linear-gradient(to bottom right, #3F5EFB,#FC466B);\n        overflow: hidden;\n    }\n    .login-box {\n        border: 1px solid #DCDFE6;\n        width: 350px;\n        margin: 50px auto;\n        padding: 35px 35px 15px 35px;\n        border-radius: 5px;\n        -webkit-border-radius: 5px;\n        -moz-border-radius: 5px;\n        box-shadow: 0 0 25px #909399;\n    }\n\n    .login-title {\n        text-align: center;\n        margin: 0 auto 40px auto;\n        color: #303133;\n    }\n</style>\n"],"mappings":"AA+BA;EACAA,IAAA;EACAC,KAAA;IACA,IAAAC,aAAA,GAAAA,CAAAC,IAAA,EAAAC,KAAA,EAAAC,QAAA;MACA,IAAAD,KAAA;QACA,KAAAE,OAAA,CAAAC,GAAA,2BAAAH,KAAA,EAAAI,IAAA,CAAAC,GAAA;UACAC,OAAA,CAAAC,GAAA,CAAAF,GAAA;UACA,IAAAA,GAAA,CAAAG,IAAA;YACA,OAAAP,QAAA,KAAAQ,KAAA,CAAAJ,GAAA,CAAAK,GAAA;UACA;YACAT,QAAA;UACA;QACA;MACA;IACA;IACA,IAAAU,YAAA,GAAAA,CAAAZ,IAAA,EAAAC,KAAA,EAAAC,QAAA;MACA,IAAAD,KAAA;QACAC,QAAA,KAAAQ,KAAA;MACA,WAAAT,KAAA,UAAAY,IAAA,CAAAC,QAAA;QACAZ,QAAA,KAAAQ,KAAA;MACA;QACAR,QAAA;MACA;IACA;IACA;MACAW,IAAA;QACAE,QAAA;QACAD,QAAA;QACAE,SAAA;MACA;MACA;MACAC,KAAA;QACAF,QAAA,GACA;UAAAG,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,GACA;UAAAC,GAAA;UAAAC,GAAA;UAAAH,OAAA;UAAAC,OAAA;QAAA,GACA;UAAAG,SAAA,EAAAxB,aAAA;UAAAqB,OAAA;QAAA,EACA;QACAN,QAAA,GACA;UAAAI,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,GACA;UAAAC,GAAA;UAAAC,GAAA;UAAAH,OAAA;UAAAC,OAAA;QAAA,EACA;QACAJ,SAAA,GACA;UAAAO,SAAA,EAAAX,YAAA;UAAAQ,OAAA;QAAA,GACA;UAAAC,GAAA;UAAAC,GAAA;UAAAH,OAAA;UAAAC,OAAA;QAAA;MAEA;MACA;MACAI,aAAA;IACA;EACA;EACAC,OAAA;IACAC,WAAA,WAAAA,CAAA;MACAnB,OAAA,CAAAC,GAAA;IACA;IACAmB,SAAAC,QAAA;MACA;MACA,KAAAC,KAAA,CAAAD,QAAA,EAAAE,QAAA,CAAAC,KAAA;QACA,IAAAA,KAAA;UACA,KAAA5B,OAAA,CAAA6B,IAAA;YACAjB,QAAA,OAAAF,IAAA,CAAAE,QAAA;YACAD,QAAA,OAAAD,IAAA,CAAAC;UACA,GACAT,IAAA,CAAAC,GAAA;YACA,IAAAA,GAAA,CAAAG,IAAA;cACA;cACA,KAAAwB,OAAA,CAAAC,IAAA;cACA,KAAAC,QAAA,CAAAC,OAAA;YACA;cACA7B,OAAA,CAAAC,GAAA,CAAAF,GAAA,CAAAR,IAAA;cACA,KAAAqC,QAAA,CAAAE,KAAA,MAAAxB,IAAA,CAAAE,QAAA;YACA;UACA;QAGA;UACA,KAAAS,aAAA;UACA;QACA;MACA;IACA;EAEA;EACAc,QAAA;IACA/B,OAAA,CAAAC,GAAA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}